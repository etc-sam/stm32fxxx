ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"i2c-std.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.__enable_irq,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  23              	__enable_irq:
  24              	.LFB0:
  25              		.file 1 "./.driver/CMSIS/Core/core_cm3.h"
   1:./.driver/CMSIS/Core/core_cm3.h **** /**************************************************************************//**
   2:./.driver/CMSIS/Core/core_cm3.h ****  * @file     core_cm3.h
   3:./.driver/CMSIS/Core/core_cm3.h ****  * @brief    CMSIS Cortex-M3 Core Peripheral Access Layer Header File
   4:./.driver/CMSIS/Core/core_cm3.h ****  * @version  V1.30
   5:./.driver/CMSIS/Core/core_cm3.h ****  * @date     30. October 2009
   6:./.driver/CMSIS/Core/core_cm3.h ****  *
   7:./.driver/CMSIS/Core/core_cm3.h ****  * @note
   8:./.driver/CMSIS/Core/core_cm3.h ****  * Copyright (C) 2009 ARM Limited. All rights reserved.
   9:./.driver/CMSIS/Core/core_cm3.h ****  *
  10:./.driver/CMSIS/Core/core_cm3.h ****  * @par
  11:./.driver/CMSIS/Core/core_cm3.h ****  * ARM Limited (ARM) is supplying this software for use with Cortex-M 
  12:./.driver/CMSIS/Core/core_cm3.h ****  * processor based microcontrollers.  This file can be freely distributed 
  13:./.driver/CMSIS/Core/core_cm3.h ****  * within development tools that are supporting such ARM based processors. 
  14:./.driver/CMSIS/Core/core_cm3.h ****  *
  15:./.driver/CMSIS/Core/core_cm3.h ****  * @par
  16:./.driver/CMSIS/Core/core_cm3.h ****  * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
  17:./.driver/CMSIS/Core/core_cm3.h ****  * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
  18:./.driver/CMSIS/Core/core_cm3.h ****  * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
  19:./.driver/CMSIS/Core/core_cm3.h ****  * ARM SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL, OR
  20:./.driver/CMSIS/Core/core_cm3.h ****  * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
  21:./.driver/CMSIS/Core/core_cm3.h ****  *
  22:./.driver/CMSIS/Core/core_cm3.h ****  ******************************************************************************/
  23:./.driver/CMSIS/Core/core_cm3.h **** 
  24:./.driver/CMSIS/Core/core_cm3.h **** #ifndef __CM3_CORE_H__
  25:./.driver/CMSIS/Core/core_cm3.h **** #define __CM3_CORE_H__
  26:./.driver/CMSIS/Core/core_cm3.h **** 
  27:./.driver/CMSIS/Core/core_cm3.h **** /** @addtogroup CMSIS_CM3_core_LintCinfiguration CMSIS CM3 Core Lint Configuration
  28:./.driver/CMSIS/Core/core_cm3.h ****  *
  29:./.driver/CMSIS/Core/core_cm3.h ****  * List of Lint messages which will be suppressed and not shown:
  30:./.driver/CMSIS/Core/core_cm3.h ****  *   - Error 10: \n
  31:./.driver/CMSIS/Core/core_cm3.h ****  *     register uint32_t __regBasePri         __asm("basepri"); \n
  32:./.driver/CMSIS/Core/core_cm3.h ****  *     Error 10: Expecting ';'
  33:./.driver/CMSIS/Core/core_cm3.h ****  * .
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s 			page 2


  34:./.driver/CMSIS/Core/core_cm3.h ****  *   - Error 530: \n
  35:./.driver/CMSIS/Core/core_cm3.h ****  *     return(__regBasePri); \n
  36:./.driver/CMSIS/Core/core_cm3.h ****  *     Warning 530: Symbol '__regBasePri' (line 264) not initialized
  37:./.driver/CMSIS/Core/core_cm3.h ****  * . 
  38:./.driver/CMSIS/Core/core_cm3.h ****  *   - Error 550: \n
  39:./.driver/CMSIS/Core/core_cm3.h ****  *     __regBasePri = (basePri & 0x1ff); \n
  40:./.driver/CMSIS/Core/core_cm3.h ****  *     Warning 550: Symbol '__regBasePri' (line 271) not accessed
  41:./.driver/CMSIS/Core/core_cm3.h ****  * .
  42:./.driver/CMSIS/Core/core_cm3.h ****  *   - Error 754: \n
  43:./.driver/CMSIS/Core/core_cm3.h ****  *     uint32_t RESERVED0[24]; \n
  44:./.driver/CMSIS/Core/core_cm3.h ****  *     Info 754: local structure member '<some, not used in the HAL>' (line 109, file ./cm3_core.h)
  45:./.driver/CMSIS/Core/core_cm3.h ****  * .
  46:./.driver/CMSIS/Core/core_cm3.h ****  *   - Error 750: \n
  47:./.driver/CMSIS/Core/core_cm3.h ****  *     #define __CM3_CORE_H__ \n
  48:./.driver/CMSIS/Core/core_cm3.h ****  *     Info 750: local macro '__CM3_CORE_H__' (line 43, file./cm3_core.h) not referenced
  49:./.driver/CMSIS/Core/core_cm3.h ****  * .
  50:./.driver/CMSIS/Core/core_cm3.h ****  *   - Error 528: \n
  51:./.driver/CMSIS/Core/core_cm3.h ****  *     static __INLINE void NVIC_DisableIRQ(uint32_t IRQn) \n
  52:./.driver/CMSIS/Core/core_cm3.h ****  *     Warning 528: Symbol 'NVIC_DisableIRQ(unsigned int)' (line 419, file ./cm3_core.h) not refere
  53:./.driver/CMSIS/Core/core_cm3.h ****  * .
  54:./.driver/CMSIS/Core/core_cm3.h ****  *   - Error 751: \n
  55:./.driver/CMSIS/Core/core_cm3.h ****  *     } InterruptType_Type; \n
  56:./.driver/CMSIS/Core/core_cm3.h ****  *     Info 751: local typedef 'InterruptType_Type' (line 170, file ./cm3_core.h) not referenced
  57:./.driver/CMSIS/Core/core_cm3.h ****  * .
  58:./.driver/CMSIS/Core/core_cm3.h ****  * Note:  To re-enable a Message, insert a space before 'lint' *
  59:./.driver/CMSIS/Core/core_cm3.h ****  *
  60:./.driver/CMSIS/Core/core_cm3.h ****  */
  61:./.driver/CMSIS/Core/core_cm3.h **** 
  62:./.driver/CMSIS/Core/core_cm3.h **** /*lint -save */
  63:./.driver/CMSIS/Core/core_cm3.h **** /*lint -e10  */
  64:./.driver/CMSIS/Core/core_cm3.h **** /*lint -e530 */
  65:./.driver/CMSIS/Core/core_cm3.h **** /*lint -e550 */
  66:./.driver/CMSIS/Core/core_cm3.h **** /*lint -e754 */
  67:./.driver/CMSIS/Core/core_cm3.h **** /*lint -e750 */
  68:./.driver/CMSIS/Core/core_cm3.h **** /*lint -e528 */
  69:./.driver/CMSIS/Core/core_cm3.h **** /*lint -e751 */
  70:./.driver/CMSIS/Core/core_cm3.h **** 
  71:./.driver/CMSIS/Core/core_cm3.h **** 
  72:./.driver/CMSIS/Core/core_cm3.h **** /** @addtogroup CMSIS_CM3_core_definitions CM3 Core Definitions
  73:./.driver/CMSIS/Core/core_cm3.h ****   This file defines all structures and symbols for CMSIS core:
  74:./.driver/CMSIS/Core/core_cm3.h ****     - CMSIS version number
  75:./.driver/CMSIS/Core/core_cm3.h ****     - Cortex-M core registers and bitfields
  76:./.driver/CMSIS/Core/core_cm3.h ****     - Cortex-M core peripheral base address
  77:./.driver/CMSIS/Core/core_cm3.h ****   @{
  78:./.driver/CMSIS/Core/core_cm3.h ****  */
  79:./.driver/CMSIS/Core/core_cm3.h **** 
  80:./.driver/CMSIS/Core/core_cm3.h **** #ifdef __cplusplus
  81:./.driver/CMSIS/Core/core_cm3.h ****  extern "C" {
  82:./.driver/CMSIS/Core/core_cm3.h **** #endif 
  83:./.driver/CMSIS/Core/core_cm3.h **** 
  84:./.driver/CMSIS/Core/core_cm3.h **** #define __CM3_CMSIS_VERSION_MAIN  (0x01)                                                       /*!<
  85:./.driver/CMSIS/Core/core_cm3.h **** #define __CM3_CMSIS_VERSION_SUB   (0x30)                                                       /*!<
  86:./.driver/CMSIS/Core/core_cm3.h **** #define __CM3_CMSIS_VERSION       ((__CM3_CMSIS_VERSION_MAIN << 16) | __CM3_CMSIS_VERSION_SUB) /*!<
  87:./.driver/CMSIS/Core/core_cm3.h **** 
  88:./.driver/CMSIS/Core/core_cm3.h **** #define __CORTEX_M                (0x03)                                                       /*!<
  89:./.driver/CMSIS/Core/core_cm3.h **** 
  90:./.driver/CMSIS/Core/core_cm3.h **** #include <stdint.h>                           /* Include standard types */
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s 			page 3


  91:./.driver/CMSIS/Core/core_cm3.h **** 
  92:./.driver/CMSIS/Core/core_cm3.h **** #if defined (__ICCARM__)
  93:./.driver/CMSIS/Core/core_cm3.h ****   #include <intrinsics.h>                     /* IAR Intrinsics   */
  94:./.driver/CMSIS/Core/core_cm3.h **** #endif
  95:./.driver/CMSIS/Core/core_cm3.h **** 
  96:./.driver/CMSIS/Core/core_cm3.h **** 
  97:./.driver/CMSIS/Core/core_cm3.h **** #ifndef __NVIC_PRIO_BITS
  98:./.driver/CMSIS/Core/core_cm3.h ****   #define __NVIC_PRIO_BITS    4               /*!< standard definition for NVIC Priority Bits */
  99:./.driver/CMSIS/Core/core_cm3.h **** #endif
 100:./.driver/CMSIS/Core/core_cm3.h **** 
 101:./.driver/CMSIS/Core/core_cm3.h **** 
 102:./.driver/CMSIS/Core/core_cm3.h **** 
 103:./.driver/CMSIS/Core/core_cm3.h **** 
 104:./.driver/CMSIS/Core/core_cm3.h **** /**
 105:./.driver/CMSIS/Core/core_cm3.h ****  * IO definitions
 106:./.driver/CMSIS/Core/core_cm3.h ****  *
 107:./.driver/CMSIS/Core/core_cm3.h ****  * define access restrictions to peripheral registers
 108:./.driver/CMSIS/Core/core_cm3.h ****  */
 109:./.driver/CMSIS/Core/core_cm3.h **** 
 110:./.driver/CMSIS/Core/core_cm3.h **** #ifdef __cplusplus
 111:./.driver/CMSIS/Core/core_cm3.h ****   #define     __I     volatile                /*!< defines 'read only' permissions      */
 112:./.driver/CMSIS/Core/core_cm3.h **** #else
 113:./.driver/CMSIS/Core/core_cm3.h ****   #define     __I     volatile const          /*!< defines 'read only' permissions      */
 114:./.driver/CMSIS/Core/core_cm3.h **** #endif
 115:./.driver/CMSIS/Core/core_cm3.h **** #define     __O     volatile                  /*!< defines 'write only' permissions     */
 116:./.driver/CMSIS/Core/core_cm3.h **** #define     __IO    volatile                  /*!< defines 'read / write' permissions   */
 117:./.driver/CMSIS/Core/core_cm3.h **** 
 118:./.driver/CMSIS/Core/core_cm3.h **** 
 119:./.driver/CMSIS/Core/core_cm3.h **** 
 120:./.driver/CMSIS/Core/core_cm3.h **** /*******************************************************************************
 121:./.driver/CMSIS/Core/core_cm3.h ****  *                 Register Abstraction
 122:./.driver/CMSIS/Core/core_cm3.h ****  ******************************************************************************/
 123:./.driver/CMSIS/Core/core_cm3.h **** /** @addtogroup CMSIS_CM3_core_register CMSIS CM3 Core Register
 124:./.driver/CMSIS/Core/core_cm3.h ****  @{
 125:./.driver/CMSIS/Core/core_cm3.h **** */
 126:./.driver/CMSIS/Core/core_cm3.h **** 
 127:./.driver/CMSIS/Core/core_cm3.h **** 
 128:./.driver/CMSIS/Core/core_cm3.h **** /** @addtogroup CMSIS_CM3_NVIC CMSIS CM3 NVIC
 129:./.driver/CMSIS/Core/core_cm3.h ****   memory mapped structure for Nested Vectored Interrupt Controller (NVIC)
 130:./.driver/CMSIS/Core/core_cm3.h ****   @{
 131:./.driver/CMSIS/Core/core_cm3.h ****  */
 132:./.driver/CMSIS/Core/core_cm3.h **** typedef struct
 133:./.driver/CMSIS/Core/core_cm3.h **** {
 134:./.driver/CMSIS/Core/core_cm3.h ****   __IO uint32_t ISER[8];                      /*!< Offset: 0x000  Interrupt Set Enable Register    
 135:./.driver/CMSIS/Core/core_cm3.h ****        uint32_t RESERVED0[24];                                   
 136:./.driver/CMSIS/Core/core_cm3.h ****   __IO uint32_t ICER[8];                      /*!< Offset: 0x080  Interrupt Clear Enable Register  
 137:./.driver/CMSIS/Core/core_cm3.h ****        uint32_t RSERVED1[24];                                    
 138:./.driver/CMSIS/Core/core_cm3.h ****   __IO uint32_t ISPR[8];                      /*!< Offset: 0x100  Interrupt Set Pending Register   
 139:./.driver/CMSIS/Core/core_cm3.h ****        uint32_t RESERVED2[24];                                   
 140:./.driver/CMSIS/Core/core_cm3.h ****   __IO uint32_t ICPR[8];                      /*!< Offset: 0x180  Interrupt Clear Pending Register 
 141:./.driver/CMSIS/Core/core_cm3.h ****        uint32_t RESERVED3[24];                                   
 142:./.driver/CMSIS/Core/core_cm3.h ****   __IO uint32_t IABR[8];                      /*!< Offset: 0x200  Interrupt Active bit Register    
 143:./.driver/CMSIS/Core/core_cm3.h ****        uint32_t RESERVED4[56];                                   
 144:./.driver/CMSIS/Core/core_cm3.h ****   __IO uint8_t  IP[240];                      /*!< Offset: 0x300  Interrupt Priority Register (8Bit
 145:./.driver/CMSIS/Core/core_cm3.h ****        uint32_t RESERVED5[644];                                  
 146:./.driver/CMSIS/Core/core_cm3.h ****   __O  uint32_t STIR;                         /*!< Offset: 0xE00  Software Trigger Interrupt Regist
 147:./.driver/CMSIS/Core/core_cm3.h **** }  NVIC_Type;                                               
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s 			page 4


 148:./.driver/CMSIS/Core/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_NVIC */
 149:./.driver/CMSIS/Core/core_cm3.h **** 
 150:./.driver/CMSIS/Core/core_cm3.h **** 
 151:./.driver/CMSIS/Core/core_cm3.h **** /** @addtogroup CMSIS_CM3_SCB CMSIS CM3 SCB
 152:./.driver/CMSIS/Core/core_cm3.h ****   memory mapped structure for System Control Block (SCB)
 153:./.driver/CMSIS/Core/core_cm3.h ****   @{
 154:./.driver/CMSIS/Core/core_cm3.h ****  */
 155:./.driver/CMSIS/Core/core_cm3.h **** typedef struct
 156:./.driver/CMSIS/Core/core_cm3.h **** {
 157:./.driver/CMSIS/Core/core_cm3.h ****   __I  uint32_t CPUID;                        /*!< Offset: 0x00  CPU ID Base Register              
 158:./.driver/CMSIS/Core/core_cm3.h ****   __IO uint32_t ICSR;                         /*!< Offset: 0x04  Interrupt Control State Register  
 159:./.driver/CMSIS/Core/core_cm3.h ****   __IO uint32_t VTOR;                         /*!< Offset: 0x08  Vector Table Offset Register      
 160:./.driver/CMSIS/Core/core_cm3.h ****   __IO uint32_t AIRCR;                        /*!< Offset: 0x0C  Application Interrupt / Reset Cont
 161:./.driver/CMSIS/Core/core_cm3.h ****   __IO uint32_t SCR;                          /*!< Offset: 0x10  System Control Register           
 162:./.driver/CMSIS/Core/core_cm3.h ****   __IO uint32_t CCR;                          /*!< Offset: 0x14  Configuration Control Register    
 163:./.driver/CMSIS/Core/core_cm3.h ****   __IO uint8_t  SHP[12];                      /*!< Offset: 0x18  System Handlers Priority Registers
 164:./.driver/CMSIS/Core/core_cm3.h ****   __IO uint32_t SHCSR;                        /*!< Offset: 0x24  System Handler Control and State R
 165:./.driver/CMSIS/Core/core_cm3.h ****   __IO uint32_t CFSR;                         /*!< Offset: 0x28  Configurable Fault Status Register
 166:./.driver/CMSIS/Core/core_cm3.h ****   __IO uint32_t HFSR;                         /*!< Offset: 0x2C  Hard Fault Status Register        
 167:./.driver/CMSIS/Core/core_cm3.h ****   __IO uint32_t DFSR;                         /*!< Offset: 0x30  Debug Fault Status Register       
 168:./.driver/CMSIS/Core/core_cm3.h ****   __IO uint32_t MMFAR;                        /*!< Offset: 0x34  Mem Manage Address Register       
 169:./.driver/CMSIS/Core/core_cm3.h ****   __IO uint32_t BFAR;                         /*!< Offset: 0x38  Bus Fault Address Register        
 170:./.driver/CMSIS/Core/core_cm3.h ****   __IO uint32_t AFSR;                         /*!< Offset: 0x3C  Auxiliary Fault Status Register   
 171:./.driver/CMSIS/Core/core_cm3.h ****   __I  uint32_t PFR[2];                       /*!< Offset: 0x40  Processor Feature Register        
 172:./.driver/CMSIS/Core/core_cm3.h ****   __I  uint32_t DFR;                          /*!< Offset: 0x48  Debug Feature Register            
 173:./.driver/CMSIS/Core/core_cm3.h ****   __I  uint32_t ADR;                          /*!< Offset: 0x4C  Auxiliary Feature Register        
 174:./.driver/CMSIS/Core/core_cm3.h ****   __I  uint32_t MMFR[4];                      /*!< Offset: 0x50  Memory Model Feature Register     
 175:./.driver/CMSIS/Core/core_cm3.h ****   __I  uint32_t ISAR[5];                      /*!< Offset: 0x60  ISA Feature Register              
 176:./.driver/CMSIS/Core/core_cm3.h **** } SCB_Type;                                                
 177:./.driver/CMSIS/Core/core_cm3.h **** 
 178:./.driver/CMSIS/Core/core_cm3.h **** /* SCB CPUID Register Definitions */
 179:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24                                             /*!< SCB 
 180:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFul << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 181:./.driver/CMSIS/Core/core_cm3.h **** 
 182:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_CPUID_VARIANT_Pos              20                                             /*!< SCB 
 183:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_CPUID_VARIANT_Msk              (0xFul << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 184:./.driver/CMSIS/Core/core_cm3.h **** 
 185:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_CPUID_PARTNO_Pos                4                                             /*!< SCB 
 186:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFul << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 187:./.driver/CMSIS/Core/core_cm3.h **** 
 188:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_CPUID_REVISION_Pos              0                                             /*!< SCB 
 189:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_CPUID_REVISION_Msk             (0xFul << SCB_CPUID_REVISION_Pos)              /*!< SCB 
 190:./.driver/CMSIS/Core/core_cm3.h **** 
 191:./.driver/CMSIS/Core/core_cm3.h **** /* SCB Interrupt Control State Register Definitions */
 192:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_ICSR_NMIPENDSET_Pos            31                                             /*!< SCB 
 193:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1ul << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 194:./.driver/CMSIS/Core/core_cm3.h **** 
 195:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_ICSR_PENDSVSET_Pos             28                                             /*!< SCB 
 196:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_ICSR_PENDSVSET_Msk             (1ul << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 197:./.driver/CMSIS/Core/core_cm3.h **** 
 198:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_ICSR_PENDSVCLR_Pos             27                                             /*!< SCB 
 199:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1ul << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 200:./.driver/CMSIS/Core/core_cm3.h **** 
 201:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_ICSR_PENDSTSET_Pos             26                                             /*!< SCB 
 202:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_ICSR_PENDSTSET_Msk             (1ul << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 203:./.driver/CMSIS/Core/core_cm3.h **** 
 204:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_ICSR_PENDSTCLR_Pos             25                                             /*!< SCB 
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s 			page 5


 205:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1ul << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 206:./.driver/CMSIS/Core/core_cm3.h **** 
 207:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23                                             /*!< SCB 
 208:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1ul << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 209:./.driver/CMSIS/Core/core_cm3.h **** 
 210:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_ICSR_ISRPENDING_Pos            22                                             /*!< SCB 
 211:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_ICSR_ISRPENDING_Msk            (1ul << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 212:./.driver/CMSIS/Core/core_cm3.h **** 
 213:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_ICSR_VECTPENDING_Pos           12                                             /*!< SCB 
 214:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFul << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 215:./.driver/CMSIS/Core/core_cm3.h **** 
 216:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_ICSR_RETTOBASE_Pos             11                                             /*!< SCB 
 217:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_ICSR_RETTOBASE_Msk             (1ul << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 218:./.driver/CMSIS/Core/core_cm3.h **** 
 219:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_ICSR_VECTACTIVE_Pos             0                                             /*!< SCB 
 220:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFul << SCB_ICSR_VECTACTIVE_Pos)           /*!< SCB 
 221:./.driver/CMSIS/Core/core_cm3.h **** 
 222:./.driver/CMSIS/Core/core_cm3.h **** /* SCB Interrupt Control State Register Definitions */
 223:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_VTOR_TBLBASE_Pos               29                                             /*!< SCB 
 224:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_VTOR_TBLBASE_Msk               (0x1FFul << SCB_VTOR_TBLBASE_Pos)              /*!< SCB 
 225:./.driver/CMSIS/Core/core_cm3.h **** 
 226:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_VTOR_TBLOFF_Pos                 7                                             /*!< SCB 
 227:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_VTOR_TBLOFF_Msk                (0x3FFFFFul << SCB_VTOR_TBLOFF_Pos)            /*!< SCB 
 228:./.driver/CMSIS/Core/core_cm3.h **** 
 229:./.driver/CMSIS/Core/core_cm3.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 230:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_AIRCR_VECTKEY_Pos              16                                             /*!< SCB 
 231:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFul << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 232:./.driver/CMSIS/Core/core_cm3.h **** 
 233:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16                                             /*!< SCB 
 234:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFul << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 235:./.driver/CMSIS/Core/core_cm3.h **** 
 236:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_AIRCR_ENDIANESS_Pos            15                                             /*!< SCB 
 237:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1ul << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 238:./.driver/CMSIS/Core/core_cm3.h **** 
 239:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_AIRCR_PRIGROUP_Pos              8                                             /*!< SCB 
 240:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7ul << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 241:./.driver/CMSIS/Core/core_cm3.h **** 
 242:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2                                             /*!< SCB 
 243:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1ul << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 244:./.driver/CMSIS/Core/core_cm3.h **** 
 245:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1                                             /*!< SCB 
 246:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1ul << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 247:./.driver/CMSIS/Core/core_cm3.h **** 
 248:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_AIRCR_VECTRESET_Pos             0                                             /*!< SCB 
 249:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_AIRCR_VECTRESET_Msk            (1ul << SCB_AIRCR_VECTRESET_Pos)               /*!< SCB 
 250:./.driver/CMSIS/Core/core_cm3.h **** 
 251:./.driver/CMSIS/Core/core_cm3.h **** /* SCB System Control Register Definitions */
 252:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_SCR_SEVONPEND_Pos               4                                             /*!< SCB 
 253:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_SCR_SEVONPEND_Msk              (1ul << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 254:./.driver/CMSIS/Core/core_cm3.h **** 
 255:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_SCR_SLEEPDEEP_Pos               2                                             /*!< SCB 
 256:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1ul << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 257:./.driver/CMSIS/Core/core_cm3.h **** 
 258:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1                                             /*!< SCB 
 259:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1ul << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 260:./.driver/CMSIS/Core/core_cm3.h **** 
 261:./.driver/CMSIS/Core/core_cm3.h **** /* SCB Configuration Control Register Definitions */
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s 			page 6


 262:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_CCR_STKALIGN_Pos                9                                             /*!< SCB 
 263:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_CCR_STKALIGN_Msk               (1ul << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 264:./.driver/CMSIS/Core/core_cm3.h **** 
 265:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_CCR_BFHFNMIGN_Pos               8                                             /*!< SCB 
 266:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1ul << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 267:./.driver/CMSIS/Core/core_cm3.h **** 
 268:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_CCR_DIV_0_TRP_Pos               4                                             /*!< SCB 
 269:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1ul << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 270:./.driver/CMSIS/Core/core_cm3.h **** 
 271:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3                                             /*!< SCB 
 272:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1ul << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 273:./.driver/CMSIS/Core/core_cm3.h **** 
 274:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_CCR_USERSETMPEND_Pos            1                                             /*!< SCB 
 275:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_CCR_USERSETMPEND_Msk           (1ul << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 276:./.driver/CMSIS/Core/core_cm3.h **** 
 277:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0                                             /*!< SCB 
 278:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1ul << SCB_CCR_NONBASETHRDENA_Pos)            /*!< SCB 
 279:./.driver/CMSIS/Core/core_cm3.h **** 
 280:./.driver/CMSIS/Core/core_cm3.h **** /* SCB System Handler Control and State Register Definitions */
 281:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18                                             /*!< SCB 
 282:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1ul << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 283:./.driver/CMSIS/Core/core_cm3.h **** 
 284:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17                                             /*!< SCB 
 285:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1ul << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 286:./.driver/CMSIS/Core/core_cm3.h **** 
 287:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16                                             /*!< SCB 
 288:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1ul << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 289:./.driver/CMSIS/Core/core_cm3.h **** 
 290:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15                                             /*!< SCB 
 291:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1ul << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 292:./.driver/CMSIS/Core/core_cm3.h **** 
 293:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14                                             /*!< SCB 
 294:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1ul << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 295:./.driver/CMSIS/Core/core_cm3.h **** 
 296:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13                                             /*!< SCB 
 297:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1ul << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 298:./.driver/CMSIS/Core/core_cm3.h **** 
 299:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12                                             /*!< SCB 
 300:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1ul << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 301:./.driver/CMSIS/Core/core_cm3.h **** 
 302:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11                                             /*!< SCB 
 303:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1ul << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 304:./.driver/CMSIS/Core/core_cm3.h **** 
 305:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_SHCSR_PENDSVACT_Pos            10                                             /*!< SCB 
 306:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1ul << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 307:./.driver/CMSIS/Core/core_cm3.h **** 
 308:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_SHCSR_MONITORACT_Pos            8                                             /*!< SCB 
 309:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_SHCSR_MONITORACT_Msk           (1ul << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 310:./.driver/CMSIS/Core/core_cm3.h **** 
 311:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_SHCSR_SVCALLACT_Pos             7                                             /*!< SCB 
 312:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1ul << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 313:./.driver/CMSIS/Core/core_cm3.h ****                                      
 314:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3                                             /*!< SCB 
 315:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1ul << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 316:./.driver/CMSIS/Core/core_cm3.h **** 
 317:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1                                             /*!< SCB 
 318:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1ul << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s 			page 7


 319:./.driver/CMSIS/Core/core_cm3.h **** 
 320:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0                                             /*!< SCB 
 321:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1ul << SCB_SHCSR_MEMFAULTACT_Pos)             /*!< SCB 
 322:./.driver/CMSIS/Core/core_cm3.h **** 
 323:./.driver/CMSIS/Core/core_cm3.h **** /* SCB Configurable Fault Status Registers Definitions */
 324:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_CFSR_USGFAULTSR_Pos            16                                             /*!< SCB 
 325:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFul << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 326:./.driver/CMSIS/Core/core_cm3.h **** 
 327:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8                                             /*!< SCB 
 328:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFul << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 329:./.driver/CMSIS/Core/core_cm3.h **** 
 330:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0                                             /*!< SCB 
 331:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFul << SCB_CFSR_MEMFAULTSR_Pos)            /*!< SCB 
 332:./.driver/CMSIS/Core/core_cm3.h **** 
 333:./.driver/CMSIS/Core/core_cm3.h **** /* SCB Hard Fault Status Registers Definitions */
 334:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_HFSR_DEBUGEVT_Pos              31                                             /*!< SCB 
 335:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1ul << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 336:./.driver/CMSIS/Core/core_cm3.h **** 
 337:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_HFSR_FORCED_Pos                30                                             /*!< SCB 
 338:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_HFSR_FORCED_Msk                (1ul << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 339:./.driver/CMSIS/Core/core_cm3.h **** 
 340:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_HFSR_VECTTBL_Pos                1                                             /*!< SCB 
 341:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_HFSR_VECTTBL_Msk               (1ul << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 342:./.driver/CMSIS/Core/core_cm3.h **** 
 343:./.driver/CMSIS/Core/core_cm3.h **** /* SCB Debug Fault Status Register Definitions */
 344:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_DFSR_EXTERNAL_Pos               4                                             /*!< SCB 
 345:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_DFSR_EXTERNAL_Msk              (1ul << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 346:./.driver/CMSIS/Core/core_cm3.h **** 
 347:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_DFSR_VCATCH_Pos                 3                                             /*!< SCB 
 348:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_DFSR_VCATCH_Msk                (1ul << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 349:./.driver/CMSIS/Core/core_cm3.h **** 
 350:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_DFSR_DWTTRAP_Pos                2                                             /*!< SCB 
 351:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_DFSR_DWTTRAP_Msk               (1ul << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 352:./.driver/CMSIS/Core/core_cm3.h **** 
 353:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_DFSR_BKPT_Pos                   1                                             /*!< SCB 
 354:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_DFSR_BKPT_Msk                  (1ul << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 355:./.driver/CMSIS/Core/core_cm3.h **** 
 356:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_DFSR_HALTED_Pos                 0                                             /*!< SCB 
 357:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_DFSR_HALTED_Msk                (1ul << SCB_DFSR_HALTED_Pos)                   /*!< SCB 
 358:./.driver/CMSIS/Core/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_SCB */
 359:./.driver/CMSIS/Core/core_cm3.h **** 
 360:./.driver/CMSIS/Core/core_cm3.h **** 
 361:./.driver/CMSIS/Core/core_cm3.h **** /** @addtogroup CMSIS_CM3_SysTick CMSIS CM3 SysTick
 362:./.driver/CMSIS/Core/core_cm3.h ****   memory mapped structure for SysTick
 363:./.driver/CMSIS/Core/core_cm3.h ****   @{
 364:./.driver/CMSIS/Core/core_cm3.h ****  */
 365:./.driver/CMSIS/Core/core_cm3.h **** typedef struct
 366:./.driver/CMSIS/Core/core_cm3.h **** {
 367:./.driver/CMSIS/Core/core_cm3.h ****   __IO uint32_t CTRL;                         /*!< Offset: 0x00  SysTick Control and Status Registe
 368:./.driver/CMSIS/Core/core_cm3.h ****   __IO uint32_t LOAD;                         /*!< Offset: 0x04  SysTick Reload Value Register     
 369:./.driver/CMSIS/Core/core_cm3.h ****   __IO uint32_t VAL;                          /*!< Offset: 0x08  SysTick Current Value Register    
 370:./.driver/CMSIS/Core/core_cm3.h ****   __I  uint32_t CALIB;                        /*!< Offset: 0x0C  SysTick Calibration Register      
 371:./.driver/CMSIS/Core/core_cm3.h **** } SysTick_Type;
 372:./.driver/CMSIS/Core/core_cm3.h **** 
 373:./.driver/CMSIS/Core/core_cm3.h **** /* SysTick Control / Status Register Definitions */
 374:./.driver/CMSIS/Core/core_cm3.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16                                             /*!< SysT
 375:./.driver/CMSIS/Core/core_cm3.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1ul << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s 			page 8


 376:./.driver/CMSIS/Core/core_cm3.h **** 
 377:./.driver/CMSIS/Core/core_cm3.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2                                             /*!< SysT
 378:./.driver/CMSIS/Core/core_cm3.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1ul << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 379:./.driver/CMSIS/Core/core_cm3.h **** 
 380:./.driver/CMSIS/Core/core_cm3.h **** #define SysTick_CTRL_TICKINT_Pos            1                                             /*!< SysT
 381:./.driver/CMSIS/Core/core_cm3.h **** #define SysTick_CTRL_TICKINT_Msk           (1ul << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 382:./.driver/CMSIS/Core/core_cm3.h **** 
 383:./.driver/CMSIS/Core/core_cm3.h **** #define SysTick_CTRL_ENABLE_Pos             0                                             /*!< SysT
 384:./.driver/CMSIS/Core/core_cm3.h **** #define SysTick_CTRL_ENABLE_Msk            (1ul << SysTick_CTRL_ENABLE_Pos)               /*!< SysT
 385:./.driver/CMSIS/Core/core_cm3.h **** 
 386:./.driver/CMSIS/Core/core_cm3.h **** /* SysTick Reload Register Definitions */
 387:./.driver/CMSIS/Core/core_cm3.h **** #define SysTick_LOAD_RELOAD_Pos             0                                             /*!< SysT
 388:./.driver/CMSIS/Core/core_cm3.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFul << SysTick_LOAD_RELOAD_Pos)        /*!< SysT
 389:./.driver/CMSIS/Core/core_cm3.h **** 
 390:./.driver/CMSIS/Core/core_cm3.h **** /* SysTick Current Register Definitions */
 391:./.driver/CMSIS/Core/core_cm3.h **** #define SysTick_VAL_CURRENT_Pos             0                                             /*!< SysT
 392:./.driver/CMSIS/Core/core_cm3.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFul << SysTick_VAL_CURRENT_Pos)        /*!< SysT
 393:./.driver/CMSIS/Core/core_cm3.h **** 
 394:./.driver/CMSIS/Core/core_cm3.h **** /* SysTick Calibration Register Definitions */
 395:./.driver/CMSIS/Core/core_cm3.h **** #define SysTick_CALIB_NOREF_Pos            31                                             /*!< SysT
 396:./.driver/CMSIS/Core/core_cm3.h **** #define SysTick_CALIB_NOREF_Msk            (1ul << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 397:./.driver/CMSIS/Core/core_cm3.h **** 
 398:./.driver/CMSIS/Core/core_cm3.h **** #define SysTick_CALIB_SKEW_Pos             30                                             /*!< SysT
 399:./.driver/CMSIS/Core/core_cm3.h **** #define SysTick_CALIB_SKEW_Msk             (1ul << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 400:./.driver/CMSIS/Core/core_cm3.h **** 
 401:./.driver/CMSIS/Core/core_cm3.h **** #define SysTick_CALIB_TENMS_Pos             0                                             /*!< SysT
 402:./.driver/CMSIS/Core/core_cm3.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFul << SysTick_VAL_CURRENT_Pos)        /*!< SysT
 403:./.driver/CMSIS/Core/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_SysTick */
 404:./.driver/CMSIS/Core/core_cm3.h **** 
 405:./.driver/CMSIS/Core/core_cm3.h **** 
 406:./.driver/CMSIS/Core/core_cm3.h **** /** @addtogroup CMSIS_CM3_ITM CMSIS CM3 ITM
 407:./.driver/CMSIS/Core/core_cm3.h ****   memory mapped structure for Instrumentation Trace Macrocell (ITM)
 408:./.driver/CMSIS/Core/core_cm3.h ****   @{
 409:./.driver/CMSIS/Core/core_cm3.h ****  */
 410:./.driver/CMSIS/Core/core_cm3.h **** typedef struct
 411:./.driver/CMSIS/Core/core_cm3.h **** {
 412:./.driver/CMSIS/Core/core_cm3.h ****   __O  union  
 413:./.driver/CMSIS/Core/core_cm3.h ****   {
 414:./.driver/CMSIS/Core/core_cm3.h ****     __O  uint8_t    u8;                       /*!< Offset:       ITM Stimulus Port 8-bit           
 415:./.driver/CMSIS/Core/core_cm3.h ****     __O  uint16_t   u16;                      /*!< Offset:       ITM Stimulus Port 16-bit          
 416:./.driver/CMSIS/Core/core_cm3.h ****     __O  uint32_t   u32;                      /*!< Offset:       ITM Stimulus Port 32-bit          
 417:./.driver/CMSIS/Core/core_cm3.h ****   }  PORT [32];                               /*!< Offset: 0x00  ITM Stimulus Port Registers       
 418:./.driver/CMSIS/Core/core_cm3.h ****        uint32_t RESERVED0[864];                                 
 419:./.driver/CMSIS/Core/core_cm3.h ****   __IO uint32_t TER;                          /*!< Offset:       ITM Trace Enable Register         
 420:./.driver/CMSIS/Core/core_cm3.h ****        uint32_t RESERVED1[15];                                  
 421:./.driver/CMSIS/Core/core_cm3.h ****   __IO uint32_t TPR;                          /*!< Offset:       ITM Trace Privilege Register      
 422:./.driver/CMSIS/Core/core_cm3.h ****        uint32_t RESERVED2[15];                                  
 423:./.driver/CMSIS/Core/core_cm3.h ****   __IO uint32_t TCR;                          /*!< Offset:       ITM Trace Control Register        
 424:./.driver/CMSIS/Core/core_cm3.h ****        uint32_t RESERVED3[29];                                  
 425:./.driver/CMSIS/Core/core_cm3.h ****   __IO uint32_t IWR;                          /*!< Offset:       ITM Integration Write Register    
 426:./.driver/CMSIS/Core/core_cm3.h ****   __IO uint32_t IRR;                          /*!< Offset:       ITM Integration Read Register     
 427:./.driver/CMSIS/Core/core_cm3.h ****   __IO uint32_t IMCR;                         /*!< Offset:       ITM Integration Mode Control Regis
 428:./.driver/CMSIS/Core/core_cm3.h ****        uint32_t RESERVED4[43];                                  
 429:./.driver/CMSIS/Core/core_cm3.h ****   __IO uint32_t LAR;                          /*!< Offset:       ITM Lock Access Register          
 430:./.driver/CMSIS/Core/core_cm3.h ****   __IO uint32_t LSR;                          /*!< Offset:       ITM Lock Status Register          
 431:./.driver/CMSIS/Core/core_cm3.h ****        uint32_t RESERVED5[6];                                   
 432:./.driver/CMSIS/Core/core_cm3.h ****   __I  uint32_t PID4;                         /*!< Offset:       ITM Peripheral Identification Regi
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s 			page 9


 433:./.driver/CMSIS/Core/core_cm3.h ****   __I  uint32_t PID5;                         /*!< Offset:       ITM Peripheral Identification Regi
 434:./.driver/CMSIS/Core/core_cm3.h ****   __I  uint32_t PID6;                         /*!< Offset:       ITM Peripheral Identification Regi
 435:./.driver/CMSIS/Core/core_cm3.h ****   __I  uint32_t PID7;                         /*!< Offset:       ITM Peripheral Identification Regi
 436:./.driver/CMSIS/Core/core_cm3.h ****   __I  uint32_t PID0;                         /*!< Offset:       ITM Peripheral Identification Regi
 437:./.driver/CMSIS/Core/core_cm3.h ****   __I  uint32_t PID1;                         /*!< Offset:       ITM Peripheral Identification Regi
 438:./.driver/CMSIS/Core/core_cm3.h ****   __I  uint32_t PID2;                         /*!< Offset:       ITM Peripheral Identification Regi
 439:./.driver/CMSIS/Core/core_cm3.h ****   __I  uint32_t PID3;                         /*!< Offset:       ITM Peripheral Identification Regi
 440:./.driver/CMSIS/Core/core_cm3.h ****   __I  uint32_t CID0;                         /*!< Offset:       ITM Component  Identification Regi
 441:./.driver/CMSIS/Core/core_cm3.h ****   __I  uint32_t CID1;                         /*!< Offset:       ITM Component  Identification Regi
 442:./.driver/CMSIS/Core/core_cm3.h ****   __I  uint32_t CID2;                         /*!< Offset:       ITM Component  Identification Regi
 443:./.driver/CMSIS/Core/core_cm3.h ****   __I  uint32_t CID3;                         /*!< Offset:       ITM Component  Identification Regi
 444:./.driver/CMSIS/Core/core_cm3.h **** } ITM_Type;                                                
 445:./.driver/CMSIS/Core/core_cm3.h **** 
 446:./.driver/CMSIS/Core/core_cm3.h **** /* ITM Trace Privilege Register Definitions */
 447:./.driver/CMSIS/Core/core_cm3.h **** #define ITM_TPR_PRIVMASK_Pos                0                                             /*!< ITM 
 448:./.driver/CMSIS/Core/core_cm3.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFul << ITM_TPR_PRIVMASK_Pos)                /*!< ITM 
 449:./.driver/CMSIS/Core/core_cm3.h **** 
 450:./.driver/CMSIS/Core/core_cm3.h **** /* ITM Trace Control Register Definitions */
 451:./.driver/CMSIS/Core/core_cm3.h **** #define ITM_TCR_BUSY_Pos                   23                                             /*!< ITM 
 452:./.driver/CMSIS/Core/core_cm3.h **** #define ITM_TCR_BUSY_Msk                   (1ul << ITM_TCR_BUSY_Pos)                      /*!< ITM 
 453:./.driver/CMSIS/Core/core_cm3.h **** 
 454:./.driver/CMSIS/Core/core_cm3.h **** #define ITM_TCR_ATBID_Pos                  16                                             /*!< ITM 
 455:./.driver/CMSIS/Core/core_cm3.h **** #define ITM_TCR_ATBID_Msk                  (0x7Ful << ITM_TCR_ATBID_Pos)                  /*!< ITM 
 456:./.driver/CMSIS/Core/core_cm3.h **** 
 457:./.driver/CMSIS/Core/core_cm3.h **** #define ITM_TCR_TSPrescale_Pos              8                                             /*!< ITM 
 458:./.driver/CMSIS/Core/core_cm3.h **** #define ITM_TCR_TSPrescale_Msk             (3ul << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
 459:./.driver/CMSIS/Core/core_cm3.h **** 
 460:./.driver/CMSIS/Core/core_cm3.h **** #define ITM_TCR_SWOENA_Pos                  4                                             /*!< ITM 
 461:./.driver/CMSIS/Core/core_cm3.h **** #define ITM_TCR_SWOENA_Msk                 (1ul << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
 462:./.driver/CMSIS/Core/core_cm3.h **** 
 463:./.driver/CMSIS/Core/core_cm3.h **** #define ITM_TCR_DWTENA_Pos                  3                                             /*!< ITM 
 464:./.driver/CMSIS/Core/core_cm3.h **** #define ITM_TCR_DWTENA_Msk                 (1ul << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
 465:./.driver/CMSIS/Core/core_cm3.h **** 
 466:./.driver/CMSIS/Core/core_cm3.h **** #define ITM_TCR_SYNCENA_Pos                 2                                             /*!< ITM 
 467:./.driver/CMSIS/Core/core_cm3.h **** #define ITM_TCR_SYNCENA_Msk                (1ul << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
 468:./.driver/CMSIS/Core/core_cm3.h **** 
 469:./.driver/CMSIS/Core/core_cm3.h **** #define ITM_TCR_TSENA_Pos                   1                                             /*!< ITM 
 470:./.driver/CMSIS/Core/core_cm3.h **** #define ITM_TCR_TSENA_Msk                  (1ul << ITM_TCR_TSENA_Pos)                     /*!< ITM 
 471:./.driver/CMSIS/Core/core_cm3.h **** 
 472:./.driver/CMSIS/Core/core_cm3.h **** #define ITM_TCR_ITMENA_Pos                  0                                             /*!< ITM 
 473:./.driver/CMSIS/Core/core_cm3.h **** #define ITM_TCR_ITMENA_Msk                 (1ul << ITM_TCR_ITMENA_Pos)                    /*!< ITM 
 474:./.driver/CMSIS/Core/core_cm3.h **** 
 475:./.driver/CMSIS/Core/core_cm3.h **** /* ITM Integration Write Register Definitions */
 476:./.driver/CMSIS/Core/core_cm3.h **** #define ITM_IWR_ATVALIDM_Pos                0                                             /*!< ITM 
 477:./.driver/CMSIS/Core/core_cm3.h **** #define ITM_IWR_ATVALIDM_Msk               (1ul << ITM_IWR_ATVALIDM_Pos)                  /*!< ITM 
 478:./.driver/CMSIS/Core/core_cm3.h **** 
 479:./.driver/CMSIS/Core/core_cm3.h **** /* ITM Integration Read Register Definitions */
 480:./.driver/CMSIS/Core/core_cm3.h **** #define ITM_IRR_ATREADYM_Pos                0                                             /*!< ITM 
 481:./.driver/CMSIS/Core/core_cm3.h **** #define ITM_IRR_ATREADYM_Msk               (1ul << ITM_IRR_ATREADYM_Pos)                  /*!< ITM 
 482:./.driver/CMSIS/Core/core_cm3.h **** 
 483:./.driver/CMSIS/Core/core_cm3.h **** /* ITM Integration Mode Control Register Definitions */
 484:./.driver/CMSIS/Core/core_cm3.h **** #define ITM_IMCR_INTEGRATION_Pos            0                                             /*!< ITM 
 485:./.driver/CMSIS/Core/core_cm3.h **** #define ITM_IMCR_INTEGRATION_Msk           (1ul << ITM_IMCR_INTEGRATION_Pos)              /*!< ITM 
 486:./.driver/CMSIS/Core/core_cm3.h **** 
 487:./.driver/CMSIS/Core/core_cm3.h **** /* ITM Lock Status Register Definitions */
 488:./.driver/CMSIS/Core/core_cm3.h **** #define ITM_LSR_ByteAcc_Pos                 2                                             /*!< ITM 
 489:./.driver/CMSIS/Core/core_cm3.h **** #define ITM_LSR_ByteAcc_Msk                (1ul << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s 			page 10


 490:./.driver/CMSIS/Core/core_cm3.h **** 
 491:./.driver/CMSIS/Core/core_cm3.h **** #define ITM_LSR_Access_Pos                  1                                             /*!< ITM 
 492:./.driver/CMSIS/Core/core_cm3.h **** #define ITM_LSR_Access_Msk                 (1ul << ITM_LSR_Access_Pos)                    /*!< ITM 
 493:./.driver/CMSIS/Core/core_cm3.h **** 
 494:./.driver/CMSIS/Core/core_cm3.h **** #define ITM_LSR_Present_Pos                 0                                             /*!< ITM 
 495:./.driver/CMSIS/Core/core_cm3.h **** #define ITM_LSR_Present_Msk                (1ul << ITM_LSR_Present_Pos)                   /*!< ITM 
 496:./.driver/CMSIS/Core/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_ITM */
 497:./.driver/CMSIS/Core/core_cm3.h **** 
 498:./.driver/CMSIS/Core/core_cm3.h **** 
 499:./.driver/CMSIS/Core/core_cm3.h **** /** @addtogroup CMSIS_CM3_InterruptType CMSIS CM3 Interrupt Type
 500:./.driver/CMSIS/Core/core_cm3.h ****   memory mapped structure for Interrupt Type
 501:./.driver/CMSIS/Core/core_cm3.h ****   @{
 502:./.driver/CMSIS/Core/core_cm3.h ****  */
 503:./.driver/CMSIS/Core/core_cm3.h **** typedef struct
 504:./.driver/CMSIS/Core/core_cm3.h **** {
 505:./.driver/CMSIS/Core/core_cm3.h ****        uint32_t RESERVED0;
 506:./.driver/CMSIS/Core/core_cm3.h ****   __I  uint32_t ICTR;                         /*!< Offset: 0x04  Interrupt Control Type Register */
 507:./.driver/CMSIS/Core/core_cm3.h **** #if ((defined __CM3_REV) && (__CM3_REV >= 0x200))
 508:./.driver/CMSIS/Core/core_cm3.h ****   __IO uint32_t ACTLR;                        /*!< Offset: 0x08  Auxiliary Control Register      */
 509:./.driver/CMSIS/Core/core_cm3.h **** #else
 510:./.driver/CMSIS/Core/core_cm3.h ****        uint32_t RESERVED1;
 511:./.driver/CMSIS/Core/core_cm3.h **** #endif
 512:./.driver/CMSIS/Core/core_cm3.h **** } InterruptType_Type;
 513:./.driver/CMSIS/Core/core_cm3.h **** 
 514:./.driver/CMSIS/Core/core_cm3.h **** /* Interrupt Controller Type Register Definitions */
 515:./.driver/CMSIS/Core/core_cm3.h **** #define InterruptType_ICTR_INTLINESNUM_Pos  0                                             /*!< Inte
 516:./.driver/CMSIS/Core/core_cm3.h **** #define InterruptType_ICTR_INTLINESNUM_Msk (0x1Ful << InterruptType_ICTR_INTLINESNUM_Pos) /*!< Inte
 517:./.driver/CMSIS/Core/core_cm3.h **** 
 518:./.driver/CMSIS/Core/core_cm3.h **** /* Auxiliary Control Register Definitions */
 519:./.driver/CMSIS/Core/core_cm3.h **** #define InterruptType_ACTLR_DISFOLD_Pos     2                                             /*!< Inte
 520:./.driver/CMSIS/Core/core_cm3.h **** #define InterruptType_ACTLR_DISFOLD_Msk    (1ul << InterruptType_ACTLR_DISFOLD_Pos)       /*!< Inte
 521:./.driver/CMSIS/Core/core_cm3.h **** 
 522:./.driver/CMSIS/Core/core_cm3.h **** #define InterruptType_ACTLR_DISDEFWBUF_Pos  1                                             /*!< Inte
 523:./.driver/CMSIS/Core/core_cm3.h **** #define InterruptType_ACTLR_DISDEFWBUF_Msk (1ul << InterruptType_ACTLR_DISDEFWBUF_Pos)    /*!< Inte
 524:./.driver/CMSIS/Core/core_cm3.h **** 
 525:./.driver/CMSIS/Core/core_cm3.h **** #define InterruptType_ACTLR_DISMCYCINT_Pos  0                                             /*!< Inte
 526:./.driver/CMSIS/Core/core_cm3.h **** #define InterruptType_ACTLR_DISMCYCINT_Msk (1ul << InterruptType_ACTLR_DISMCYCINT_Pos)    /*!< Inte
 527:./.driver/CMSIS/Core/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_InterruptType */
 528:./.driver/CMSIS/Core/core_cm3.h **** 
 529:./.driver/CMSIS/Core/core_cm3.h **** 
 530:./.driver/CMSIS/Core/core_cm3.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1)
 531:./.driver/CMSIS/Core/core_cm3.h **** /** @addtogroup CMSIS_CM3_MPU CMSIS CM3 MPU
 532:./.driver/CMSIS/Core/core_cm3.h ****   memory mapped structure for Memory Protection Unit (MPU)
 533:./.driver/CMSIS/Core/core_cm3.h ****   @{
 534:./.driver/CMSIS/Core/core_cm3.h ****  */
 535:./.driver/CMSIS/Core/core_cm3.h **** typedef struct
 536:./.driver/CMSIS/Core/core_cm3.h **** {
 537:./.driver/CMSIS/Core/core_cm3.h ****   __I  uint32_t TYPE;                         /*!< Offset: 0x00  MPU Type Register                 
 538:./.driver/CMSIS/Core/core_cm3.h ****   __IO uint32_t CTRL;                         /*!< Offset: 0x04  MPU Control Register              
 539:./.driver/CMSIS/Core/core_cm3.h ****   __IO uint32_t RNR;                          /*!< Offset: 0x08  MPU Region RNRber Register        
 540:./.driver/CMSIS/Core/core_cm3.h ****   __IO uint32_t RBAR;                         /*!< Offset: 0x0C  MPU Region Base Address Register  
 541:./.driver/CMSIS/Core/core_cm3.h ****   __IO uint32_t RASR;                         /*!< Offset: 0x10  MPU Region Attribute and Size Regi
 542:./.driver/CMSIS/Core/core_cm3.h ****   __IO uint32_t RBAR_A1;                      /*!< Offset: 0x14  MPU Alias 1 Region Base Address Re
 543:./.driver/CMSIS/Core/core_cm3.h ****   __IO uint32_t RASR_A1;                      /*!< Offset: 0x18  MPU Alias 1 Region Attribute and S
 544:./.driver/CMSIS/Core/core_cm3.h ****   __IO uint32_t RBAR_A2;                      /*!< Offset: 0x1C  MPU Alias 2 Region Base Address Re
 545:./.driver/CMSIS/Core/core_cm3.h ****   __IO uint32_t RASR_A2;                      /*!< Offset: 0x20  MPU Alias 2 Region Attribute and S
 546:./.driver/CMSIS/Core/core_cm3.h ****   __IO uint32_t RBAR_A3;                      /*!< Offset: 0x24  MPU Alias 3 Region Base Address Re
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s 			page 11


 547:./.driver/CMSIS/Core/core_cm3.h ****   __IO uint32_t RASR_A3;                      /*!< Offset: 0x28  MPU Alias 3 Region Attribute and S
 548:./.driver/CMSIS/Core/core_cm3.h **** } MPU_Type;                                                
 549:./.driver/CMSIS/Core/core_cm3.h **** 
 550:./.driver/CMSIS/Core/core_cm3.h **** /* MPU Type Register */
 551:./.driver/CMSIS/Core/core_cm3.h **** #define MPU_TYPE_IREGION_Pos               16                                             /*!< MPU 
 552:./.driver/CMSIS/Core/core_cm3.h **** #define MPU_TYPE_IREGION_Msk               (0xFFul << MPU_TYPE_IREGION_Pos)               /*!< MPU 
 553:./.driver/CMSIS/Core/core_cm3.h **** 
 554:./.driver/CMSIS/Core/core_cm3.h **** #define MPU_TYPE_DREGION_Pos                8                                             /*!< MPU 
 555:./.driver/CMSIS/Core/core_cm3.h **** #define MPU_TYPE_DREGION_Msk               (0xFFul << MPU_TYPE_DREGION_Pos)               /*!< MPU 
 556:./.driver/CMSIS/Core/core_cm3.h **** 
 557:./.driver/CMSIS/Core/core_cm3.h **** #define MPU_TYPE_SEPARATE_Pos               0                                             /*!< MPU 
 558:./.driver/CMSIS/Core/core_cm3.h **** #define MPU_TYPE_SEPARATE_Msk              (1ul << MPU_TYPE_SEPARATE_Pos)                 /*!< MPU 
 559:./.driver/CMSIS/Core/core_cm3.h **** 
 560:./.driver/CMSIS/Core/core_cm3.h **** /* MPU Control Register */
 561:./.driver/CMSIS/Core/core_cm3.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2                                             /*!< MPU 
 562:./.driver/CMSIS/Core/core_cm3.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1ul << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
 563:./.driver/CMSIS/Core/core_cm3.h **** 
 564:./.driver/CMSIS/Core/core_cm3.h **** #define MPU_CTRL_HFNMIENA_Pos               1                                             /*!< MPU 
 565:./.driver/CMSIS/Core/core_cm3.h **** #define MPU_CTRL_HFNMIENA_Msk              (1ul << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
 566:./.driver/CMSIS/Core/core_cm3.h **** 
 567:./.driver/CMSIS/Core/core_cm3.h **** #define MPU_CTRL_ENABLE_Pos                 0                                             /*!< MPU 
 568:./.driver/CMSIS/Core/core_cm3.h **** #define MPU_CTRL_ENABLE_Msk                (1ul << MPU_CTRL_ENABLE_Pos)                   /*!< MPU 
 569:./.driver/CMSIS/Core/core_cm3.h **** 
 570:./.driver/CMSIS/Core/core_cm3.h **** /* MPU Region Number Register */
 571:./.driver/CMSIS/Core/core_cm3.h **** #define MPU_RNR_REGION_Pos                  0                                             /*!< MPU 
 572:./.driver/CMSIS/Core/core_cm3.h **** #define MPU_RNR_REGION_Msk                 (0xFFul << MPU_RNR_REGION_Pos)                 /*!< MPU 
 573:./.driver/CMSIS/Core/core_cm3.h **** 
 574:./.driver/CMSIS/Core/core_cm3.h **** /* MPU Region Base Address Register */
 575:./.driver/CMSIS/Core/core_cm3.h **** #define MPU_RBAR_ADDR_Pos                   5                                             /*!< MPU 
 576:./.driver/CMSIS/Core/core_cm3.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFul << MPU_RBAR_ADDR_Pos)             /*!< MPU 
 577:./.driver/CMSIS/Core/core_cm3.h **** 
 578:./.driver/CMSIS/Core/core_cm3.h **** #define MPU_RBAR_VALID_Pos                  4                                             /*!< MPU 
 579:./.driver/CMSIS/Core/core_cm3.h **** #define MPU_RBAR_VALID_Msk                 (1ul << MPU_RBAR_VALID_Pos)                    /*!< MPU 
 580:./.driver/CMSIS/Core/core_cm3.h **** 
 581:./.driver/CMSIS/Core/core_cm3.h **** #define MPU_RBAR_REGION_Pos                 0                                             /*!< MPU 
 582:./.driver/CMSIS/Core/core_cm3.h **** #define MPU_RBAR_REGION_Msk                (0xFul << MPU_RBAR_REGION_Pos)                 /*!< MPU 
 583:./.driver/CMSIS/Core/core_cm3.h **** 
 584:./.driver/CMSIS/Core/core_cm3.h **** /* MPU Region Attribute and Size Register */
 585:./.driver/CMSIS/Core/core_cm3.h **** #define MPU_RASR_XN_Pos                    28                                             /*!< MPU 
 586:./.driver/CMSIS/Core/core_cm3.h **** #define MPU_RASR_XN_Msk                    (1ul << MPU_RASR_XN_Pos)                       /*!< MPU 
 587:./.driver/CMSIS/Core/core_cm3.h **** 
 588:./.driver/CMSIS/Core/core_cm3.h **** #define MPU_RASR_AP_Pos                    24                                             /*!< MPU 
 589:./.driver/CMSIS/Core/core_cm3.h **** #define MPU_RASR_AP_Msk                    (7ul << MPU_RASR_AP_Pos)                       /*!< MPU 
 590:./.driver/CMSIS/Core/core_cm3.h **** 
 591:./.driver/CMSIS/Core/core_cm3.h **** #define MPU_RASR_TEX_Pos                   19                                             /*!< MPU 
 592:./.driver/CMSIS/Core/core_cm3.h **** #define MPU_RASR_TEX_Msk                   (7ul << MPU_RASR_TEX_Pos)                      /*!< MPU 
 593:./.driver/CMSIS/Core/core_cm3.h **** 
 594:./.driver/CMSIS/Core/core_cm3.h **** #define MPU_RASR_S_Pos                     18                                             /*!< MPU 
 595:./.driver/CMSIS/Core/core_cm3.h **** #define MPU_RASR_S_Msk                     (1ul << MPU_RASR_S_Pos)                        /*!< MPU 
 596:./.driver/CMSIS/Core/core_cm3.h **** 
 597:./.driver/CMSIS/Core/core_cm3.h **** #define MPU_RASR_C_Pos                     17                                             /*!< MPU 
 598:./.driver/CMSIS/Core/core_cm3.h **** #define MPU_RASR_C_Msk                     (1ul << MPU_RASR_C_Pos)                        /*!< MPU 
 599:./.driver/CMSIS/Core/core_cm3.h **** 
 600:./.driver/CMSIS/Core/core_cm3.h **** #define MPU_RASR_B_Pos                     16                                             /*!< MPU 
 601:./.driver/CMSIS/Core/core_cm3.h **** #define MPU_RASR_B_Msk                     (1ul << MPU_RASR_B_Pos)                        /*!< MPU 
 602:./.driver/CMSIS/Core/core_cm3.h **** 
 603:./.driver/CMSIS/Core/core_cm3.h **** #define MPU_RASR_SRD_Pos                    8                                             /*!< MPU 
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s 			page 12


 604:./.driver/CMSIS/Core/core_cm3.h **** #define MPU_RASR_SRD_Msk                   (0xFFul << MPU_RASR_SRD_Pos)                   /*!< MPU 
 605:./.driver/CMSIS/Core/core_cm3.h **** 
 606:./.driver/CMSIS/Core/core_cm3.h **** #define MPU_RASR_SIZE_Pos                   1                                             /*!< MPU 
 607:./.driver/CMSIS/Core/core_cm3.h **** #define MPU_RASR_SIZE_Msk                  (0x1Ful << MPU_RASR_SIZE_Pos)                  /*!< MPU 
 608:./.driver/CMSIS/Core/core_cm3.h **** 
 609:./.driver/CMSIS/Core/core_cm3.h **** #define MPU_RASR_ENA_Pos                     0                                            /*!< MPU 
 610:./.driver/CMSIS/Core/core_cm3.h **** #define MPU_RASR_ENA_Msk                    (0x1Ful << MPU_RASR_ENA_Pos)                  /*!< MPU 
 611:./.driver/CMSIS/Core/core_cm3.h **** 
 612:./.driver/CMSIS/Core/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_MPU */
 613:./.driver/CMSIS/Core/core_cm3.h **** #endif
 614:./.driver/CMSIS/Core/core_cm3.h **** 
 615:./.driver/CMSIS/Core/core_cm3.h **** 
 616:./.driver/CMSIS/Core/core_cm3.h **** /** @addtogroup CMSIS_CM3_CoreDebug CMSIS CM3 Core Debug
 617:./.driver/CMSIS/Core/core_cm3.h ****   memory mapped structure for Core Debug Register
 618:./.driver/CMSIS/Core/core_cm3.h ****   @{
 619:./.driver/CMSIS/Core/core_cm3.h ****  */
 620:./.driver/CMSIS/Core/core_cm3.h **** typedef struct
 621:./.driver/CMSIS/Core/core_cm3.h **** {
 622:./.driver/CMSIS/Core/core_cm3.h ****   __IO uint32_t DHCSR;                        /*!< Offset: 0x00  Debug Halting Control and Status R
 623:./.driver/CMSIS/Core/core_cm3.h ****   __O  uint32_t DCRSR;                        /*!< Offset: 0x04  Debug Core Register Selector Regis
 624:./.driver/CMSIS/Core/core_cm3.h ****   __IO uint32_t DCRDR;                        /*!< Offset: 0x08  Debug Core Register Data Register 
 625:./.driver/CMSIS/Core/core_cm3.h ****   __IO uint32_t DEMCR;                        /*!< Offset: 0x0C  Debug Exception and Monitor Contro
 626:./.driver/CMSIS/Core/core_cm3.h **** } CoreDebug_Type;
 627:./.driver/CMSIS/Core/core_cm3.h **** 
 628:./.driver/CMSIS/Core/core_cm3.h **** /* Debug Halting Control and Status Register */
 629:./.driver/CMSIS/Core/core_cm3.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16                                             /*!< Core
 630:./.driver/CMSIS/Core/core_cm3.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFul << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
 631:./.driver/CMSIS/Core/core_cm3.h **** 
 632:./.driver/CMSIS/Core/core_cm3.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25                                             /*!< Core
 633:./.driver/CMSIS/Core/core_cm3.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1ul << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
 634:./.driver/CMSIS/Core/core_cm3.h **** 
 635:./.driver/CMSIS/Core/core_cm3.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24                                             /*!< Core
 636:./.driver/CMSIS/Core/core_cm3.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1ul << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
 637:./.driver/CMSIS/Core/core_cm3.h **** 
 638:./.driver/CMSIS/Core/core_cm3.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19                                             /*!< Core
 639:./.driver/CMSIS/Core/core_cm3.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1ul << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
 640:./.driver/CMSIS/Core/core_cm3.h **** 
 641:./.driver/CMSIS/Core/core_cm3.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18                                             /*!< Core
 642:./.driver/CMSIS/Core/core_cm3.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1ul << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
 643:./.driver/CMSIS/Core/core_cm3.h **** 
 644:./.driver/CMSIS/Core/core_cm3.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17                                             /*!< Core
 645:./.driver/CMSIS/Core/core_cm3.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1ul << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
 646:./.driver/CMSIS/Core/core_cm3.h **** 
 647:./.driver/CMSIS/Core/core_cm3.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16                                             /*!< Core
 648:./.driver/CMSIS/Core/core_cm3.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1ul << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
 649:./.driver/CMSIS/Core/core_cm3.h **** 
 650:./.driver/CMSIS/Core/core_cm3.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5                                             /*!< Core
 651:./.driver/CMSIS/Core/core_cm3.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1ul << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
 652:./.driver/CMSIS/Core/core_cm3.h **** 
 653:./.driver/CMSIS/Core/core_cm3.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3                                             /*!< Core
 654:./.driver/CMSIS/Core/core_cm3.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1ul << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
 655:./.driver/CMSIS/Core/core_cm3.h **** 
 656:./.driver/CMSIS/Core/core_cm3.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2                                             /*!< Core
 657:./.driver/CMSIS/Core/core_cm3.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1ul << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
 658:./.driver/CMSIS/Core/core_cm3.h **** 
 659:./.driver/CMSIS/Core/core_cm3.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1                                             /*!< Core
 660:./.driver/CMSIS/Core/core_cm3.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1ul << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s 			page 13


 661:./.driver/CMSIS/Core/core_cm3.h **** 
 662:./.driver/CMSIS/Core/core_cm3.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0                                             /*!< Core
 663:./.driver/CMSIS/Core/core_cm3.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1ul << CoreDebug_DHCSR_C_DEBUGEN_Pos)         /*!< Core
 664:./.driver/CMSIS/Core/core_cm3.h **** 
 665:./.driver/CMSIS/Core/core_cm3.h **** /* Debug Core Register Selector Register */
 666:./.driver/CMSIS/Core/core_cm3.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16                                             /*!< Core
 667:./.driver/CMSIS/Core/core_cm3.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1ul << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
 668:./.driver/CMSIS/Core/core_cm3.h **** 
 669:./.driver/CMSIS/Core/core_cm3.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0                                             /*!< Core
 670:./.driver/CMSIS/Core/core_cm3.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1Ful << CoreDebug_DCRSR_REGSEL_Pos)         /*!< Core
 671:./.driver/CMSIS/Core/core_cm3.h **** 
 672:./.driver/CMSIS/Core/core_cm3.h **** /* Debug Exception and Monitor Control Register */
 673:./.driver/CMSIS/Core/core_cm3.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24                                             /*!< Core
 674:./.driver/CMSIS/Core/core_cm3.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1ul << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
 675:./.driver/CMSIS/Core/core_cm3.h **** 
 676:./.driver/CMSIS/Core/core_cm3.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19                                             /*!< Core
 677:./.driver/CMSIS/Core/core_cm3.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1ul << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
 678:./.driver/CMSIS/Core/core_cm3.h **** 
 679:./.driver/CMSIS/Core/core_cm3.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18                                             /*!< Core
 680:./.driver/CMSIS/Core/core_cm3.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1ul << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
 681:./.driver/CMSIS/Core/core_cm3.h **** 
 682:./.driver/CMSIS/Core/core_cm3.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17                                             /*!< Core
 683:./.driver/CMSIS/Core/core_cm3.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1ul << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
 684:./.driver/CMSIS/Core/core_cm3.h **** 
 685:./.driver/CMSIS/Core/core_cm3.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16                                             /*!< Core
 686:./.driver/CMSIS/Core/core_cm3.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1ul << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
 687:./.driver/CMSIS/Core/core_cm3.h **** 
 688:./.driver/CMSIS/Core/core_cm3.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10                                             /*!< Core
 689:./.driver/CMSIS/Core/core_cm3.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1ul << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
 690:./.driver/CMSIS/Core/core_cm3.h **** 
 691:./.driver/CMSIS/Core/core_cm3.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9                                             /*!< Core
 692:./.driver/CMSIS/Core/core_cm3.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1ul << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
 693:./.driver/CMSIS/Core/core_cm3.h **** 
 694:./.driver/CMSIS/Core/core_cm3.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8                                             /*!< Core
 695:./.driver/CMSIS/Core/core_cm3.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1ul << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
 696:./.driver/CMSIS/Core/core_cm3.h **** 
 697:./.driver/CMSIS/Core/core_cm3.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7                                             /*!< Core
 698:./.driver/CMSIS/Core/core_cm3.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1ul << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
 699:./.driver/CMSIS/Core/core_cm3.h **** 
 700:./.driver/CMSIS/Core/core_cm3.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6                                             /*!< Core
 701:./.driver/CMSIS/Core/core_cm3.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1ul << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
 702:./.driver/CMSIS/Core/core_cm3.h **** 
 703:./.driver/CMSIS/Core/core_cm3.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5                                             /*!< Core
 704:./.driver/CMSIS/Core/core_cm3.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1ul << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
 705:./.driver/CMSIS/Core/core_cm3.h **** 
 706:./.driver/CMSIS/Core/core_cm3.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4                                             /*!< Core
 707:./.driver/CMSIS/Core/core_cm3.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1ul << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
 708:./.driver/CMSIS/Core/core_cm3.h **** 
 709:./.driver/CMSIS/Core/core_cm3.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0                                             /*!< Core
 710:./.driver/CMSIS/Core/core_cm3.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1ul << CoreDebug_DEMCR_VC_CORERESET_Pos)      /*!< Core
 711:./.driver/CMSIS/Core/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_CoreDebug */
 712:./.driver/CMSIS/Core/core_cm3.h **** 
 713:./.driver/CMSIS/Core/core_cm3.h **** 
 714:./.driver/CMSIS/Core/core_cm3.h **** /* Memory mapping of Cortex-M3 Hardware */
 715:./.driver/CMSIS/Core/core_cm3.h **** #define SCS_BASE            (0xE000E000)                              /*!< System Control Space Bas
 716:./.driver/CMSIS/Core/core_cm3.h **** #define ITM_BASE            (0xE0000000)                              /*!< ITM Base Address        
 717:./.driver/CMSIS/Core/core_cm3.h **** #define CoreDebug_BASE      (0xE000EDF0)                              /*!< Core Debug Base Address 
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s 			page 14


 718:./.driver/CMSIS/Core/core_cm3.h **** #define SysTick_BASE        (SCS_BASE +  0x0010)                      /*!< SysTick Base Address    
 719:./.driver/CMSIS/Core/core_cm3.h **** #define NVIC_BASE           (SCS_BASE +  0x0100)                      /*!< NVIC Base Address       
 720:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_BASE            (SCS_BASE +  0x0D00)                      /*!< System Control Block Bas
 721:./.driver/CMSIS/Core/core_cm3.h **** 
 722:./.driver/CMSIS/Core/core_cm3.h **** #define InterruptType       ((InterruptType_Type *) SCS_BASE)         /*!< Interrupt Type Register 
 723:./.driver/CMSIS/Core/core_cm3.h **** #define SCB                 ((SCB_Type *)           SCB_BASE)         /*!< SCB configuration struct
 724:./.driver/CMSIS/Core/core_cm3.h **** #define SysTick             ((SysTick_Type *)       SysTick_BASE)     /*!< SysTick configuration st
 725:./.driver/CMSIS/Core/core_cm3.h **** #define NVIC                ((NVIC_Type *)          NVIC_BASE)        /*!< NVIC configuration struc
 726:./.driver/CMSIS/Core/core_cm3.h **** #define ITM                 ((ITM_Type *)           ITM_BASE)         /*!< ITM configuration struct
 727:./.driver/CMSIS/Core/core_cm3.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
 728:./.driver/CMSIS/Core/core_cm3.h **** 
 729:./.driver/CMSIS/Core/core_cm3.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1)
 730:./.driver/CMSIS/Core/core_cm3.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90)                      /*!< Memory Protection Unit  
 731:./.driver/CMSIS/Core/core_cm3.h ****   #define MPU               ((MPU_Type*)            MPU_BASE)         /*!< Memory Protection Unit  
 732:./.driver/CMSIS/Core/core_cm3.h **** #endif
 733:./.driver/CMSIS/Core/core_cm3.h **** 
 734:./.driver/CMSIS/Core/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_core_register */
 735:./.driver/CMSIS/Core/core_cm3.h **** 
 736:./.driver/CMSIS/Core/core_cm3.h **** 
 737:./.driver/CMSIS/Core/core_cm3.h **** /*******************************************************************************
 738:./.driver/CMSIS/Core/core_cm3.h ****  *                Hardware Abstraction Layer
 739:./.driver/CMSIS/Core/core_cm3.h ****  ******************************************************************************/
 740:./.driver/CMSIS/Core/core_cm3.h **** 
 741:./.driver/CMSIS/Core/core_cm3.h **** #if defined ( __CC_ARM   )
 742:./.driver/CMSIS/Core/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
 743:./.driver/CMSIS/Core/core_cm3.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
 744:./.driver/CMSIS/Core/core_cm3.h **** 
 745:./.driver/CMSIS/Core/core_cm3.h **** #elif defined ( __ICCARM__ )
 746:./.driver/CMSIS/Core/core_cm3.h ****   #define __ASM           __asm                                       /*!< asm keyword for IAR Comp
 747:./.driver/CMSIS/Core/core_cm3.h ****   #define __INLINE        inline                                      /*!< inline keyword for IAR C
 748:./.driver/CMSIS/Core/core_cm3.h **** 
 749:./.driver/CMSIS/Core/core_cm3.h **** #elif defined   (  __GNUC__  )
 750:./.driver/CMSIS/Core/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for GNU Comp
 751:./.driver/CMSIS/Core/core_cm3.h ****   #define __INLINE         inline                                     /*!< inline keyword for GNU C
 752:./.driver/CMSIS/Core/core_cm3.h **** 
 753:./.driver/CMSIS/Core/core_cm3.h **** #elif defined   (  __TASKING__  )
 754:./.driver/CMSIS/Core/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for TASKING 
 755:./.driver/CMSIS/Core/core_cm3.h ****   #define __INLINE         inline                                     /*!< inline keyword for TASKI
 756:./.driver/CMSIS/Core/core_cm3.h **** 
 757:./.driver/CMSIS/Core/core_cm3.h **** #endif
 758:./.driver/CMSIS/Core/core_cm3.h **** 
 759:./.driver/CMSIS/Core/core_cm3.h **** 
 760:./.driver/CMSIS/Core/core_cm3.h **** /* ###################  Compiler specific Intrinsics  ########################### */
 761:./.driver/CMSIS/Core/core_cm3.h **** 
 762:./.driver/CMSIS/Core/core_cm3.h **** #if defined ( __CC_ARM   ) /*------------------RealView Compiler -----------------*/
 763:./.driver/CMSIS/Core/core_cm3.h **** /* ARM armcc specific functions */
 764:./.driver/CMSIS/Core/core_cm3.h **** 
 765:./.driver/CMSIS/Core/core_cm3.h **** #define __enable_fault_irq                __enable_fiq
 766:./.driver/CMSIS/Core/core_cm3.h **** #define __disable_fault_irq               __disable_fiq
 767:./.driver/CMSIS/Core/core_cm3.h **** 
 768:./.driver/CMSIS/Core/core_cm3.h **** #define __NOP                             __nop
 769:./.driver/CMSIS/Core/core_cm3.h **** #define __WFI                             __wfi
 770:./.driver/CMSIS/Core/core_cm3.h **** #define __WFE                             __wfe
 771:./.driver/CMSIS/Core/core_cm3.h **** #define __SEV                             __sev
 772:./.driver/CMSIS/Core/core_cm3.h **** #define __ISB()                           __isb(0)
 773:./.driver/CMSIS/Core/core_cm3.h **** #define __DSB()                           __dsb(0)
 774:./.driver/CMSIS/Core/core_cm3.h **** #define __DMB()                           __dmb(0)
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s 			page 15


 775:./.driver/CMSIS/Core/core_cm3.h **** #define __REV                             __rev
 776:./.driver/CMSIS/Core/core_cm3.h **** #define __RBIT                            __rbit
 777:./.driver/CMSIS/Core/core_cm3.h **** #define __LDREXB(ptr)                     ((unsigned char ) __ldrex(ptr))
 778:./.driver/CMSIS/Core/core_cm3.h **** #define __LDREXH(ptr)                     ((unsigned short) __ldrex(ptr))
 779:./.driver/CMSIS/Core/core_cm3.h **** #define __LDREXW(ptr)                     ((unsigned int  ) __ldrex(ptr))
 780:./.driver/CMSIS/Core/core_cm3.h **** #define __STREXB(value, ptr)              __strex(value, ptr)
 781:./.driver/CMSIS/Core/core_cm3.h **** #define __STREXH(value, ptr)              __strex(value, ptr)
 782:./.driver/CMSIS/Core/core_cm3.h **** #define __STREXW(value, ptr)              __strex(value, ptr)
 783:./.driver/CMSIS/Core/core_cm3.h **** 
 784:./.driver/CMSIS/Core/core_cm3.h **** 
 785:./.driver/CMSIS/Core/core_cm3.h **** /* intrinsic unsigned long long __ldrexd(volatile void *ptr) */
 786:./.driver/CMSIS/Core/core_cm3.h **** /* intrinsic int __strexd(unsigned long long val, volatile void *ptr) */
 787:./.driver/CMSIS/Core/core_cm3.h **** /* intrinsic void __enable_irq();     */
 788:./.driver/CMSIS/Core/core_cm3.h **** /* intrinsic void __disable_irq();    */
 789:./.driver/CMSIS/Core/core_cm3.h **** 
 790:./.driver/CMSIS/Core/core_cm3.h **** 
 791:./.driver/CMSIS/Core/core_cm3.h **** /**
 792:./.driver/CMSIS/Core/core_cm3.h ****  * @brief  Return the Process Stack Pointer
 793:./.driver/CMSIS/Core/core_cm3.h ****  *
 794:./.driver/CMSIS/Core/core_cm3.h ****  * @return ProcessStackPointer
 795:./.driver/CMSIS/Core/core_cm3.h ****  *
 796:./.driver/CMSIS/Core/core_cm3.h ****  * Return the actual process stack pointer
 797:./.driver/CMSIS/Core/core_cm3.h ****  */
 798:./.driver/CMSIS/Core/core_cm3.h **** extern uint32_t __get_PSP(void);
 799:./.driver/CMSIS/Core/core_cm3.h **** 
 800:./.driver/CMSIS/Core/core_cm3.h **** /**
 801:./.driver/CMSIS/Core/core_cm3.h ****  * @brief  Set the Process Stack Pointer
 802:./.driver/CMSIS/Core/core_cm3.h ****  *
 803:./.driver/CMSIS/Core/core_cm3.h ****  * @param  topOfProcStack  Process Stack Pointer
 804:./.driver/CMSIS/Core/core_cm3.h ****  *
 805:./.driver/CMSIS/Core/core_cm3.h ****  * Assign the value ProcessStackPointer to the MSP 
 806:./.driver/CMSIS/Core/core_cm3.h ****  * (process stack pointer) Cortex processor register
 807:./.driver/CMSIS/Core/core_cm3.h ****  */
 808:./.driver/CMSIS/Core/core_cm3.h **** extern void __set_PSP(uint32_t topOfProcStack);
 809:./.driver/CMSIS/Core/core_cm3.h **** 
 810:./.driver/CMSIS/Core/core_cm3.h **** /**
 811:./.driver/CMSIS/Core/core_cm3.h ****  * @brief  Return the Main Stack Pointer
 812:./.driver/CMSIS/Core/core_cm3.h ****  *
 813:./.driver/CMSIS/Core/core_cm3.h ****  * @return Main Stack Pointer
 814:./.driver/CMSIS/Core/core_cm3.h ****  *
 815:./.driver/CMSIS/Core/core_cm3.h ****  * Return the current value of the MSP (main stack pointer)
 816:./.driver/CMSIS/Core/core_cm3.h ****  * Cortex processor register
 817:./.driver/CMSIS/Core/core_cm3.h ****  */
 818:./.driver/CMSIS/Core/core_cm3.h **** extern uint32_t __get_MSP(void);
 819:./.driver/CMSIS/Core/core_cm3.h **** 
 820:./.driver/CMSIS/Core/core_cm3.h **** /**
 821:./.driver/CMSIS/Core/core_cm3.h ****  * @brief  Set the Main Stack Pointer
 822:./.driver/CMSIS/Core/core_cm3.h ****  *
 823:./.driver/CMSIS/Core/core_cm3.h ****  * @param  topOfMainStack  Main Stack Pointer
 824:./.driver/CMSIS/Core/core_cm3.h ****  *
 825:./.driver/CMSIS/Core/core_cm3.h ****  * Assign the value mainStackPointer to the MSP 
 826:./.driver/CMSIS/Core/core_cm3.h ****  * (main stack pointer) Cortex processor register
 827:./.driver/CMSIS/Core/core_cm3.h ****  */
 828:./.driver/CMSIS/Core/core_cm3.h **** extern void __set_MSP(uint32_t topOfMainStack);
 829:./.driver/CMSIS/Core/core_cm3.h **** 
 830:./.driver/CMSIS/Core/core_cm3.h **** /**
 831:./.driver/CMSIS/Core/core_cm3.h ****  * @brief  Reverse byte order in unsigned short value
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s 			page 16


 832:./.driver/CMSIS/Core/core_cm3.h ****  *
 833:./.driver/CMSIS/Core/core_cm3.h ****  * @param   value  value to reverse
 834:./.driver/CMSIS/Core/core_cm3.h ****  * @return         reversed value
 835:./.driver/CMSIS/Core/core_cm3.h ****  *
 836:./.driver/CMSIS/Core/core_cm3.h ****  * Reverse byte order in unsigned short value
 837:./.driver/CMSIS/Core/core_cm3.h ****  */
 838:./.driver/CMSIS/Core/core_cm3.h **** extern uint32_t __REV16(uint16_t value);
 839:./.driver/CMSIS/Core/core_cm3.h **** 
 840:./.driver/CMSIS/Core/core_cm3.h **** /**
 841:./.driver/CMSIS/Core/core_cm3.h ****  * @brief  Reverse byte order in signed short value with sign extension to integer
 842:./.driver/CMSIS/Core/core_cm3.h ****  *
 843:./.driver/CMSIS/Core/core_cm3.h ****  * @param   value  value to reverse
 844:./.driver/CMSIS/Core/core_cm3.h ****  * @return         reversed value
 845:./.driver/CMSIS/Core/core_cm3.h ****  *
 846:./.driver/CMSIS/Core/core_cm3.h ****  * Reverse byte order in signed short value with sign extension to integer
 847:./.driver/CMSIS/Core/core_cm3.h ****  */
 848:./.driver/CMSIS/Core/core_cm3.h **** extern int32_t __REVSH(int16_t value);
 849:./.driver/CMSIS/Core/core_cm3.h **** 
 850:./.driver/CMSIS/Core/core_cm3.h **** 
 851:./.driver/CMSIS/Core/core_cm3.h **** #if (__ARMCC_VERSION < 400000)
 852:./.driver/CMSIS/Core/core_cm3.h **** 
 853:./.driver/CMSIS/Core/core_cm3.h **** /**
 854:./.driver/CMSIS/Core/core_cm3.h ****  * @brief  Remove the exclusive lock created by ldrex
 855:./.driver/CMSIS/Core/core_cm3.h ****  *
 856:./.driver/CMSIS/Core/core_cm3.h ****  * Removes the exclusive lock which is created by ldrex.
 857:./.driver/CMSIS/Core/core_cm3.h ****  */
 858:./.driver/CMSIS/Core/core_cm3.h **** extern void __CLREX(void);
 859:./.driver/CMSIS/Core/core_cm3.h **** 
 860:./.driver/CMSIS/Core/core_cm3.h **** /**
 861:./.driver/CMSIS/Core/core_cm3.h ****  * @brief  Return the Base Priority value
 862:./.driver/CMSIS/Core/core_cm3.h ****  *
 863:./.driver/CMSIS/Core/core_cm3.h ****  * @return BasePriority
 864:./.driver/CMSIS/Core/core_cm3.h ****  *
 865:./.driver/CMSIS/Core/core_cm3.h ****  * Return the content of the base priority register
 866:./.driver/CMSIS/Core/core_cm3.h ****  */
 867:./.driver/CMSIS/Core/core_cm3.h **** extern uint32_t __get_BASEPRI(void);
 868:./.driver/CMSIS/Core/core_cm3.h **** 
 869:./.driver/CMSIS/Core/core_cm3.h **** /**
 870:./.driver/CMSIS/Core/core_cm3.h ****  * @brief  Set the Base Priority value
 871:./.driver/CMSIS/Core/core_cm3.h ****  *
 872:./.driver/CMSIS/Core/core_cm3.h ****  * @param  basePri  BasePriority
 873:./.driver/CMSIS/Core/core_cm3.h ****  *
 874:./.driver/CMSIS/Core/core_cm3.h ****  * Set the base priority register
 875:./.driver/CMSIS/Core/core_cm3.h ****  */
 876:./.driver/CMSIS/Core/core_cm3.h **** extern void __set_BASEPRI(uint32_t basePri);
 877:./.driver/CMSIS/Core/core_cm3.h **** 
 878:./.driver/CMSIS/Core/core_cm3.h **** /**
 879:./.driver/CMSIS/Core/core_cm3.h ****  * @brief  Return the Priority Mask value
 880:./.driver/CMSIS/Core/core_cm3.h ****  *
 881:./.driver/CMSIS/Core/core_cm3.h ****  * @return PriMask
 882:./.driver/CMSIS/Core/core_cm3.h ****  *
 883:./.driver/CMSIS/Core/core_cm3.h ****  * Return state of the priority mask bit from the priority mask register
 884:./.driver/CMSIS/Core/core_cm3.h ****  */
 885:./.driver/CMSIS/Core/core_cm3.h **** extern uint32_t __get_PRIMASK(void);
 886:./.driver/CMSIS/Core/core_cm3.h **** 
 887:./.driver/CMSIS/Core/core_cm3.h **** /**
 888:./.driver/CMSIS/Core/core_cm3.h ****  * @brief  Set the Priority Mask value
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s 			page 17


 889:./.driver/CMSIS/Core/core_cm3.h ****  *
 890:./.driver/CMSIS/Core/core_cm3.h ****  * @param   priMask  PriMask
 891:./.driver/CMSIS/Core/core_cm3.h ****  *
 892:./.driver/CMSIS/Core/core_cm3.h ****  * Set the priority mask bit in the priority mask register
 893:./.driver/CMSIS/Core/core_cm3.h ****  */
 894:./.driver/CMSIS/Core/core_cm3.h **** extern void __set_PRIMASK(uint32_t priMask);
 895:./.driver/CMSIS/Core/core_cm3.h **** 
 896:./.driver/CMSIS/Core/core_cm3.h **** /**
 897:./.driver/CMSIS/Core/core_cm3.h ****  * @brief  Return the Fault Mask value
 898:./.driver/CMSIS/Core/core_cm3.h ****  *
 899:./.driver/CMSIS/Core/core_cm3.h ****  * @return FaultMask
 900:./.driver/CMSIS/Core/core_cm3.h ****  *
 901:./.driver/CMSIS/Core/core_cm3.h ****  * Return the content of the fault mask register
 902:./.driver/CMSIS/Core/core_cm3.h ****  */
 903:./.driver/CMSIS/Core/core_cm3.h **** extern uint32_t __get_FAULTMASK(void);
 904:./.driver/CMSIS/Core/core_cm3.h **** 
 905:./.driver/CMSIS/Core/core_cm3.h **** /**
 906:./.driver/CMSIS/Core/core_cm3.h ****  * @brief  Set the Fault Mask value
 907:./.driver/CMSIS/Core/core_cm3.h ****  *
 908:./.driver/CMSIS/Core/core_cm3.h ****  * @param  faultMask faultMask value
 909:./.driver/CMSIS/Core/core_cm3.h ****  *
 910:./.driver/CMSIS/Core/core_cm3.h ****  * Set the fault mask register
 911:./.driver/CMSIS/Core/core_cm3.h ****  */
 912:./.driver/CMSIS/Core/core_cm3.h **** extern void __set_FAULTMASK(uint32_t faultMask);
 913:./.driver/CMSIS/Core/core_cm3.h **** 
 914:./.driver/CMSIS/Core/core_cm3.h **** /**
 915:./.driver/CMSIS/Core/core_cm3.h ****  * @brief  Return the Control Register value
 916:./.driver/CMSIS/Core/core_cm3.h ****  * 
 917:./.driver/CMSIS/Core/core_cm3.h ****  * @return Control value
 918:./.driver/CMSIS/Core/core_cm3.h ****  *
 919:./.driver/CMSIS/Core/core_cm3.h ****  * Return the content of the control register
 920:./.driver/CMSIS/Core/core_cm3.h ****  */
 921:./.driver/CMSIS/Core/core_cm3.h **** extern uint32_t __get_CONTROL(void);
 922:./.driver/CMSIS/Core/core_cm3.h **** 
 923:./.driver/CMSIS/Core/core_cm3.h **** /**
 924:./.driver/CMSIS/Core/core_cm3.h ****  * @brief  Set the Control Register value
 925:./.driver/CMSIS/Core/core_cm3.h ****  *
 926:./.driver/CMSIS/Core/core_cm3.h ****  * @param  control  Control value
 927:./.driver/CMSIS/Core/core_cm3.h ****  *
 928:./.driver/CMSIS/Core/core_cm3.h ****  * Set the control register
 929:./.driver/CMSIS/Core/core_cm3.h ****  */
 930:./.driver/CMSIS/Core/core_cm3.h **** extern void __set_CONTROL(uint32_t control);
 931:./.driver/CMSIS/Core/core_cm3.h **** 
 932:./.driver/CMSIS/Core/core_cm3.h **** #else  /* (__ARMCC_VERSION >= 400000)  */
 933:./.driver/CMSIS/Core/core_cm3.h **** 
 934:./.driver/CMSIS/Core/core_cm3.h **** /**
 935:./.driver/CMSIS/Core/core_cm3.h ****  * @brief  Remove the exclusive lock created by ldrex
 936:./.driver/CMSIS/Core/core_cm3.h ****  *
 937:./.driver/CMSIS/Core/core_cm3.h ****  * Removes the exclusive lock which is created by ldrex.
 938:./.driver/CMSIS/Core/core_cm3.h ****  */
 939:./.driver/CMSIS/Core/core_cm3.h **** #define __CLREX                           __clrex
 940:./.driver/CMSIS/Core/core_cm3.h **** 
 941:./.driver/CMSIS/Core/core_cm3.h **** /**
 942:./.driver/CMSIS/Core/core_cm3.h ****  * @brief  Return the Base Priority value
 943:./.driver/CMSIS/Core/core_cm3.h ****  *
 944:./.driver/CMSIS/Core/core_cm3.h ****  * @return BasePriority
 945:./.driver/CMSIS/Core/core_cm3.h ****  *
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s 			page 18


 946:./.driver/CMSIS/Core/core_cm3.h ****  * Return the content of the base priority register
 947:./.driver/CMSIS/Core/core_cm3.h ****  */
 948:./.driver/CMSIS/Core/core_cm3.h **** static __INLINE uint32_t  __get_BASEPRI(void)
 949:./.driver/CMSIS/Core/core_cm3.h **** {
 950:./.driver/CMSIS/Core/core_cm3.h ****   register uint32_t __regBasePri         __ASM("basepri");
 951:./.driver/CMSIS/Core/core_cm3.h ****   return(__regBasePri);
 952:./.driver/CMSIS/Core/core_cm3.h **** }
 953:./.driver/CMSIS/Core/core_cm3.h **** 
 954:./.driver/CMSIS/Core/core_cm3.h **** /**
 955:./.driver/CMSIS/Core/core_cm3.h ****  * @brief  Set the Base Priority value
 956:./.driver/CMSIS/Core/core_cm3.h ****  *
 957:./.driver/CMSIS/Core/core_cm3.h ****  * @param  basePri  BasePriority
 958:./.driver/CMSIS/Core/core_cm3.h ****  *
 959:./.driver/CMSIS/Core/core_cm3.h ****  * Set the base priority register
 960:./.driver/CMSIS/Core/core_cm3.h ****  */
 961:./.driver/CMSIS/Core/core_cm3.h **** static __INLINE void __set_BASEPRI(uint32_t basePri)
 962:./.driver/CMSIS/Core/core_cm3.h **** {
 963:./.driver/CMSIS/Core/core_cm3.h ****   register uint32_t __regBasePri         __ASM("basepri");
 964:./.driver/CMSIS/Core/core_cm3.h ****   __regBasePri = (basePri & 0xff);
 965:./.driver/CMSIS/Core/core_cm3.h **** }
 966:./.driver/CMSIS/Core/core_cm3.h **** 
 967:./.driver/CMSIS/Core/core_cm3.h **** /**
 968:./.driver/CMSIS/Core/core_cm3.h ****  * @brief  Return the Priority Mask value
 969:./.driver/CMSIS/Core/core_cm3.h ****  *
 970:./.driver/CMSIS/Core/core_cm3.h ****  * @return PriMask
 971:./.driver/CMSIS/Core/core_cm3.h ****  *
 972:./.driver/CMSIS/Core/core_cm3.h ****  * Return state of the priority mask bit from the priority mask register
 973:./.driver/CMSIS/Core/core_cm3.h ****  */
 974:./.driver/CMSIS/Core/core_cm3.h **** static __INLINE uint32_t __get_PRIMASK(void)
 975:./.driver/CMSIS/Core/core_cm3.h **** {
 976:./.driver/CMSIS/Core/core_cm3.h ****   register uint32_t __regPriMask         __ASM("primask");
 977:./.driver/CMSIS/Core/core_cm3.h ****   return(__regPriMask);
 978:./.driver/CMSIS/Core/core_cm3.h **** }
 979:./.driver/CMSIS/Core/core_cm3.h **** 
 980:./.driver/CMSIS/Core/core_cm3.h **** /**
 981:./.driver/CMSIS/Core/core_cm3.h ****  * @brief  Set the Priority Mask value
 982:./.driver/CMSIS/Core/core_cm3.h ****  *
 983:./.driver/CMSIS/Core/core_cm3.h ****  * @param  priMask  PriMask
 984:./.driver/CMSIS/Core/core_cm3.h ****  *
 985:./.driver/CMSIS/Core/core_cm3.h ****  * Set the priority mask bit in the priority mask register
 986:./.driver/CMSIS/Core/core_cm3.h ****  */
 987:./.driver/CMSIS/Core/core_cm3.h **** static __INLINE void __set_PRIMASK(uint32_t priMask)
 988:./.driver/CMSIS/Core/core_cm3.h **** {
 989:./.driver/CMSIS/Core/core_cm3.h ****   register uint32_t __regPriMask         __ASM("primask");
 990:./.driver/CMSIS/Core/core_cm3.h ****   __regPriMask = (priMask);
 991:./.driver/CMSIS/Core/core_cm3.h **** }
 992:./.driver/CMSIS/Core/core_cm3.h **** 
 993:./.driver/CMSIS/Core/core_cm3.h **** /**
 994:./.driver/CMSIS/Core/core_cm3.h ****  * @brief  Return the Fault Mask value
 995:./.driver/CMSIS/Core/core_cm3.h ****  *
 996:./.driver/CMSIS/Core/core_cm3.h ****  * @return FaultMask
 997:./.driver/CMSIS/Core/core_cm3.h ****  *
 998:./.driver/CMSIS/Core/core_cm3.h ****  * Return the content of the fault mask register
 999:./.driver/CMSIS/Core/core_cm3.h ****  */
1000:./.driver/CMSIS/Core/core_cm3.h **** static __INLINE uint32_t __get_FAULTMASK(void)
1001:./.driver/CMSIS/Core/core_cm3.h **** {
1002:./.driver/CMSIS/Core/core_cm3.h ****   register uint32_t __regFaultMask       __ASM("faultmask");
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s 			page 19


1003:./.driver/CMSIS/Core/core_cm3.h ****   return(__regFaultMask);
1004:./.driver/CMSIS/Core/core_cm3.h **** }
1005:./.driver/CMSIS/Core/core_cm3.h **** 
1006:./.driver/CMSIS/Core/core_cm3.h **** /**
1007:./.driver/CMSIS/Core/core_cm3.h ****  * @brief  Set the Fault Mask value
1008:./.driver/CMSIS/Core/core_cm3.h ****  *
1009:./.driver/CMSIS/Core/core_cm3.h ****  * @param  faultMask  faultMask value
1010:./.driver/CMSIS/Core/core_cm3.h ****  *
1011:./.driver/CMSIS/Core/core_cm3.h ****  * Set the fault mask register
1012:./.driver/CMSIS/Core/core_cm3.h ****  */
1013:./.driver/CMSIS/Core/core_cm3.h **** static __INLINE void __set_FAULTMASK(uint32_t faultMask)
1014:./.driver/CMSIS/Core/core_cm3.h **** {
1015:./.driver/CMSIS/Core/core_cm3.h ****   register uint32_t __regFaultMask       __ASM("faultmask");
1016:./.driver/CMSIS/Core/core_cm3.h ****   __regFaultMask = (faultMask & 1);
1017:./.driver/CMSIS/Core/core_cm3.h **** }
1018:./.driver/CMSIS/Core/core_cm3.h **** 
1019:./.driver/CMSIS/Core/core_cm3.h **** /**
1020:./.driver/CMSIS/Core/core_cm3.h ****  * @brief  Return the Control Register value
1021:./.driver/CMSIS/Core/core_cm3.h ****  * 
1022:./.driver/CMSIS/Core/core_cm3.h ****  * @return Control value
1023:./.driver/CMSIS/Core/core_cm3.h ****  *
1024:./.driver/CMSIS/Core/core_cm3.h ****  * Return the content of the control register
1025:./.driver/CMSIS/Core/core_cm3.h ****  */
1026:./.driver/CMSIS/Core/core_cm3.h **** static __INLINE uint32_t __get_CONTROL(void)
1027:./.driver/CMSIS/Core/core_cm3.h **** {
1028:./.driver/CMSIS/Core/core_cm3.h ****   register uint32_t __regControl         __ASM("control");
1029:./.driver/CMSIS/Core/core_cm3.h ****   return(__regControl);
1030:./.driver/CMSIS/Core/core_cm3.h **** }
1031:./.driver/CMSIS/Core/core_cm3.h **** 
1032:./.driver/CMSIS/Core/core_cm3.h **** /**
1033:./.driver/CMSIS/Core/core_cm3.h ****  * @brief  Set the Control Register value
1034:./.driver/CMSIS/Core/core_cm3.h ****  *
1035:./.driver/CMSIS/Core/core_cm3.h ****  * @param  control  Control value
1036:./.driver/CMSIS/Core/core_cm3.h ****  *
1037:./.driver/CMSIS/Core/core_cm3.h ****  * Set the control register
1038:./.driver/CMSIS/Core/core_cm3.h ****  */
1039:./.driver/CMSIS/Core/core_cm3.h **** static __INLINE void __set_CONTROL(uint32_t control)
1040:./.driver/CMSIS/Core/core_cm3.h **** {
1041:./.driver/CMSIS/Core/core_cm3.h ****   register uint32_t __regControl         __ASM("control");
1042:./.driver/CMSIS/Core/core_cm3.h ****   __regControl = control;
1043:./.driver/CMSIS/Core/core_cm3.h **** }
1044:./.driver/CMSIS/Core/core_cm3.h **** 
1045:./.driver/CMSIS/Core/core_cm3.h **** #endif /* __ARMCC_VERSION  */ 
1046:./.driver/CMSIS/Core/core_cm3.h **** 
1047:./.driver/CMSIS/Core/core_cm3.h **** 
1048:./.driver/CMSIS/Core/core_cm3.h **** 
1049:./.driver/CMSIS/Core/core_cm3.h **** #elif (defined (__ICCARM__)) /*------------------ ICC Compiler -------------------*/
1050:./.driver/CMSIS/Core/core_cm3.h **** /* IAR iccarm specific functions */
1051:./.driver/CMSIS/Core/core_cm3.h **** 
1052:./.driver/CMSIS/Core/core_cm3.h **** #define __enable_irq                              __enable_interrupt        /*!< global Interrupt e
1053:./.driver/CMSIS/Core/core_cm3.h **** #define __disable_irq                             __disable_interrupt       /*!< global Interrupt d
1054:./.driver/CMSIS/Core/core_cm3.h **** 
1055:./.driver/CMSIS/Core/core_cm3.h **** static __INLINE void __enable_fault_irq()         { __ASM ("cpsie f"); }
1056:./.driver/CMSIS/Core/core_cm3.h **** static __INLINE void __disable_fault_irq()        { __ASM ("cpsid f"); }
1057:./.driver/CMSIS/Core/core_cm3.h **** 
1058:./.driver/CMSIS/Core/core_cm3.h **** #define __NOP                                     __no_operation            /*!< no operation intri
1059:./.driver/CMSIS/Core/core_cm3.h **** static __INLINE  void __WFI()                     { __ASM ("wfi"); }
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s 			page 20


1060:./.driver/CMSIS/Core/core_cm3.h **** static __INLINE  void __WFE()                     { __ASM ("wfe"); }
1061:./.driver/CMSIS/Core/core_cm3.h **** static __INLINE  void __SEV()                     { __ASM ("sev"); }
1062:./.driver/CMSIS/Core/core_cm3.h **** static __INLINE  void __CLREX()                   { __ASM ("clrex"); }
1063:./.driver/CMSIS/Core/core_cm3.h **** 
1064:./.driver/CMSIS/Core/core_cm3.h **** /* intrinsic void __ISB(void)                                     */
1065:./.driver/CMSIS/Core/core_cm3.h **** /* intrinsic void __DSB(void)                                     */
1066:./.driver/CMSIS/Core/core_cm3.h **** /* intrinsic void __DMB(void)                                     */
1067:./.driver/CMSIS/Core/core_cm3.h **** /* intrinsic void __set_PRIMASK();                                */
1068:./.driver/CMSIS/Core/core_cm3.h **** /* intrinsic void __get_PRIMASK();                                */
1069:./.driver/CMSIS/Core/core_cm3.h **** /* intrinsic void __set_FAULTMASK();                              */
1070:./.driver/CMSIS/Core/core_cm3.h **** /* intrinsic void __get_FAULTMASK();                              */
1071:./.driver/CMSIS/Core/core_cm3.h **** /* intrinsic uint32_t __REV(uint32_t value);                      */
1072:./.driver/CMSIS/Core/core_cm3.h **** /* intrinsic uint32_t __REVSH(uint32_t value);                    */
1073:./.driver/CMSIS/Core/core_cm3.h **** /* intrinsic unsigned long __STREX(unsigned long, unsigned long); */
1074:./.driver/CMSIS/Core/core_cm3.h **** /* intrinsic unsigned long __LDREX(unsigned long *);              */
1075:./.driver/CMSIS/Core/core_cm3.h **** 
1076:./.driver/CMSIS/Core/core_cm3.h **** 
1077:./.driver/CMSIS/Core/core_cm3.h **** /**
1078:./.driver/CMSIS/Core/core_cm3.h ****  * @brief  Return the Process Stack Pointer
1079:./.driver/CMSIS/Core/core_cm3.h ****  *
1080:./.driver/CMSIS/Core/core_cm3.h ****  * @return ProcessStackPointer
1081:./.driver/CMSIS/Core/core_cm3.h ****  *
1082:./.driver/CMSIS/Core/core_cm3.h ****  * Return the actual process stack pointer
1083:./.driver/CMSIS/Core/core_cm3.h ****  */
1084:./.driver/CMSIS/Core/core_cm3.h **** extern uint32_t __get_PSP(void);
1085:./.driver/CMSIS/Core/core_cm3.h **** 
1086:./.driver/CMSIS/Core/core_cm3.h **** /**
1087:./.driver/CMSIS/Core/core_cm3.h ****  * @brief  Set the Process Stack Pointer
1088:./.driver/CMSIS/Core/core_cm3.h ****  *
1089:./.driver/CMSIS/Core/core_cm3.h ****  * @param  topOfProcStack  Process Stack Pointer
1090:./.driver/CMSIS/Core/core_cm3.h ****  *
1091:./.driver/CMSIS/Core/core_cm3.h ****  * Assign the value ProcessStackPointer to the MSP 
1092:./.driver/CMSIS/Core/core_cm3.h ****  * (process stack pointer) Cortex processor register
1093:./.driver/CMSIS/Core/core_cm3.h ****  */
1094:./.driver/CMSIS/Core/core_cm3.h **** extern void __set_PSP(uint32_t topOfProcStack);
1095:./.driver/CMSIS/Core/core_cm3.h **** 
1096:./.driver/CMSIS/Core/core_cm3.h **** /**
1097:./.driver/CMSIS/Core/core_cm3.h ****  * @brief  Return the Main Stack Pointer
1098:./.driver/CMSIS/Core/core_cm3.h ****  *
1099:./.driver/CMSIS/Core/core_cm3.h ****  * @return Main Stack Pointer
1100:./.driver/CMSIS/Core/core_cm3.h ****  *
1101:./.driver/CMSIS/Core/core_cm3.h ****  * Return the current value of the MSP (main stack pointer)
1102:./.driver/CMSIS/Core/core_cm3.h ****  * Cortex processor register
1103:./.driver/CMSIS/Core/core_cm3.h ****  */
1104:./.driver/CMSIS/Core/core_cm3.h **** extern uint32_t __get_MSP(void);
1105:./.driver/CMSIS/Core/core_cm3.h **** 
1106:./.driver/CMSIS/Core/core_cm3.h **** /**
1107:./.driver/CMSIS/Core/core_cm3.h ****  * @brief  Set the Main Stack Pointer
1108:./.driver/CMSIS/Core/core_cm3.h ****  *
1109:./.driver/CMSIS/Core/core_cm3.h ****  * @param  topOfMainStack  Main Stack Pointer
1110:./.driver/CMSIS/Core/core_cm3.h ****  *
1111:./.driver/CMSIS/Core/core_cm3.h ****  * Assign the value mainStackPointer to the MSP 
1112:./.driver/CMSIS/Core/core_cm3.h ****  * (main stack pointer) Cortex processor register
1113:./.driver/CMSIS/Core/core_cm3.h ****  */
1114:./.driver/CMSIS/Core/core_cm3.h **** extern void __set_MSP(uint32_t topOfMainStack);
1115:./.driver/CMSIS/Core/core_cm3.h **** 
1116:./.driver/CMSIS/Core/core_cm3.h **** /**
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s 			page 21


1117:./.driver/CMSIS/Core/core_cm3.h ****  * @brief  Reverse byte order in unsigned short value
1118:./.driver/CMSIS/Core/core_cm3.h ****  *
1119:./.driver/CMSIS/Core/core_cm3.h ****  * @param  value  value to reverse
1120:./.driver/CMSIS/Core/core_cm3.h ****  * @return        reversed value
1121:./.driver/CMSIS/Core/core_cm3.h ****  *
1122:./.driver/CMSIS/Core/core_cm3.h ****  * Reverse byte order in unsigned short value
1123:./.driver/CMSIS/Core/core_cm3.h ****  */
1124:./.driver/CMSIS/Core/core_cm3.h **** extern uint32_t __REV16(uint16_t value);
1125:./.driver/CMSIS/Core/core_cm3.h **** 
1126:./.driver/CMSIS/Core/core_cm3.h **** /**
1127:./.driver/CMSIS/Core/core_cm3.h ****  * @brief  Reverse bit order of value
1128:./.driver/CMSIS/Core/core_cm3.h ****  *
1129:./.driver/CMSIS/Core/core_cm3.h ****  * @param  value  value to reverse
1130:./.driver/CMSIS/Core/core_cm3.h ****  * @return        reversed value
1131:./.driver/CMSIS/Core/core_cm3.h ****  *
1132:./.driver/CMSIS/Core/core_cm3.h ****  * Reverse bit order of value
1133:./.driver/CMSIS/Core/core_cm3.h ****  */
1134:./.driver/CMSIS/Core/core_cm3.h **** extern uint32_t __RBIT(uint32_t value);
1135:./.driver/CMSIS/Core/core_cm3.h **** 
1136:./.driver/CMSIS/Core/core_cm3.h **** /**
1137:./.driver/CMSIS/Core/core_cm3.h ****  * @brief  LDR Exclusive (8 bit)
1138:./.driver/CMSIS/Core/core_cm3.h ****  *
1139:./.driver/CMSIS/Core/core_cm3.h ****  * @param  *addr  address pointer
1140:./.driver/CMSIS/Core/core_cm3.h ****  * @return        value of (*address)
1141:./.driver/CMSIS/Core/core_cm3.h ****  *
1142:./.driver/CMSIS/Core/core_cm3.h ****  * Exclusive LDR command for 8 bit values)
1143:./.driver/CMSIS/Core/core_cm3.h ****  */
1144:./.driver/CMSIS/Core/core_cm3.h **** extern uint8_t __LDREXB(uint8_t *addr);
1145:./.driver/CMSIS/Core/core_cm3.h **** 
1146:./.driver/CMSIS/Core/core_cm3.h **** /**
1147:./.driver/CMSIS/Core/core_cm3.h ****  * @brief  LDR Exclusive (16 bit)
1148:./.driver/CMSIS/Core/core_cm3.h ****  *
1149:./.driver/CMSIS/Core/core_cm3.h ****  * @param  *addr  address pointer
1150:./.driver/CMSIS/Core/core_cm3.h ****  * @return        value of (*address)
1151:./.driver/CMSIS/Core/core_cm3.h ****  *
1152:./.driver/CMSIS/Core/core_cm3.h ****  * Exclusive LDR command for 16 bit values
1153:./.driver/CMSIS/Core/core_cm3.h ****  */
1154:./.driver/CMSIS/Core/core_cm3.h **** extern uint16_t __LDREXH(uint16_t *addr);
1155:./.driver/CMSIS/Core/core_cm3.h **** 
1156:./.driver/CMSIS/Core/core_cm3.h **** /**
1157:./.driver/CMSIS/Core/core_cm3.h ****  * @brief  LDR Exclusive (32 bit)
1158:./.driver/CMSIS/Core/core_cm3.h ****  *
1159:./.driver/CMSIS/Core/core_cm3.h ****  * @param  *addr  address pointer
1160:./.driver/CMSIS/Core/core_cm3.h ****  * @return        value of (*address)
1161:./.driver/CMSIS/Core/core_cm3.h ****  *
1162:./.driver/CMSIS/Core/core_cm3.h ****  * Exclusive LDR command for 32 bit values
1163:./.driver/CMSIS/Core/core_cm3.h ****  */
1164:./.driver/CMSIS/Core/core_cm3.h **** extern uint32_t __LDREXW(uint32_t *addr);
1165:./.driver/CMSIS/Core/core_cm3.h **** 
1166:./.driver/CMSIS/Core/core_cm3.h **** /**
1167:./.driver/CMSIS/Core/core_cm3.h ****  * @brief  STR Exclusive (8 bit)
1168:./.driver/CMSIS/Core/core_cm3.h ****  *
1169:./.driver/CMSIS/Core/core_cm3.h ****  * @param  value  value to store
1170:./.driver/CMSIS/Core/core_cm3.h ****  * @param  *addr  address pointer
1171:./.driver/CMSIS/Core/core_cm3.h ****  * @return        successful / failed
1172:./.driver/CMSIS/Core/core_cm3.h ****  *
1173:./.driver/CMSIS/Core/core_cm3.h ****  * Exclusive STR command for 8 bit values
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s 			page 22


1174:./.driver/CMSIS/Core/core_cm3.h ****  */
1175:./.driver/CMSIS/Core/core_cm3.h **** extern uint32_t __STREXB(uint8_t value, uint8_t *addr);
1176:./.driver/CMSIS/Core/core_cm3.h **** 
1177:./.driver/CMSIS/Core/core_cm3.h **** /**
1178:./.driver/CMSIS/Core/core_cm3.h ****  * @brief  STR Exclusive (16 bit)
1179:./.driver/CMSIS/Core/core_cm3.h ****  *
1180:./.driver/CMSIS/Core/core_cm3.h ****  * @param  value  value to store
1181:./.driver/CMSIS/Core/core_cm3.h ****  * @param  *addr  address pointer
1182:./.driver/CMSIS/Core/core_cm3.h ****  * @return        successful / failed
1183:./.driver/CMSIS/Core/core_cm3.h ****  *
1184:./.driver/CMSIS/Core/core_cm3.h ****  * Exclusive STR command for 16 bit values
1185:./.driver/CMSIS/Core/core_cm3.h ****  */
1186:./.driver/CMSIS/Core/core_cm3.h **** extern uint32_t __STREXH(uint16_t value, uint16_t *addr);
1187:./.driver/CMSIS/Core/core_cm3.h **** 
1188:./.driver/CMSIS/Core/core_cm3.h **** /**
1189:./.driver/CMSIS/Core/core_cm3.h ****  * @brief  STR Exclusive (32 bit)
1190:./.driver/CMSIS/Core/core_cm3.h ****  *
1191:./.driver/CMSIS/Core/core_cm3.h ****  * @param  value  value to store
1192:./.driver/CMSIS/Core/core_cm3.h ****  * @param  *addr  address pointer
1193:./.driver/CMSIS/Core/core_cm3.h ****  * @return        successful / failed
1194:./.driver/CMSIS/Core/core_cm3.h ****  *
1195:./.driver/CMSIS/Core/core_cm3.h ****  * Exclusive STR command for 32 bit values
1196:./.driver/CMSIS/Core/core_cm3.h ****  */
1197:./.driver/CMSIS/Core/core_cm3.h **** extern uint32_t __STREXW(uint32_t value, uint32_t *addr);
1198:./.driver/CMSIS/Core/core_cm3.h **** 
1199:./.driver/CMSIS/Core/core_cm3.h **** 
1200:./.driver/CMSIS/Core/core_cm3.h **** 
1201:./.driver/CMSIS/Core/core_cm3.h **** #elif (defined (__GNUC__)) /*------------------ GNU Compiler ---------------------*/
1202:./.driver/CMSIS/Core/core_cm3.h **** /* GNU gcc specific functions */
1203:./.driver/CMSIS/Core/core_cm3.h **** 
1204:./.driver/CMSIS/Core/core_cm3.h **** static __INLINE void __enable_irq()               { __ASM volatile ("cpsie i"); }
  26              		.loc 1 1204 51
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 1, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31 0000 80B4     		push	{r7}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 4
  34              		.cfi_offset 7, -4
  35 0002 00AF     		add	r7, sp, #0
  36              	.LCFI1:
  37              		.cfi_def_cfa_register 7
  38              		.loc 1 1204 53
  39              		.syntax unified
  40              	@ 1204 "./.driver/CMSIS/Core/core_cm3.h" 1
  41 0004 62B6     		cpsie i
  42              	@ 0 "" 2
  43              		.loc 1 1204 81
  44              		.thumb
  45              		.syntax unified
  46 0006 00BF     		nop
  47 0008 BD46     		mov	sp, r7
  48              	.LCFI2:
  49              		.cfi_def_cfa_register 13
  50              		@ sp needed
  51 000a 80BC     		pop	{r7}
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s 			page 23


  52              	.LCFI3:
  53              		.cfi_restore 7
  54              		.cfi_def_cfa_offset 0
  55 000c 7047     		bx	lr
  56              		.cfi_endproc
  57              	.LFE0:
  59              		.section	.text.__disable_irq,"ax",%progbits
  60              		.align	1
  61              		.syntax unified
  62              		.thumb
  63              		.thumb_func
  65              	__disable_irq:
  66              	.LFB1:
1205:./.driver/CMSIS/Core/core_cm3.h **** static __INLINE void __disable_irq()              { __ASM volatile ("cpsid i"); }
  67              		.loc 1 1205 51
  68              		.cfi_startproc
  69              		@ args = 0, pretend = 0, frame = 0
  70              		@ frame_needed = 1, uses_anonymous_args = 0
  71              		@ link register save eliminated.
  72 0000 80B4     		push	{r7}
  73              	.LCFI4:
  74              		.cfi_def_cfa_offset 4
  75              		.cfi_offset 7, -4
  76 0002 00AF     		add	r7, sp, #0
  77              	.LCFI5:
  78              		.cfi_def_cfa_register 7
  79              		.loc 1 1205 53
  80              		.syntax unified
  81              	@ 1205 "./.driver/CMSIS/Core/core_cm3.h" 1
  82 0004 72B6     		cpsid i
  83              	@ 0 "" 2
  84              		.loc 1 1205 81
  85              		.thumb
  86              		.syntax unified
  87 0006 00BF     		nop
  88 0008 BD46     		mov	sp, r7
  89              	.LCFI6:
  90              		.cfi_def_cfa_register 13
  91              		@ sp needed
  92 000a 80BC     		pop	{r7}
  93              	.LCFI7:
  94              		.cfi_restore 7
  95              		.cfi_def_cfa_offset 0
  96 000c 7047     		bx	lr
  97              		.cfi_endproc
  98              	.LFE1:
 100              		.global	I2Cx_Timeout
 101              		.section	.data.I2Cx_Timeout,"aw"
 102              		.align	2
 105              	I2Cx_Timeout:
 106 0000 AC0D0000 		.word	3500
 107              		.section	.text.i2c_ready_std,"ax",%progbits
 108              		.align	1
 109              		.syntax unified
 110              		.thumb
 111              		.thumb_func
 113              	i2c_ready_std:
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s 			page 24


 114              	.LFB33:
 115              		.file 2 "./i2c/i2c-std.c"
   1:./i2c/i2c-std.c **** /**
   2:./i2c/i2c-std.c ****  * @brief i2c-std.c
   3:./i2c/i2c-std.c ****  *
   4:./i2c/i2c-std.c ****  * @param student: Sameer Almaldein* @param ID: 679699
   5:./i2c/i2c-std.c ****  * @param University TU-Chemnitz
   6:./i2c/i2c-std.c ****  * @param Master : ASE(Automotive Software Engineering )
   7:./i2c/i2c-std.c ****  */ 
   8:./i2c/i2c-std.c **** 
   9:./i2c/i2c-std.c **** //********************************************************************************************
  10:./i2c/i2c-std.c **** //
  11:./i2c/i2c-std.c **** //  header  files
  12:./i2c/i2c-std.c **** //
  13:./i2c/i2c-std.c **** //********************************************************************************************
  14:./i2c/i2c-std.c **** #include "init.h"
  15:./i2c/i2c-std.c **** //********************************************************************************************
  16:./i2c/i2c-std.c **** //
  17:./i2c/i2c-std.c **** //  static Methods
  18:./i2c/i2c-std.c **** //
  19:./i2c/i2c-std.c **** //********************************************************************************************
  20:./i2c/i2c-std.c **** // Wait event internal methods
  21:./i2c/i2c-std.c **** static uint8_t i2c_ready_std(I2C_TypeDef* I2CX);                         //! wait until I2C bus is 
  22:./i2c/i2c-std.c **** static uint8_t i2c_wait_start_event_std(I2C_TypeDef* I2CX);		           //! wait start condition is
  23:./i2c/i2c-std.c **** static uint8_t i2c_wait_stop_event_std(I2C_TypeDef* I2CX);	             //! wait stop condition  is
  24:./i2c/i2c-std.c **** static uint8_t i2c_wait_7bit_slave_address_wr_std(I2C_TypeDef* I2CX);    //! wait the slave address
  25:./i2c/i2c-std.c **** static uint8_t i2c_wait_7bit_slave_address_rd_std(I2C_TypeDef* I2CX);    //! wait the slave address
  26:./i2c/i2c-std.c **** static uint8_t i2c_wait_write_byte_txe_std(I2C_TypeDef* I2CX);		           //! wait the complete of
  27:./i2c/i2c-std.c **** static uint8_t i2c_wait_write_byte_btf_std(I2C_TypeDef* I2CX);		           //! wait the complete of
  28:./i2c/i2c-std.c **** static uint8_t i2c_wait_read_byte_rxne_std(I2C_TypeDef* I2CX);		       //! wait the complete of cur
  29:./i2c/i2c-std.c **** static uint8_t i2c_wait_read_byte_btf_std(I2C_TypeDef* I2CX);            //! wait the complete of c
  30:./i2c/i2c-std.c **** 
  31:./i2c/i2c-std.c **** // trigger event internal methods
  32:./i2c/i2c-std.c **** static uint8_t i2c_start_std(I2C_TypeDef* I2CX);						              //!initiate start condition
  33:./i2c/i2c-std.c **** static uint8_t i2c_stop_std(I2C_TypeDef* I2CX);						                //! initiate stop condition
  34:./i2c/i2c-std.c **** static uint8_t i2c_send_7bit_slave_address_wr_std(I2C_TypeDef* I2CX,uint8_t slave_address);	//! sen
  35:./i2c/i2c-std.c **** static uint8_t i2c_send_7bit_slave_address_rd_std(I2C_TypeDef* I2CX,uint8_t slave_address);	//! sen
  36:./i2c/i2c-std.c **** 
  37:./i2c/i2c-std.c **** 
  38:./i2c/i2c-std.c **** static uint8_t i2c_write_byte_std(I2C_TypeDef* I2CX,uint8_t data);		         //! send a byte via I2
  39:./i2c/i2c-std.c **** static uint8_t i2c_write_nbyte_std(I2C_TypeDef* I2CX, uint8_t *buf, size_t n); //! send a n bytes v
  40:./i2c/i2c-std.c **** 
  41:./i2c/i2c-std.c **** static uint8_t i2c_read_lastbyte_std(I2C_TypeDef* I2CX,uint8_t *buf);	        // read only the last
  42:./i2c/i2c-std.c **** static uint8_t i2c_read_last2byte_std(I2C_TypeDef* I2CX,uint8_t *buf);	      // read only the last 
  43:./i2c/i2c-std.c **** static uint8_t i2c_read_last3byte_std(I2C_TypeDef* I2CX,uint8_t *buf);
  44:./i2c/i2c-std.c **** static uint8_t i2c_read_nbyte_std(I2C_TypeDef* I2CX,uint8_t *data, uint16_t n);	 
  45:./i2c/i2c-std.c **** 
  46:./i2c/i2c-std.c **** //********************************************************************************************
  47:./i2c/i2c-std.c **** //
  48:./i2c/i2c-std.c **** //  extern variables
  49:./i2c/i2c-std.c **** //
  50:./i2c/i2c-std.c **** //********************************************************************************************
  51:./i2c/i2c-std.c **** volatile uint32_t I2Cx_Timeout =I2C_MAX_BUSY_TIME;
  52:./i2c/i2c-std.c **** 
  53:./i2c/i2c-std.c **** //********************************************************************************************
  54:./i2c/i2c-std.c **** //
  55:./i2c/i2c-std.c **** //  static methods definitions
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s 			page 25


  56:./i2c/i2c-std.c **** //  Wait event methods
  57:./i2c/i2c-std.c **** //
  58:./i2c/i2c-std.c **** //********************************************************************************************
  59:./i2c/i2c-std.c **** /**
  60:./i2c/i2c-std.c ****  * @brief    checks that I2C bus & the module is in Idle state
  61:./i2c/i2c-std.c ****  * @details  when the I2C module is in the idle state that means BUSY Flag is reset (BUSY=0)
  62:./i2c/i2c-std.c ****  *          BUSY: Bus busy
  63:./i2c/i2c-std.c ****                 0: No communication on the bus
  64:./i2c/i2c-std.c ****                 1: Communication ongoing on the bus
  65:./i2c/i2c-std.c ****                 – Set by hardware on detection of SDA or SCL low
  66:./i2c/i2c-std.c ****                 – cleared by hardware on detection of a Stop condition.
  67:./i2c/i2c-std.c ****                It indicates a communication in progress on the bus. This information is still updat
  68:./i2c/i2c-std.c ****                the interface is disabled (PE=0). 
  69:./i2c/i2c-std.c ****  *           
  70:./i2c/i2c-std.c ****              I2C_BUSY_CONDITION_ERROR:
  71:./i2c/i2c-std.c ****               if a timeout is passed without detecting a BUSY=0 then set an error condition 
  72:./i2c/i2c-std.c ****  *           to handle this error after 3 times try then reset the I2C and reconfigure it
  73:./i2c/i2c-std.c ****  *           it could be the system is halt and need reset.  
  74:./i2c/i2c-std.c ****  * @param I2CX 
  75:./i2c/i2c-std.c ****  * @return uint8_t 
  76:./i2c/i2c-std.c ****  */
  77:./i2c/i2c-std.c **** uint8_t i2c_ready_std(I2C_TypeDef* I2CX)
  78:./i2c/i2c-std.c **** {
 116              		.loc 2 78 1
 117              		.cfi_startproc
 118              		@ args = 0, pretend = 0, frame = 8
 119              		@ frame_needed = 1, uses_anonymous_args = 0
 120              		@ link register save eliminated.
 121 0000 80B4     		push	{r7}
 122              	.LCFI8:
 123              		.cfi_def_cfa_offset 4
 124              		.cfi_offset 7, -4
 125 0002 83B0     		sub	sp, sp, #12
 126              	.LCFI9:
 127              		.cfi_def_cfa_offset 16
 128 0004 00AF     		add	r7, sp, #0
 129              	.LCFI10:
 130              		.cfi_def_cfa_register 7
 131 0006 7860     		str	r0, [r7, #4]
  79:./i2c/i2c-std.c ****    I2Cx_Timeout=I2C_MAX_BUSY_TIME;    
 132              		.loc 2 79 16
 133 0008 0B4B     		ldr	r3, .L7
 134 000a 40F6AC52 		movw	r2, #3500
 135 000e 1A60     		str	r2, [r3]
  80:./i2c/i2c-std.c ****     //_delay_ms(25);
  81:./i2c/i2c-std.c ****   //wait check that the I2c module is not busy
  82:./i2c/i2c-std.c ****     while(bits_is_set(I2CX->SR2,I2C_SR2_BUSY))  //I2C_GetFlagStatus(I2CX,I2C_FLAG_BUSY))
 136              		.loc 2 82 10
 137 0010 05E0     		b	.L4
 138              	.L6:
  83:./i2c/i2c-std.c ****       if(I2Cx_Timeout==0)  
 139              		.loc 2 83 22
 140 0012 094B     		ldr	r3, .L7
 141 0014 1B68     		ldr	r3, [r3]
 142              		.loc 2 83 9
 143 0016 002B     		cmp	r3, #0
 144 0018 01D1     		bne	.L4
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s 			page 26


  84:./i2c/i2c-std.c ****         return I2C_BUSY;                 // set the error then exit:: I2C_BUSY_ERROR
 145              		.loc 2 84 16
 146 001a 0123     		movs	r3, #1
 147 001c 07E0     		b	.L5
 148              	.L4:
  82:./i2c/i2c-std.c ****       if(I2Cx_Timeout==0)  
 149              		.loc 2 82 11
 150 001e 7B68     		ldr	r3, [r7, #4]
 151 0020 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 152 0022 9BB2     		uxth	r3, r3
 153 0024 03F00203 		and	r3, r3, #2
  82:./i2c/i2c-std.c ****       if(I2Cx_Timeout==0)  
 154              		.loc 2 82 10
 155 0028 002B     		cmp	r3, #0
 156 002a F2D1     		bne	.L6
  85:./i2c/i2c-std.c **** 
  86:./i2c/i2c-std.c ****    return I2C_OK;   
 157              		.loc 2 86 11
 158 002c 0023     		movs	r3, #0
 159              	.L5:
  87:./i2c/i2c-std.c **** }    
 160              		.loc 2 87 1
 161 002e 1846     		mov	r0, r3
 162 0030 0C37     		adds	r7, r7, #12
 163              	.LCFI11:
 164              		.cfi_def_cfa_offset 4
 165 0032 BD46     		mov	sp, r7
 166              	.LCFI12:
 167              		.cfi_def_cfa_register 13
 168              		@ sp needed
 169 0034 80BC     		pop	{r7}
 170              	.LCFI13:
 171              		.cfi_restore 7
 172              		.cfi_def_cfa_offset 0
 173 0036 7047     		bx	lr
 174              	.L8:
 175              		.align	2
 176              	.L7:
 177 0038 00000000 		.word	I2Cx_Timeout
 178              		.cfi_endproc
 179              	.LFE33:
 181              		.section	.text.i2c_wait_start_event_std,"ax",%progbits
 182              		.align	1
 183              		.syntax unified
 184              		.thumb
 185              		.thumb_func
 187              	i2c_wait_start_event_std:
 188              	.LFB34:
  88:./i2c/i2c-std.c **** //-------------------------------------------------------------------------------------------------
  89:./i2c/i2c-std.c **** /**
  90:./i2c/i2c-std.c ****  * @brief wait the until the start condidtion is completed
  91:./i2c/i2c-std.c ****  * @details  check that the start condition is finished  by checking the following flags 
  92:./i2c/i2c-std.c ****  *            BUSY, MSL and SB flag are all set  
  93:./i2c/i2c-std.c ****  *           EV5: at the  SB=1, cleared by reading SR1 register followed by writing the DR register
  94:./i2c/i2c-std.c ****  *           SB= 1 indicates Start condition generated and finished 
  95:./i2c/i2c-std.c ****  *           BUSY=1 indicates the I2C is busy (no arbitration lost or peripheral) 
  96:./i2c/i2c-std.c ****  *           MSL=1  indicates Master mode 
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s 			page 27


  97:./i2c/i2c-std.c ****  * I2C_SR1 : I2C Status register 1
  98:./i2c/i2c-std.c ****  *            SB: Start bit (Master mode)
  99:./i2c/i2c-std.c ****               0: No Start condition
 100:./i2c/i2c-std.c ****               1: Start condition generated.
 101:./i2c/i2c-std.c ****               – Set when a Start condition generated.
 102:./i2c/i2c-std.c ****               – Cleared by software by reading the SR1 register followed by writing the DR regist
 103:./i2c/i2c-std.c ****    I2C_SR2 : I2C Status register 2          
 104:./i2c/i2c-std.c ****             TRA: Transmitter/receiver
 105:./i2c/i2c-std.c ****               0: Data bytes received
 106:./i2c/i2c-std.c ****               1: Data bytes transmitted
 107:./i2c/i2c-std.c ****             This bit is set depending on the R/W bit of the address byte, at the end of total addre
 108:./i2c/i2c-std.c ****             It is also cleared by hardware after detection of Stop condition (STOPF=1), repeated St
 109:./i2c/i2c-std.c ****             loss of bus arbitration (ARLO=1), or when PE=0.
 110:./i2c/i2c-std.c ****             BUSY: Bus busy
 111:./i2c/i2c-std.c ****              0: No communication on the bus
 112:./i2c/i2c-std.c ****              1: Communication ongoing on the bus
 113:./i2c/i2c-std.c ****              – Set by hardware on detection of SDA or SCL low
 114:./i2c/i2c-std.c ****              – cleared by hardware on detection of a Stop condition.
 115:./i2c/i2c-std.c ****              It indicates a communication in progress on the bus. This information is still updated
 116:./i2c/i2c-std.c ****             MSL: Master/slave
 117:./i2c/i2c-std.c ****               0: Slave Mode
 118:./i2c/i2c-std.c ****               1: Master Mode
 119:./i2c/i2c-std.c ****               – Set by hardware as soon as the interface is in Master mode (SB=1).
 120:./i2c/i2c-std.c ****               – Cleared by hardware after detecting a Stop condition on the bus or a loss of arbi
 121:./i2c/i2c-std.c ****  *           I2C_START_ERROR :
 122:./i2c/i2c-std.c ****  *           if a timeout is passed without detecting a SB=1 then set an error condition 
 123:./i2c/i2c-std.c ****  *           to handle this error then reset the I2C and reconfigure it
 124:./i2c/i2c-std.c ****  *           it could be the system is halt and need reset.  
 125:./i2c/i2c-std.c ****  * @param I2CX 
 126:./i2c/i2c-std.c ****  * @return uint8_t   
 127:./i2c/i2c-std.c **** */
 128:./i2c/i2c-std.c **** uint8_t i2c_wait_start_event_std(I2C_TypeDef* I2CX)
 129:./i2c/i2c-std.c **** {
 189              		.loc 2 129 1
 190              		.cfi_startproc
 191              		@ args = 0, pretend = 0, frame = 8
 192              		@ frame_needed = 1, uses_anonymous_args = 0
 193              		@ link register save eliminated.
 194 0000 80B4     		push	{r7}
 195              	.LCFI14:
 196              		.cfi_def_cfa_offset 4
 197              		.cfi_offset 7, -4
 198 0002 83B0     		sub	sp, sp, #12
 199              	.LCFI15:
 200              		.cfi_def_cfa_offset 16
 201 0004 00AF     		add	r7, sp, #0
 202              	.LCFI16:
 203              		.cfi_def_cfa_register 7
 204 0006 7860     		str	r0, [r7, #4]
 130:./i2c/i2c-std.c ****    I2Cx_Timeout=I2C_MAX_WAIT_TIME;
 205              		.loc 2 130 16
 206 0008 104B     		ldr	r3, .L14
 207 000a 40F6AC52 		movw	r2, #3500
 208 000e 1A60     		str	r2, [r3]
 131:./i2c/i2c-std.c ****     //wait the event I2C_EVENT_MASTER_MODE_SELECT where BUSY, MSL and SB flag are set  (At EV5)
 132:./i2c/i2c-std.c ****     //EV5: at the  SB=1, cleared by reading SR1 register followed by writing the DR register.
 133:./i2c/i2c-std.c ****     //   while(!I2C_CheckEvent(I2CX,I2C_EVENT_MASTER_MODE_SELECT))
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s 			page 28


 134:./i2c/i2c-std.c ****     //   while(_I2C_GET_FLAG(I2CX,I2C_SR1_SB)==RESET   ||
 135:./i2c/i2c-std.c ****     //         _I2C_GET_FLAG(I2CX,I2C_SR2_BUSY)==RESET ||
 136:./i2c/i2c-std.c ****     //         _I2C_GET_FLAG(I2CX,I2C_SR2_MSL)==RESET  )
 137:./i2c/i2c-std.c ****     //   while(bits_is_clear(I2CX->SR1,I2C_SR1_SB)||  bits_is_clear(I2CX->SR2,(uint16_t)(I2C_SR2_BU
 138:./i2c/i2c-std.c ****    while(bits_is_clear(I2CX->SR1,I2C_SR1_SB)) 
 209              		.loc 2 138 9
 210 0010 0FE0     		b	.L10
 211              	.L13:
 139:./i2c/i2c-std.c ****     {     
 140:./i2c/i2c-std.c ****       if(I2Cx_Timeout==0)  
 212              		.loc 2 140 22
 213 0012 0E4B     		ldr	r3, .L14
 214 0014 1B68     		ldr	r3, [r3]
 215              		.loc 2 140 9
 216 0016 002B     		cmp	r3, #0
 217 0018 0BD1     		bne	.L10
 141:./i2c/i2c-std.c ****       {
 142:./i2c/i2c-std.c ****         if (READ_BIT(I2CX->CR1, I2C_CR1_START) == I2C_CR1_START)
 218              		.loc 2 142 13
 219 001a 7B68     		ldr	r3, [r7, #4]
 220 001c 1B88     		ldrh	r3, [r3]	@ movhi
 221 001e 9BB2     		uxth	r3, r3
 222 0020 03F48073 		and	r3, r3, #256
 223              		.loc 2 142 12
 224 0024 B3F5807F 		cmp	r3, #256
 225 0028 01D1     		bne	.L11
 143:./i2c/i2c-std.c ****         {
 144:./i2c/i2c-std.c ****           return  I2C_START_ERROR ; // set the error then exit :: I2C_START_CONDITION_ERROR :
 226              		.loc 2 144 19
 227 002a 0323     		movs	r3, #3
 228 002c 09E0     		b	.L12
 229              	.L11:
 145:./i2c/i2c-std.c ****         }
 146:./i2c/i2c-std.c ****         return I2C_TIMEOUT ;        
 230              		.loc 2 146 16
 231 002e 0223     		movs	r3, #2
 232 0030 07E0     		b	.L12
 233              	.L10:
 138:./i2c/i2c-std.c ****     {     
 234              		.loc 2 138 10
 235 0032 7B68     		ldr	r3, [r7, #4]
 236 0034 9B8A     		ldrh	r3, [r3, #20]	@ movhi
 237 0036 9BB2     		uxth	r3, r3
 238 0038 03F00103 		and	r3, r3, #1
 138:./i2c/i2c-std.c ****     {     
 239              		.loc 2 138 9
 240 003c 002B     		cmp	r3, #0
 241 003e E8D0     		beq	.L13
 147:./i2c/i2c-std.c ****       }   
 148:./i2c/i2c-std.c ****     }
 149:./i2c/i2c-std.c ****   return I2C_OK;  
 242              		.loc 2 149 10
 243 0040 0023     		movs	r3, #0
 244              	.L12:
 150:./i2c/i2c-std.c **** }
 245              		.loc 2 150 1
 246 0042 1846     		mov	r0, r3
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s 			page 29


 247 0044 0C37     		adds	r7, r7, #12
 248              	.LCFI17:
 249              		.cfi_def_cfa_offset 4
 250 0046 BD46     		mov	sp, r7
 251              	.LCFI18:
 252              		.cfi_def_cfa_register 13
 253              		@ sp needed
 254 0048 80BC     		pop	{r7}
 255              	.LCFI19:
 256              		.cfi_restore 7
 257              		.cfi_def_cfa_offset 0
 258 004a 7047     		bx	lr
 259              	.L15:
 260              		.align	2
 261              	.L14:
 262 004c 00000000 		.word	I2Cx_Timeout
 263              		.cfi_endproc
 264              	.LFE34:
 266              		.section	.text.i2c_wait_stop_event_std,"ax",%progbits
 267              		.align	1
 268              		.syntax unified
 269              		.thumb
 270              		.thumb_func
 272              	i2c_wait_stop_event_std:
 273              	.LFB35:
 151:./i2c/i2c-std.c **** //-------------------------------------------------------------------------------------------------
 152:./i2c/i2c-std.c **** /**
 153:./i2c/i2c-std.c ****  * @brief wait the until the stop condidtion is completed
 154:./i2c/i2c-std.c ****  * @details  check that the stop condition is finished  by checking the flag STOPF=1 
 155:./i2c/i2c-std.c ****  *           Master-Transmitter Mode:
 156:./i2c/i2c-std.c ****  *              EV8_2: TxE=1, BTF = 1, Program Stop request. TxE and BTF are cleared by hardware by
 157:./i2c/i2c-std.c ****  *           Master-receiver Mode:
 158:./i2c/i2c-std.c ****  *            -N> 2
 159:./i2c/i2c-std.c ****  *              EV7: RxNE=1, cleared by reading DR register
 160:./i2c/i2c-std.c ****                 EV7_2: BTF = 1, DataN-2 in DR and DataN-1 in shift register, program ACK = 0, Read 
 161:./i2c/i2c-std.c ****  *           After the Stop condition generation, the interface goes automatically back to slave mo
 162:./i2c/i2c-std.c ****             -N=2 
 163:./i2c/i2c-std.c ****                 EV7_3: BTF = 1, program STOP = 1, read DR twice (Read Data1 and Data2) just after p
 164:./i2c/i2c-std.c ****  *          STOPF:
 165:./i2c/i2c-std.c ****  *            – Set by hardware when a Stop condition is detected on the bus by the slave after a
 166:./i2c/i2c-std.c ****  *            – Cleared by software reading the SR1 register followed by a write in the CR1 regis
 167:./i2c/i2c-std.c ****             Note 1: The STOPF bit is not set after a NACK reception.
 168:./i2c/i2c-std.c ****             Note 2:
 169:./i2c/i2c-std.c ****                 It is recommended to perform the complete clearing sequence (READ SR1 then WRITE CR
 170:./i2c/i2c-std.c ****             Note 3:
 171:./i2c/i2c-std.c ****                 at the end of any I2C bus transaction checking the STOPF --> SR1 is read
 172:./i2c/i2c-std.c ****                 as each new start I2C bus transaction will always start (after checking BUSY) by ge
 173:./i2c/i2c-std.c ****                 therefore actually after each startcondition generation the STOPF will be reset by 
 174:./i2c/i2c-std.c **** 
 175:./i2c/i2c-std.c ****  *           I2C_STOP_ERROR:
 176:./i2c/i2c-std.c ****  *           if a timeout is passed without detecting a STOPF=1 then set an error condition 
 177:./i2c/i2c-std.c ****  *           to handle this error then reset the I2C and reconfigure it
 178:./i2c/i2c-std.c ****  *           it could be the system is halt and need reset.  
 179:./i2c/i2c-std.c ****  * @param I2CX 
 180:./i2c/i2c-std.c ****  * @return uint8_t   
 181:./i2c/i2c-std.c **** */
 182:./i2c/i2c-std.c **** uint8_t i2c_wait_stop_event_std(I2C_TypeDef* I2CX)
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s 			page 30


 183:./i2c/i2c-std.c **** {
 274              		.loc 2 183 1
 275              		.cfi_startproc
 276              		@ args = 0, pretend = 0, frame = 16
 277              		@ frame_needed = 1, uses_anonymous_args = 0
 278              		@ link register save eliminated.
 279 0000 80B4     		push	{r7}
 280              	.LCFI20:
 281              		.cfi_def_cfa_offset 4
 282              		.cfi_offset 7, -4
 283 0002 85B0     		sub	sp, sp, #20
 284              	.LCFI21:
 285              		.cfi_def_cfa_offset 24
 286 0004 00AF     		add	r7, sp, #0
 287              	.LCFI22:
 288              		.cfi_def_cfa_register 7
 289 0006 7860     		str	r0, [r7, #4]
 184:./i2c/i2c-std.c ****   I2Cx_Timeout=I2C_MAX_WAIT_TIME;  
 290              		.loc 2 184 15
 291 0008 174B     		ldr	r3, .L21
 292 000a 40F6AC52 		movw	r2, #3500
 293 000e 1A60     		str	r2, [r3]
 185:./i2c/i2c-std.c ****   // wait until stop condition is complete STOPF is set
 186:./i2c/i2c-std.c ****   while(bits_is_set(I2CX->SR2,I2C_SR2_MSL))//I2Cx_Timeout>0)//bit_is_clear(I2CX->SR1,I2C_SR1_STOPF)
 294              		.loc 2 186 8
 295 0010 1DE0     		b	.L17
 296              	.L20:
 187:./i2c/i2c-std.c ****    {   
 188:./i2c/i2c-std.c ****         /* Generate Stop */
 189:./i2c/i2c-std.c ****         //SET_BIT(I2CX->CR1, I2C_CR1_STOP);
 190:./i2c/i2c-std.c **** 
 191:./i2c/i2c-std.c ****       /* Check if a STOPF is detected */
 192:./i2c/i2c-std.c **** 
 193:./i2c/i2c-std.c ****       if (bits_is_set(I2CX->SR1,I2C_SR1_STOPF) )
 297              		.loc 2 193 11
 298 0012 7B68     		ldr	r3, [r7, #4]
 299 0014 9B8A     		ldrh	r3, [r3, #20]	@ movhi
 300 0016 9BB2     		uxth	r3, r3
 301 0018 03F01003 		and	r3, r3, #16
 302              		.loc 2 193 10
 303 001c 002B     		cmp	r3, #0
 304 001e 10D0     		beq	.L18
 305              	.LBB2:
 194:./i2c/i2c-std.c ****       {
 195:./i2c/i2c-std.c ****           /* Clear STOP Flag */
 196:./i2c/i2c-std.c ****           _I2C_CLEAR_STOPFLAG(I2CX);      
 306              		.loc 2 196 11
 307 0020 0023     		movs	r3, #0
 308 0022 FB60     		str	r3, [r7, #12]
 309 0024 7B68     		ldr	r3, [r7, #4]
 310 0026 9B8A     		ldrh	r3, [r3, #20]	@ movhi
 311 0028 9BB2     		uxth	r3, r3
 312 002a FB60     		str	r3, [r7, #12]
 313 002c 7B68     		ldr	r3, [r7, #4]
 314 002e 1B88     		ldrh	r3, [r3]	@ movhi
 315 0030 9BB2     		uxth	r3, r3
 316 0032 43F00103 		orr	r3, r3, #1
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s 			page 31


 317 0036 9AB2     		uxth	r2, r3
 318 0038 7B68     		ldr	r3, [r7, #4]
 319 003a 1A80     		strh	r2, [r3]	@ movhi
 320 003c FB68     		ldr	r3, [r7, #12]
 321              	.LBE2:
 197:./i2c/i2c-std.c ****           return 0x40;//I2C_OK;
 322              		.loc 2 197 18
 323 003e 4023     		movs	r3, #64
 324 0040 0DE0     		b	.L19
 325              	.L18:
 198:./i2c/i2c-std.c ****       }
 199:./i2c/i2c-std.c ****       if(I2Cx_Timeout==0)  
 326              		.loc 2 199 22
 327 0042 094B     		ldr	r3, .L21
 328 0044 1B68     		ldr	r3, [r3]
 329              		.loc 2 199 9
 330 0046 002B     		cmp	r3, #0
 331 0048 01D1     		bne	.L17
 200:./i2c/i2c-std.c ****         return I2C_STOP_ERROR;
 332              		.loc 2 200 16
 333 004a 0423     		movs	r3, #4
 334 004c 07E0     		b	.L19
 335              	.L17:
 186:./i2c/i2c-std.c ****    {   
 336              		.loc 2 186 9
 337 004e 7B68     		ldr	r3, [r7, #4]
 338 0050 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 339 0052 9BB2     		uxth	r3, r3
 340 0054 03F00103 		and	r3, r3, #1
 186:./i2c/i2c-std.c ****    {   
 341              		.loc 2 186 8
 342 0058 002B     		cmp	r3, #0
 343 005a DAD1     		bne	.L20
 201:./i2c/i2c-std.c **** 
 202:./i2c/i2c-std.c ****    }  
 203:./i2c/i2c-std.c ****    //if(I2Cx_Timeout==0)  
 204:./i2c/i2c-std.c ****     //return I2C_STOP_ERROR;
 205:./i2c/i2c-std.c ****     // CLEAR_BIT(I2CX->CR1,I2C_CR1_PE);   //cbits(I2CX->CR1,I2C_CR1_PE);
 206:./i2c/i2c-std.c ****     // asm("nop");
 207:./i2c/i2c-std.c ****     // asm("nop");
 208:./i2c/i2c-std.c ****     // asm("nop");
 209:./i2c/i2c-std.c ****     // SET_BIT(I2CX->CR1,I2C_CR1_PE);
 210:./i2c/i2c-std.c **** 
 211:./i2c/i2c-std.c ****       //return I2C_STOP_ERROR;
 212:./i2c/i2c-std.c **** 
 213:./i2c/i2c-std.c ****     //sbits(I2CX->CR1,I2C_CR1_PE);
 214:./i2c/i2c-std.c ****   return I2C_OK;
 344              		.loc 2 214 10
 345 005c 0023     		movs	r3, #0
 346              	.L19:
 215:./i2c/i2c-std.c **** }
 347              		.loc 2 215 1
 348 005e 1846     		mov	r0, r3
 349 0060 1437     		adds	r7, r7, #20
 350              	.LCFI23:
 351              		.cfi_def_cfa_offset 4
 352 0062 BD46     		mov	sp, r7
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s 			page 32


 353              	.LCFI24:
 354              		.cfi_def_cfa_register 13
 355              		@ sp needed
 356 0064 80BC     		pop	{r7}
 357              	.LCFI25:
 358              		.cfi_restore 7
 359              		.cfi_def_cfa_offset 0
 360 0066 7047     		bx	lr
 361              	.L22:
 362              		.align	2
 363              	.L21:
 364 0068 00000000 		.word	I2Cx_Timeout
 365              		.cfi_endproc
 366              	.LFE35:
 368              		.section	.text.i2c_wait_7bit_slave_address_wr_std,"ax",%progbits
 369              		.align	1
 370              		.syntax unified
 371              		.thumb
 372              		.thumb_func
 374              	i2c_wait_7bit_slave_address_wr_std:
 375              	.LFB36:
 216:./i2c/i2c-std.c **** //-------------------------------------------------------------------------------------------------
 217:./i2c/i2c-std.c **** /**
 218:./i2c/i2c-std.c ****  * @brief    Waits until the slave acknowledges back to the reception of its address in write mode 
 219:./i2c/i2c-std.c ****  * @details  check that the slave aknowledges back as it receives its address  the flags
 220:./i2c/i2c-std.c ****  *           BUSY, MSL, ADDR, TXE and TRA which all set during EV6
 221:./i2c/i2c-std.c ****  *            EV6: ADDR=1, cleared by reading SR1 register followed by reading SR2.
 222:./i2c/i2c-std.c ****  *           TXE= 1 indicates that Data register empty that means th address is sent to shift-regis
 223:./i2c/i2c-std.c ****  *                 and transmission is either on process or even done 
 224:./i2c/i2c-std.c ****  *           ADDR=1 indicates End of address transmission which is defined by the slave acknowledgm
 225:./i2c/i2c-std.c ****  *           TRA=1  indicates Transmitter mode set depending on the R/W bit of the address byte
 226:./i2c/i2c-std.c ****  *           BUSY=1 indicates the I2C is busy (no arbitration lost or peripheral) 
 227:./i2c/i2c-std.c ****  *           MSL=1  indicates Master mode 
 228:./i2c/i2c-std.c ****     I2C_SR1 : I2C Status register 1
 229:./i2c/i2c-std.c ****             TXE: Data register empty (transmitters)
 230:./i2c/i2c-std.c ****                 0: Data register not empty
 231:./i2c/i2c-std.c ****                 1: Data register empty
 232:./i2c/i2c-std.c ****               – Set when DR is empty in transmission. TxE is not set during address phase.
 233:./i2c/i2c-std.c ****               – Cleared by software writing to the DR register or by hardware after a start or a 
 234:./i2c/i2c-std.c ****               TxE is not set if either a NACK is received, or if next byte to be transmitted is PEC
 235:./i2c/i2c-std.c ****               Note: TxE is not cleared by writing the first data being transmitted, or by writing d
 236:./i2c/i2c-std.c ****               BTF is set, as in both cases the data register is still empty.
 237:./i2c/i2c-std.c ****  *         ADDR: 
 238:./i2c/i2c-std.c ****  *          This bit is cleared by software reading SR1 register followed reading SR2, or by hardwa
 239:./i2c/i2c-std.c ****  *           1.Slave :: Address matched (Slave)
 240:./i2c/i2c-std.c ****               0: Address mismatched or not received.
 241:./i2c/i2c-std.c ****               1: Received address matched
 242:./i2c/i2c-std.c ****  *          
 243:./i2c/i2c-std.c ****             2. Master : Address sent (Master)
 244:./i2c/i2c-std.c ****               0: No end of address transmission
 245:./i2c/i2c-std.c ****               1: End of address transmission
 246:./i2c/i2c-std.c ****             – For 10-bit addressing, the bit is set after the ACK of the 2nd byte.
 247:./i2c/i2c-std.c ****             – For 7-bit addressing, the bit is set after the ACK
 248:./i2c/i2c-std.c ****  *          Note: 
 249:./i2c/i2c-std.c ****                ADDR is not set after a NACK reception
 250:./i2c/i2c-std.c ****  
 251:./i2c/i2c-std.c ****    I2C_SR2 : I2C Status register 2          
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s 			page 33


 252:./i2c/i2c-std.c ****             TRA: Transmitter/receiver
 253:./i2c/i2c-std.c ****               0: Data bytes received
 254:./i2c/i2c-std.c ****               1: Data bytes transmitted
 255:./i2c/i2c-std.c ****             This bit is set depending on the R/W bit of the address byte, at the end of total addre
 256:./i2c/i2c-std.c ****             It is also cleared by hardware after detection of Stop condition (STOPF=1), repeated St
 257:./i2c/i2c-std.c ****             loss of bus arbitration (ARLO=1), or when PE=0.
 258:./i2c/i2c-std.c ****             BUSY: Bus busy
 259:./i2c/i2c-std.c ****              0: No communication on the bus
 260:./i2c/i2c-std.c ****              1: Communication ongoing on the bus
 261:./i2c/i2c-std.c ****              – Set by hardware on detection of SDA or SCL low
 262:./i2c/i2c-std.c ****              – cleared by hardware on detection of a Stop condition.
 263:./i2c/i2c-std.c ****              It indicates a communication in progress on the bus. This information is still updated
 264:./i2c/i2c-std.c ****             MSL: Master/slave
 265:./i2c/i2c-std.c ****               0: Slave Mode
 266:./i2c/i2c-std.c ****               1: Master Mode
 267:./i2c/i2c-std.c ****               – Set by hardware as soon as the interface is in Master mode (SB=1).
 268:./i2c/i2c-std.c ****               – Cleared by hardware after detecting a Stop condition on the bus or a loss of arbi
 269:./i2c/i2c-std.c **** 
 270:./i2c/i2c-std.c ****             I2C_SLAVE_ADDRESS_NACK_ERROR:
 271:./i2c/i2c-std.c ****  *           if a timeout is passed without detecting a ADDR=1 then set an error condition  
 272:./i2c/i2c-std.c ****  *           which indicates that no slave has acknowledged on the I2C bus either no one has
 273:./i2c/i2c-std.c ****  *           this address or that slave has an issue to check 
 274:./i2c/i2c-std.c ****  * @param I2CX 
 275:./i2c/i2c-std.c ****  * @return uint8_t   
 276:./i2c/i2c-std.c **** */
 277:./i2c/i2c-std.c **** uint8_t i2c_wait_7bit_slave_address_wr_std(I2C_TypeDef* I2CX)
 278:./i2c/i2c-std.c **** {
 376              		.loc 2 278 1
 377              		.cfi_startproc
 378              		@ args = 0, pretend = 0, frame = 8
 379              		@ frame_needed = 1, uses_anonymous_args = 0
 380              		@ link register save eliminated.
 381 0000 80B4     		push	{r7}
 382              	.LCFI26:
 383              		.cfi_def_cfa_offset 4
 384              		.cfi_offset 7, -4
 385 0002 83B0     		sub	sp, sp, #12
 386              	.LCFI27:
 387              		.cfi_def_cfa_offset 16
 388 0004 00AF     		add	r7, sp, #0
 389              	.LCFI28:
 390              		.cfi_def_cfa_register 7
 391 0006 7860     		str	r0, [r7, #4]
 279:./i2c/i2c-std.c ****   //! wait the slave address acknowledge Master_Write
 280:./i2c/i2c-std.c ****     I2Cx_Timeout=I2C_MAX_WAIT_TIME;  
 392              		.loc 2 280 17
 393 0008 184B     		ldr	r3, .L28
 394 000a 40F6AC52 		movw	r2, #3500
 395 000e 1A60     		str	r2, [r3]
 281:./i2c/i2c-std.c ****   // wait until the slave acknowledge  BUSY, MSL, ADDR, TXE and TRA flags are all set during Ev6
 282:./i2c/i2c-std.c ****   //  EV6: ADDR=1, cleared by reading SR1 register followed by reading SR2. 
 283:./i2c/i2c-std.c ****     while(bits_is_clear(I2CX->SR1,I2C_SR1_ADDR))
 396              		.loc 2 283 10
 397 0010 1EE0     		b	.L24
 398              	.L27:
 284:./i2c/i2c-std.c ****           //bits_is_clear(I2CX->SR2,(uint16_t)(I2C_SR2_BUSY|I2C_SR2_MSL|I2C_SR2_TRA)))   //!I2C_Che
 285:./i2c/i2c-std.c ****     {
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s 			page 34


 286:./i2c/i2c-std.c ****       if(bits_is_set(I2CX->SR1,I2C_SR1_AF))  
 399              		.loc 2 286 10
 400 0012 7B68     		ldr	r3, [r7, #4]
 401 0014 9B8A     		ldrh	r3, [r3, #20]	@ movhi
 402 0016 9BB2     		uxth	r3, r3
 403 0018 03F48063 		and	r3, r3, #1024
 404              		.loc 2 286 9
 405 001c 002B     		cmp	r3, #0
 406 001e 11D0     		beq	.L25
 287:./i2c/i2c-std.c ****       {
 288:./i2c/i2c-std.c ****         /* Generate Stop */
 289:./i2c/i2c-std.c ****         SET_BIT(I2CX->CR1, I2C_CR1_STOP);
 407              		.loc 2 289 9
 408 0020 7B68     		ldr	r3, [r7, #4]
 409 0022 1B88     		ldrh	r3, [r3]	@ movhi
 410 0024 9BB2     		uxth	r3, r3
 411 0026 43F40073 		orr	r3, r3, #512
 412 002a 9AB2     		uxth	r2, r3
 413 002c 7B68     		ldr	r3, [r7, #4]
 414 002e 1A80     		strh	r2, [r3]	@ movhi
 290:./i2c/i2c-std.c ****         /* Clear AF Flag */
 291:./i2c/i2c-std.c ****         CLEAR_BIT(I2CX->SR1,I2C_FLAG_AF);  //_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 415              		.loc 2 291 9
 416 0030 7B68     		ldr	r3, [r7, #4]
 417 0032 9B8A     		ldrh	r3, [r3, #20]	@ movhi
 418 0034 9BB2     		uxth	r3, r3
 419 0036 23F48063 		bic	r3, r3, #1024
 420 003a 9AB2     		uxth	r2, r3
 421 003c 7B68     		ldr	r3, [r7, #4]
 422 003e 9A82     		strh	r2, [r3, #20]	@ movhi
 292:./i2c/i2c-std.c ****         
 293:./i2c/i2c-std.c ****       // I2C_NACK Acknowledge no slave with this address at the bus
 294:./i2c/i2c-std.c ****         return I2C_NACK_ERROR;
 423              		.loc 2 294 16
 424 0040 0523     		movs	r3, #5
 425 0042 0DE0     		b	.L26
 426              	.L25:
 295:./i2c/i2c-std.c ****      }
 296:./i2c/i2c-std.c ****      if(I2Cx_Timeout==0)
 427              		.loc 2 296 21
 428 0044 094B     		ldr	r3, .L28
 429 0046 1B68     		ldr	r3, [r3]
 430              		.loc 2 296 8
 431 0048 002B     		cmp	r3, #0
 432 004a 01D1     		bne	.L24
 297:./i2c/i2c-std.c ****         return I2C_TIMEOUT; //I2C_ERROR
 433              		.loc 2 297 16
 434 004c 0223     		movs	r3, #2
 435 004e 07E0     		b	.L26
 436              	.L24:
 283:./i2c/i2c-std.c ****           //bits_is_clear(I2CX->SR2,(uint16_t)(I2C_SR2_BUSY|I2C_SR2_MSL|I2C_SR2_TRA)))   //!I2C_Che
 437              		.loc 2 283 11
 438 0050 7B68     		ldr	r3, [r7, #4]
 439 0052 9B8A     		ldrh	r3, [r3, #20]	@ movhi
 440 0054 9BB2     		uxth	r3, r3
 441 0056 03F00203 		and	r3, r3, #2
 283:./i2c/i2c-std.c ****           //bits_is_clear(I2CX->SR2,(uint16_t)(I2C_SR2_BUSY|I2C_SR2_MSL|I2C_SR2_TRA)))   //!I2C_Che
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s 			page 35


 442              		.loc 2 283 10
 443 005a 002B     		cmp	r3, #0
 444 005c D9D0     		beq	.L27
 298:./i2c/i2c-std.c ****     }
 299:./i2c/i2c-std.c ****    return I2C_OK; 
 445              		.loc 2 299 11
 446 005e 0023     		movs	r3, #0
 447              	.L26:
 300:./i2c/i2c-std.c **** }
 448              		.loc 2 300 1
 449 0060 1846     		mov	r0, r3
 450 0062 0C37     		adds	r7, r7, #12
 451              	.LCFI29:
 452              		.cfi_def_cfa_offset 4
 453 0064 BD46     		mov	sp, r7
 454              	.LCFI30:
 455              		.cfi_def_cfa_register 13
 456              		@ sp needed
 457 0066 80BC     		pop	{r7}
 458              	.LCFI31:
 459              		.cfi_restore 7
 460              		.cfi_def_cfa_offset 0
 461 0068 7047     		bx	lr
 462              	.L29:
 463 006a 00BF     		.align	2
 464              	.L28:
 465 006c 00000000 		.word	I2Cx_Timeout
 466              		.cfi_endproc
 467              	.LFE36:
 469              		.section	.text.i2c_wait_7bit_slave_address_rd_std,"ax",%progbits
 470              		.align	1
 471              		.syntax unified
 472              		.thumb
 473              		.thumb_func
 475              	i2c_wait_7bit_slave_address_rd_std:
 476              	.LFB37:
 301:./i2c/i2c-std.c **** //-------------------------------------------------------------------------------------------------
 302:./i2c/i2c-std.c **** /**
 303:./i2c/i2c-std.c ****  * @brief    Waits the until the slave acknowledges back to the reception of its address in read mo
 304:./i2c/i2c-std.c ****  * @details  check that the slave aknowledges back as it receives its address  the flags
 305:./i2c/i2c-std.c ****  *            BUSY, MSL and ADDR flags which all set  TRA=0
 306:./i2c/i2c-std.c ****  *           TXE= 1 no need to check it as the master will go to receiver mode after 
 307:./i2c/i2c-std.c ****  *           ADDR=1 indicates End of address transmission which is defined by the slave acknowledgm
 308:./i2c/i2c-std.c ****  *           TRA=0  indicates Receiver mode set depending on the R/W bit of the address byte
 309:./i2c/i2c-std.c ****  *           BUSY=1 indicates the I2C is busy (no arbitration lost or peripheral) 
 310:./i2c/i2c-std.c ****  *           MSL=1  indicates Master mode 
 311:./i2c/i2c-std.c ****     I2C_SR1 : I2C Status register 1
 312:./i2c/i2c-std.c ****  *         ADDR: 
 313:./i2c/i2c-std.c ****  *          This bit is cleared by software reading SR1 register followed reading SR2, or by hardwa
 314:./i2c/i2c-std.c ****  *           1.Slave :: Address matched (Slave)
 315:./i2c/i2c-std.c ****               0: Address mismatched or not received.
 316:./i2c/i2c-std.c ****               1: Received address matched
 317:./i2c/i2c-std.c ****  *          
 318:./i2c/i2c-std.c ****             2. Master : Address sent (Master)
 319:./i2c/i2c-std.c ****               0: No end of address transmission
 320:./i2c/i2c-std.c ****               1: End of address transmission
 321:./i2c/i2c-std.c ****             – For 10-bit addressing, the bit is set after the ACK of the 2nd byte.
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s 			page 36


 322:./i2c/i2c-std.c ****             – For 7-bit addressing, the bit is set after the ACK
 323:./i2c/i2c-std.c ****  *          Note: 
 324:./i2c/i2c-std.c ****                ADDR is not set after a NACK reception
 325:./i2c/i2c-std.c ****  
 326:./i2c/i2c-std.c ****    I2C_SR2 : I2C Status register 2          
 327:./i2c/i2c-std.c ****             TRA: Transmitter/receiver
 328:./i2c/i2c-std.c ****               0: Data bytes received
 329:./i2c/i2c-std.c ****               1: Data bytes transmitted
 330:./i2c/i2c-std.c ****             This bit is set depending on the R/W bit of the address byte, at the end of total addre
 331:./i2c/i2c-std.c ****             It is also cleared by hardware after detection of Stop condition (STOPF=1), repeated St
 332:./i2c/i2c-std.c ****             loss of bus arbitration (ARLO=1), or when PE=0.
 333:./i2c/i2c-std.c ****             BUSY: Bus busy
 334:./i2c/i2c-std.c ****              0: No communication on the bus
 335:./i2c/i2c-std.c ****              1: Communication ongoing on the bus
 336:./i2c/i2c-std.c ****              – Set by hardware on detection of SDA or SCL low
 337:./i2c/i2c-std.c ****              – cleared by hardware on detection of a Stop condition.
 338:./i2c/i2c-std.c ****              It indicates a communication in progress on the bus. This information is still updated
 339:./i2c/i2c-std.c ****             MSL: Master/slave
 340:./i2c/i2c-std.c ****               0: Slave Mode
 341:./i2c/i2c-std.c ****               1: Master Mode
 342:./i2c/i2c-std.c ****               – Set by hardware as soon as the interface is in Master mode (SB=1).
 343:./i2c/i2c-std.c ****               – Cleared by hardware after detecting a Stop condition on the bus or a loss of arbi
 344:./i2c/i2c-std.c ****                
 345:./i2c/i2c-std.c ****             I2C_SLAVE_ADDRESS_NACK_ERROR:
 346:./i2c/i2c-std.c ****  *           if a timeout is passed without detecting a ADDR=1 then set an error condition  
 347:./i2c/i2c-std.c ****  *           which indicates that no slave has acknowledged on the I2C bus either no one has
 348:./i2c/i2c-std.c ****  *           this address or that slave has an issue to check 
 349:./i2c/i2c-std.c ****  * @param I2CX 
 350:./i2c/i2c-std.c ****  * @return uint8_t   
 351:./i2c/i2c-std.c **** */
 352:./i2c/i2c-std.c **** uint8_t i2c_wait_7bit_slave_address_rd_std(I2C_TypeDef* I2CX)
 353:./i2c/i2c-std.c **** {
 477              		.loc 2 353 1
 478              		.cfi_startproc
 479              		@ args = 0, pretend = 0, frame = 8
 480              		@ frame_needed = 1, uses_anonymous_args = 0
 481              		@ link register save eliminated.
 482 0000 80B4     		push	{r7}
 483              	.LCFI32:
 484              		.cfi_def_cfa_offset 4
 485              		.cfi_offset 7, -4
 486 0002 83B0     		sub	sp, sp, #12
 487              	.LCFI33:
 488              		.cfi_def_cfa_offset 16
 489 0004 00AF     		add	r7, sp, #0
 490              	.LCFI34:
 491              		.cfi_def_cfa_register 7
 492 0006 7860     		str	r0, [r7, #4]
 354:./i2c/i2c-std.c ****   //! wait the slave address acknowledge Master_Read
 355:./i2c/i2c-std.c ****      I2Cx_Timeout=I2C_MAX_WAIT_TIME;  
 493              		.loc 2 355 18
 494 0008 1B4B     		ldr	r3, .L35
 495 000a 40F6AC52 		movw	r2, #3500
 496 000e 1A60     		str	r2, [r3]
 356:./i2c/i2c-std.c ****     // wait until the slave acknowledge  BUSY, MSL, ADDR flags are all set 
 357:./i2c/i2c-std.c ****     while(bits_is_clear(I2CX->SR1,I2C_SR1_ADDR) || bits_is_clear(I2CX->SR2,(uint16_t)(I2C_SR2_BUSY|
 497              		.loc 2 357 10
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s 			page 37


 498 0010 1EE0     		b	.L31
 499              	.L34:
 358:./i2c/i2c-std.c ****      {
 359:./i2c/i2c-std.c ****       if(bits_is_set(I2CX->SR1,I2C_SR1_AF))  
 500              		.loc 2 359 10
 501 0012 7B68     		ldr	r3, [r7, #4]
 502 0014 9B8A     		ldrh	r3, [r3, #20]	@ movhi
 503 0016 9BB2     		uxth	r3, r3
 504 0018 03F48063 		and	r3, r3, #1024
 505              		.loc 2 359 9
 506 001c 002B     		cmp	r3, #0
 507 001e 11D0     		beq	.L32
 360:./i2c/i2c-std.c ****       {
 361:./i2c/i2c-std.c ****         /* Generate Stop */
 362:./i2c/i2c-std.c ****         SET_BIT(I2CX->CR1, I2C_CR1_STOP);
 508              		.loc 2 362 9
 509 0020 7B68     		ldr	r3, [r7, #4]
 510 0022 1B88     		ldrh	r3, [r3]	@ movhi
 511 0024 9BB2     		uxth	r3, r3
 512 0026 43F40073 		orr	r3, r3, #512
 513 002a 9AB2     		uxth	r2, r3
 514 002c 7B68     		ldr	r3, [r7, #4]
 515 002e 1A80     		strh	r2, [r3]	@ movhi
 363:./i2c/i2c-std.c ****         /* Clear AF Flag */
 364:./i2c/i2c-std.c ****         CLEAR_BIT(I2CX->SR1,I2C_FLAG_AF);  //_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 516              		.loc 2 364 9
 517 0030 7B68     		ldr	r3, [r7, #4]
 518 0032 9B8A     		ldrh	r3, [r3, #20]	@ movhi
 519 0034 9BB2     		uxth	r3, r3
 520 0036 23F48063 		bic	r3, r3, #1024
 521 003a 9AB2     		uxth	r2, r3
 522 003c 7B68     		ldr	r3, [r7, #4]
 523 003e 9A82     		strh	r2, [r3, #20]	@ movhi
 365:./i2c/i2c-std.c ****         
 366:./i2c/i2c-std.c ****       // I2C_SLAVE_ADDRESS_NACK Acknowledge no slave with this address at the bus
 367:./i2c/i2c-std.c ****         return I2C_NACK_ERROR;
 524              		.loc 2 367 16
 525 0040 0523     		movs	r3, #5
 526 0042 14E0     		b	.L33
 527              	.L32:
 368:./i2c/i2c-std.c ****       }        
 369:./i2c/i2c-std.c ****      if(I2Cx_Timeout==0)
 528              		.loc 2 369 21
 529 0044 0C4B     		ldr	r3, .L35
 530 0046 1B68     		ldr	r3, [r3]
 531              		.loc 2 369 8
 532 0048 002B     		cmp	r3, #0
 533 004a 01D1     		bne	.L31
 370:./i2c/i2c-std.c ****       return I2C_TIMEOUT; //I2C_ERROR
 534              		.loc 2 370 14
 535 004c 0223     		movs	r3, #2
 536 004e 0EE0     		b	.L33
 537              	.L31:
 357:./i2c/i2c-std.c ****      {
 538              		.loc 2 357 11
 539 0050 7B68     		ldr	r3, [r7, #4]
 540 0052 9B8A     		ldrh	r3, [r3, #20]	@ movhi
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s 			page 38


 541 0054 9BB2     		uxth	r3, r3
 542 0056 03F00203 		and	r3, r3, #2
 357:./i2c/i2c-std.c ****      {
 543              		.loc 2 357 10
 544 005a 002B     		cmp	r3, #0
 545 005c D9D0     		beq	.L34
 357:./i2c/i2c-std.c ****      {
 546              		.loc 2 357 52 discriminator 1
 547 005e 7B68     		ldr	r3, [r7, #4]
 548 0060 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 549 0062 9BB2     		uxth	r3, r3
 550 0064 03F00303 		and	r3, r3, #3
 357:./i2c/i2c-std.c ****      {
 551              		.loc 2 357 49 discriminator 1
 552 0068 002B     		cmp	r3, #0
 553 006a D2D0     		beq	.L34
 371:./i2c/i2c-std.c ****     }
 372:./i2c/i2c-std.c **** 
 373:./i2c/i2c-std.c ****   return I2C_OK; 
 554              		.loc 2 373 10
 555 006c 0023     		movs	r3, #0
 556              	.L33:
 374:./i2c/i2c-std.c **** }
 557              		.loc 2 374 1
 558 006e 1846     		mov	r0, r3
 559 0070 0C37     		adds	r7, r7, #12
 560              	.LCFI35:
 561              		.cfi_def_cfa_offset 4
 562 0072 BD46     		mov	sp, r7
 563              	.LCFI36:
 564              		.cfi_def_cfa_register 13
 565              		@ sp needed
 566 0074 80BC     		pop	{r7}
 567              	.LCFI37:
 568              		.cfi_restore 7
 569              		.cfi_def_cfa_offset 0
 570 0076 7047     		bx	lr
 571              	.L36:
 572              		.align	2
 573              	.L35:
 574 0078 00000000 		.word	I2Cx_Timeout
 575              		.cfi_endproc
 576              	.LFE37:
 578              		.section	.text.i2c_wait_write_byte_btf_std,"ax",%progbits
 579              		.align	1
 580              		.syntax unified
 581              		.thumb
 582              		.thumb_func
 584              	i2c_wait_write_byte_btf_std:
 585              	.LFB38:
 375:./i2c/i2c-std.c **** //-------------------------------------------------------------------------------------------------
 376:./i2c/i2c-std.c **** /**
 377:./i2c/i2c-std.c ****  * @brief    Waits the until the complete transmistion of the current data byte 
 378:./i2c/i2c-std.c ****  * @details  check that  the complete transmistion of the current data byte has completed 
 379:./i2c/i2c-std.c ****  *            by checking the flag BTF 
 380:./i2c/i2c-std.c ****  *           EV8_1: TxE=1,BTF=1, shift register empty, data register empty, write Data1 in DR.
 381:./i2c/i2c-std.c ****              EV8 :  TxE=1,BTF=0, shift register not empty, .data register empty, cleared by writing
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s 			page 39


 382:./i2c/i2c-std.c ****  *           BTF: Byte transfer finished
 383:./i2c/i2c-std.c ****                 0: Data byte transfer not done
 384:./i2c/i2c-std.c ****                 1: Data byte transfer succeeded
 385:./i2c/i2c-std.c ****               – Set by hardware when NOSTRETCH=0 and:
 386:./i2c/i2c-std.c ****               – In reception when a new byte is received (including ACK pulse) and DR has not bee
 387:./i2c/i2c-std.c ****               – In transmission when a new byte should be sent and DR has not been written yet (T
 388:./i2c/i2c-std.c ****               – Cleared by software reading SR1 followed by either a read or write in the DR regi
 389:./i2c/i2c-std.c ****               - Cleared by hardware after a start or a stop condition in transmission or when PE=0.
 390:./i2c/i2c-std.c ****               Note: The BTF bit is not set after a NACK reception
 391:./i2c/i2c-std.c **** 
 392:./i2c/i2c-std.c ****             I2C_TX_BYTE_ERROR:
 393:./i2c/i2c-std.c ****  *           if a timeout is passed without detecting a BTF=1 then set an error condition  
 394:./i2c/i2c-std.c ****  * @param I2CX 
 395:./i2c/i2c-std.c ****  * @return uint8_t   
 396:./i2c/i2c-std.c **** */
 397:./i2c/i2c-std.c **** uint8_t i2c_wait_write_byte_btf_std(I2C_TypeDef* I2CX)		           
 398:./i2c/i2c-std.c **** {
 586              		.loc 2 398 1
 587              		.cfi_startproc
 588              		@ args = 0, pretend = 0, frame = 8
 589              		@ frame_needed = 1, uses_anonymous_args = 0
 590              		@ link register save eliminated.
 591 0000 80B4     		push	{r7}
 592              	.LCFI38:
 593              		.cfi_def_cfa_offset 4
 594              		.cfi_offset 7, -4
 595 0002 83B0     		sub	sp, sp, #12
 596              	.LCFI39:
 597              		.cfi_def_cfa_offset 16
 598 0004 00AF     		add	r7, sp, #0
 599              	.LCFI40:
 600              		.cfi_def_cfa_register 7
 601 0006 7860     		str	r0, [r7, #4]
 399:./i2c/i2c-std.c ****     //! wait the complete of current byte transmition (MASTER-write)
 400:./i2c/i2c-std.c ****     I2Cx_Timeout=I2C_MAX_WAIT_TIME; 
 602              		.loc 2 400 17
 603 0008 184B     		ldr	r3, .L42
 604 000a 40F6AC52 		movw	r2, #3500
 605 000e 1A60     		str	r2, [r3]
 401:./i2c/i2c-std.c ****     //volatile uint32_t Timeout=0xffff;
 402:./i2c/i2c-std.c ****     //Wait until BTF is set
 403:./i2c/i2c-std.c ****     // each time just repeat Ev8_1 & Ev8 : shift register empty, data register empty, and need to w
 404:./i2c/i2c-std.c ****     while(bits_is_clear(I2CX->SR1,I2C_SR1_BTF)) //!I2C_GetFlagStatus(I2CX,I2C_FLAG_TXE))
 606              		.loc 2 404 10
 607 0010 1EE0     		b	.L38
 608              	.L41:
 405:./i2c/i2c-std.c ****     {
 406:./i2c/i2c-std.c ****         if(bits_is_set(I2CX->SR1,I2C_SR1_AF))  
 609              		.loc 2 406 12
 610 0012 7B68     		ldr	r3, [r7, #4]
 611 0014 9B8A     		ldrh	r3, [r3, #20]	@ movhi
 612 0016 9BB2     		uxth	r3, r3
 613 0018 03F48063 		and	r3, r3, #1024
 614              		.loc 2 406 11
 615 001c 002B     		cmp	r3, #0
 616 001e 11D0     		beq	.L39
 407:./i2c/i2c-std.c ****         {
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s 			page 40


 408:./i2c/i2c-std.c ****          /* Generate Stop */
 409:./i2c/i2c-std.c ****          SET_BIT(I2CX->CR1, I2C_CR1_STOP);
 617              		.loc 2 409 10
 618 0020 7B68     		ldr	r3, [r7, #4]
 619 0022 1B88     		ldrh	r3, [r3]	@ movhi
 620 0024 9BB2     		uxth	r3, r3
 621 0026 43F40073 		orr	r3, r3, #512
 622 002a 9AB2     		uxth	r2, r3
 623 002c 7B68     		ldr	r3, [r7, #4]
 624 002e 1A80     		strh	r2, [r3]	@ movhi
 410:./i2c/i2c-std.c ****         /* Clear AF Flag */
 411:./i2c/i2c-std.c ****          CLEAR_BIT(I2CX->SR1,I2C_FLAG_AF);  //_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 625              		.loc 2 411 10
 626 0030 7B68     		ldr	r3, [r7, #4]
 627 0032 9B8A     		ldrh	r3, [r3, #20]	@ movhi
 628 0034 9BB2     		uxth	r3, r3
 629 0036 23F48063 		bic	r3, r3, #1024
 630 003a 9AB2     		uxth	r2, r3
 631 003c 7B68     		ldr	r3, [r7, #4]
 632 003e 9A82     		strh	r2, [r3, #20]	@ movhi
 412:./i2c/i2c-std.c ****         
 413:./i2c/i2c-std.c ****         // I2C_SLAVE_ADDRESS_NACK Acknowledge no slave with this address at the bus
 414:./i2c/i2c-std.c ****         return I2C_NACK_ERROR;
 633              		.loc 2 414 16
 634 0040 0523     		movs	r3, #5
 635 0042 0DE0     		b	.L40
 636              	.L39:
 415:./i2c/i2c-std.c ****        }
 416:./i2c/i2c-std.c ****       if(I2Cx_Timeout==0)
 637              		.loc 2 416 22
 638 0044 094B     		ldr	r3, .L42
 639 0046 1B68     		ldr	r3, [r3]
 640              		.loc 2 416 9
 641 0048 002B     		cmp	r3, #0
 642 004a 01D1     		bne	.L38
 417:./i2c/i2c-std.c ****         return  I2C_TX_BTF_ERROR;// set the error then exit ::I2C_TX_BTF_ERROR
 643              		.loc 2 417 17
 644 004c 0623     		movs	r3, #6
 645 004e 07E0     		b	.L40
 646              	.L38:
 404:./i2c/i2c-std.c ****     {
 647              		.loc 2 404 11
 648 0050 7B68     		ldr	r3, [r7, #4]
 649 0052 9B8A     		ldrh	r3, [r3, #20]	@ movhi
 650 0054 9BB2     		uxth	r3, r3
 651 0056 03F00403 		and	r3, r3, #4
 404:./i2c/i2c-std.c ****     {
 652              		.loc 2 404 10
 653 005a 002B     		cmp	r3, #0
 654 005c D9D0     		beq	.L41
 418:./i2c/i2c-std.c ****    }
 419:./i2c/i2c-std.c ****     return I2C_OK;
 655              		.loc 2 419 12
 656 005e 0023     		movs	r3, #0
 657              	.L40:
 420:./i2c/i2c-std.c **** }
 658              		.loc 2 420 1
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s 			page 41


 659 0060 1846     		mov	r0, r3
 660 0062 0C37     		adds	r7, r7, #12
 661              	.LCFI41:
 662              		.cfi_def_cfa_offset 4
 663 0064 BD46     		mov	sp, r7
 664              	.LCFI42:
 665              		.cfi_def_cfa_register 13
 666              		@ sp needed
 667 0066 80BC     		pop	{r7}
 668              	.LCFI43:
 669              		.cfi_restore 7
 670              		.cfi_def_cfa_offset 0
 671 0068 7047     		bx	lr
 672              	.L43:
 673 006a 00BF     		.align	2
 674              	.L42:
 675 006c 00000000 		.word	I2Cx_Timeout
 676              		.cfi_endproc
 677              	.LFE38:
 679              		.section	.text.i2c_wait_write_byte_txe_std,"ax",%progbits
 680              		.align	1
 681              		.syntax unified
 682              		.thumb
 683              		.thumb_func
 685              	i2c_wait_write_byte_txe_std:
 686              	.LFB39:
 421:./i2c/i2c-std.c **** //-------------------------------------------------------------------------------------------------
 422:./i2c/i2c-std.c **** /**
 423:./i2c/i2c-std.c ****  * @brief    Waits the until the complete transmistion of the current data byte 
 424:./i2c/i2c-std.c ****  * @details  check that  the complete transmistion of the current data byte has completed 
 425:./i2c/i2c-std.c ****  *            by checking the flag BTF 
 426:./i2c/i2c-std.c ****  *           EV8_1: TxE=1,BTF=1, shift register empty, data register empty, write Data1 in DR.
 427:./i2c/i2c-std.c ****              EV8 :  TxE=1,BTF=0, shift register not empty, .data register empty, cleared by writing
 428:./i2c/i2c-std.c ****  *           BTF: Byte transfer finished
 429:./i2c/i2c-std.c ****                 0: Data byte transfer not done
 430:./i2c/i2c-std.c ****                 1: Data byte transfer succeeded
 431:./i2c/i2c-std.c ****               – Set by hardware when NOSTRETCH=0 and:
 432:./i2c/i2c-std.c ****               – In reception when a new byte is received (including ACK pulse) and DR has not bee
 433:./i2c/i2c-std.c ****               – In transmission when a new byte should be sent and DR has not been written yet (T
 434:./i2c/i2c-std.c ****               – Cleared by software reading SR1 followed by either a read or write in the DR regi
 435:./i2c/i2c-std.c ****               - Cleared by hardware after a start or a stop condition in transmission or when PE=0.
 436:./i2c/i2c-std.c ****               Note: The BTF bit is not set after a NACK reception
 437:./i2c/i2c-std.c **** 
 438:./i2c/i2c-std.c ****             I2C_TX_BYTE_ERROR:
 439:./i2c/i2c-std.c ****  *           if a timeout is passed without detecting a BTF=1 then set an error condition  
 440:./i2c/i2c-std.c ****  * @param I2CX 
 441:./i2c/i2c-std.c ****  * @return uint8_t   
 442:./i2c/i2c-std.c **** */
 443:./i2c/i2c-std.c **** uint8_t i2c_wait_write_byte_txe_std(I2C_TypeDef* I2CX)		           
 444:./i2c/i2c-std.c **** {
 687              		.loc 2 444 1
 688              		.cfi_startproc
 689              		@ args = 0, pretend = 0, frame = 8
 690              		@ frame_needed = 1, uses_anonymous_args = 0
 691              		@ link register save eliminated.
 692 0000 80B4     		push	{r7}
 693              	.LCFI44:
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s 			page 42


 694              		.cfi_def_cfa_offset 4
 695              		.cfi_offset 7, -4
 696 0002 83B0     		sub	sp, sp, #12
 697              	.LCFI45:
 698              		.cfi_def_cfa_offset 16
 699 0004 00AF     		add	r7, sp, #0
 700              	.LCFI46:
 701              		.cfi_def_cfa_register 7
 702 0006 7860     		str	r0, [r7, #4]
 445:./i2c/i2c-std.c ****     //! wait the complete of current byte transmition (MASTER-write)
 446:./i2c/i2c-std.c ****     I2Cx_Timeout=I2C_MAX_WAIT_TIME; 
 703              		.loc 2 446 17
 704 0008 184B     		ldr	r3, .L49
 705 000a 40F6AC52 		movw	r2, #3500
 706 000e 1A60     		str	r2, [r3]
 447:./i2c/i2c-std.c ****     //Wait until TXE is set
 448:./i2c/i2c-std.c ****     // each time just repeat Ev8_1 & Ev8 : shift register empty, data register empty, and need to w
 449:./i2c/i2c-std.c ****     while(bits_is_clear(I2CX->SR1,I2C_SR1_TXE)) //!I2C_GetFlagStatus(I2CX,I2C_FLAG_TXE))
 707              		.loc 2 449 10
 708 0010 1EE0     		b	.L45
 709              	.L48:
 450:./i2c/i2c-std.c ****     {
 451:./i2c/i2c-std.c ****         if(bits_is_set(I2CX->SR1,I2C_SR1_AF))  
 710              		.loc 2 451 12
 711 0012 7B68     		ldr	r3, [r7, #4]
 712 0014 9B8A     		ldrh	r3, [r3, #20]	@ movhi
 713 0016 9BB2     		uxth	r3, r3
 714 0018 03F48063 		and	r3, r3, #1024
 715              		.loc 2 451 11
 716 001c 002B     		cmp	r3, #0
 717 001e 11D0     		beq	.L46
 452:./i2c/i2c-std.c ****         {
 453:./i2c/i2c-std.c ****            /* Generate Stop */
 454:./i2c/i2c-std.c ****             SET_BIT(I2CX->CR1, I2C_CR1_STOP);
 718              		.loc 2 454 13
 719 0020 7B68     		ldr	r3, [r7, #4]
 720 0022 1B88     		ldrh	r3, [r3]	@ movhi
 721 0024 9BB2     		uxth	r3, r3
 722 0026 43F40073 		orr	r3, r3, #512
 723 002a 9AB2     		uxth	r2, r3
 724 002c 7B68     		ldr	r3, [r7, #4]
 725 002e 1A80     		strh	r2, [r3]	@ movhi
 455:./i2c/i2c-std.c ****           /* Clear AF Flag */
 456:./i2c/i2c-std.c ****             CLEAR_BIT(I2CX->SR1,I2C_FLAG_AF);  //_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 726              		.loc 2 456 13
 727 0030 7B68     		ldr	r3, [r7, #4]
 728 0032 9B8A     		ldrh	r3, [r3, #20]	@ movhi
 729 0034 9BB2     		uxth	r3, r3
 730 0036 23F48063 		bic	r3, r3, #1024
 731 003a 9AB2     		uxth	r2, r3
 732 003c 7B68     		ldr	r3, [r7, #4]
 733 003e 9A82     		strh	r2, [r3, #20]	@ movhi
 457:./i2c/i2c-std.c ****           // I2C_SLAVE_ADDRESS_NACK Acknowledge no slave with this address at the bus
 458:./i2c/i2c-std.c ****             return I2C_NACK_ERROR;
 734              		.loc 2 458 20
 735 0040 0523     		movs	r3, #5
 736 0042 0DE0     		b	.L47
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s 			page 43


 737              	.L46:
 459:./i2c/i2c-std.c ****         }
 460:./i2c/i2c-std.c ****         if(I2Cx_Timeout==0)
 738              		.loc 2 460 24
 739 0044 094B     		ldr	r3, .L49
 740 0046 1B68     		ldr	r3, [r3]
 741              		.loc 2 460 11
 742 0048 002B     		cmp	r3, #0
 743 004a 01D1     		bne	.L45
 461:./i2c/i2c-std.c ****           return  I2C_TX_TXE_ERROR; // set the error then exit ::I2C_TX_BTF_ERROR
 744              		.loc 2 461 19
 745 004c 0723     		movs	r3, #7
 746 004e 07E0     		b	.L47
 747              	.L45:
 449:./i2c/i2c-std.c ****     {
 748              		.loc 2 449 11
 749 0050 7B68     		ldr	r3, [r7, #4]
 750 0052 9B8A     		ldrh	r3, [r3, #20]	@ movhi
 751 0054 9BB2     		uxth	r3, r3
 752 0056 03F08003 		and	r3, r3, #128
 449:./i2c/i2c-std.c ****     {
 753              		.loc 2 449 10
 754 005a 002B     		cmp	r3, #0
 755 005c D9D0     		beq	.L48
 462:./i2c/i2c-std.c ****     }
 463:./i2c/i2c-std.c ****     return I2C_OK;
 756              		.loc 2 463 12
 757 005e 0023     		movs	r3, #0
 758              	.L47:
 464:./i2c/i2c-std.c **** }
 759              		.loc 2 464 1
 760 0060 1846     		mov	r0, r3
 761 0062 0C37     		adds	r7, r7, #12
 762              	.LCFI47:
 763              		.cfi_def_cfa_offset 4
 764 0064 BD46     		mov	sp, r7
 765              	.LCFI48:
 766              		.cfi_def_cfa_register 13
 767              		@ sp needed
 768 0066 80BC     		pop	{r7}
 769              	.LCFI49:
 770              		.cfi_restore 7
 771              		.cfi_def_cfa_offset 0
 772 0068 7047     		bx	lr
 773              	.L50:
 774 006a 00BF     		.align	2
 775              	.L49:
 776 006c 00000000 		.word	I2Cx_Timeout
 777              		.cfi_endproc
 778              	.LFE39:
 780              		.section	.text.i2c_wait_read_byte_rxne_std,"ax",%progbits
 781              		.align	1
 782              		.syntax unified
 783              		.thumb
 784              		.thumb_func
 786              	i2c_wait_read_byte_rxne_std:
 787              	.LFB40:
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s 			page 44


 465:./i2c/i2c-std.c **** //-------------------------------------------------------------------------------------------------
 466:./i2c/i2c-std.c **** /**
 467:./i2c/i2c-std.c ****  * @brief    Waits the until the complete receiption of the current data byte 
 468:./i2c/i2c-std.c ****  * @details  check that  the complete receiption  of the current data byte has completed 
 469:./i2c/i2c-std.c ****  *            by checking the flag I2C_FLAG_RXNE
 470:./i2c/i2c-std.c ****  * 
 471:./i2c/i2c-std.c ****  *      RXNE: Data register not empty (receivers)
 472:./i2c/i2c-std.c ****  *            0: Data register empty
 473:./i2c/i2c-std.c ****               1: Data register not empty
 474:./i2c/i2c-std.c ****               – Set when data register is not empty in receiver mode. RxNE is not set during addr
 475:./i2c/i2c-std.c ****               – Cleared by software reading or writing the DR register or by hardware when PE=0.
 476:./i2c/i2c-std.c ****             RxNE is not set in case of ARLO event.
 477:./i2c/i2c-std.c ****             RxNE is not cleared by reading data when BTF is set, as the data register is still full
 478:./i2c/i2c-std.c **** 
 479:./i2c/i2c-std.c ****  *           BTF: Byte transfer finished
 480:./i2c/i2c-std.c ****                 0: Data byte transfer not done
 481:./i2c/i2c-std.c ****                 1: Data byte transfer succeeded
 482:./i2c/i2c-std.c ****               – Set by hardware when NOSTRETCH=0 and:
 483:./i2c/i2c-std.c ****               – In reception when a new byte is received (including ACK pulse) and DR has not bee
 484:./i2c/i2c-std.c ****               – In transmission when a new byte should be sent and DR has not been written yet (T
 485:./i2c/i2c-std.c ****               – Cleared by software reading SR1 followed by either a read or write in the DR regi
 486:./i2c/i2c-std.c ****               - Cleared by hardware after a start or a stop condition in transmission or when PE=0.
 487:./i2c/i2c-std.c ****           Note: The BTF bit is not set after a NACK reception
 488:./i2c/i2c-std.c **** 
 489:./i2c/i2c-std.c ****             I2C_RX_RXNE_ERROR:
 490:./i2c/i2c-std.c ****  *           if a timeout is passed without detecting a RNXE=1 then set an error condition  
 491:./i2c/i2c-std.c ****  * @param I2CX 
 492:./i2c/i2c-std.c ****  * @return uint8_t   
 493:./i2c/i2c-std.c **** */
 494:./i2c/i2c-std.c **** //#define  I2C_EVENT_MASTER_BYTE_RECEIVED                    ((uint32_t)0x00030040)  /* BUSY, MSL a
 495:./i2c/i2c-std.c **** uint8_t i2c_wait_read_byte_rxne_std(I2C_TypeDef* I2CX)		             
 496:./i2c/i2c-std.c **** {
 788              		.loc 2 496 1
 789              		.cfi_startproc
 790              		@ args = 0, pretend = 0, frame = 16
 791              		@ frame_needed = 1, uses_anonymous_args = 0
 792              		@ link register save eliminated.
 793 0000 80B4     		push	{r7}
 794              	.LCFI50:
 795              		.cfi_def_cfa_offset 4
 796              		.cfi_offset 7, -4
 797 0002 85B0     		sub	sp, sp, #20
 798              	.LCFI51:
 799              		.cfi_def_cfa_offset 24
 800 0004 00AF     		add	r7, sp, #0
 801              	.LCFI52:
 802              		.cfi_def_cfa_register 7
 803 0006 7860     		str	r0, [r7, #4]
 497:./i2c/i2c-std.c ****  //! wait the complete of current byte receiption (MASTER-read)
 498:./i2c/i2c-std.c ****      //Wait until RXNE is set
 499:./i2c/i2c-std.c ****     I2Cx_Timeout=I2C_MAX_WAIT_TIME; 
 804              		.loc 2 499 17
 805 0008 174B     		ldr	r3, .L56
 806 000a 40F6AC52 		movw	r2, #3500
 807 000e 1A60     		str	r2, [r3]
 500:./i2c/i2c-std.c ****     while(bits_is_clear(I2CX->SR1,I2C_SR1_RXNE))//I2C_GetFlagStatus(I2CX,I2C_FLAG_RXNE))
 808              		.loc 2 500 10
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s 			page 45


 809 0010 1DE0     		b	.L52
 810              	.L55:
 501:./i2c/i2c-std.c ****     {
 502:./i2c/i2c-std.c ****       /* Check if a STOPF is detected */
 503:./i2c/i2c-std.c ****       if (bits_is_set(I2CX->SR1,I2C_SR1_STOPF) )
 811              		.loc 2 503 11
 812 0012 7B68     		ldr	r3, [r7, #4]
 813 0014 9B8A     		ldrh	r3, [r3, #20]	@ movhi
 814 0016 9BB2     		uxth	r3, r3
 815 0018 03F01003 		and	r3, r3, #16
 816              		.loc 2 503 10
 817 001c 002B     		cmp	r3, #0
 818 001e 10D0     		beq	.L53
 819              	.LBB3:
 504:./i2c/i2c-std.c ****       {
 505:./i2c/i2c-std.c ****           /* Clear STOP Flag */
 506:./i2c/i2c-std.c ****            _I2C_CLEAR_STOPFLAG(I2CX);      
 820              		.loc 2 506 12
 821 0020 0023     		movs	r3, #0
 822 0022 FB60     		str	r3, [r7, #12]
 823 0024 7B68     		ldr	r3, [r7, #4]
 824 0026 9B8A     		ldrh	r3, [r3, #20]	@ movhi
 825 0028 9BB2     		uxth	r3, r3
 826 002a FB60     		str	r3, [r7, #12]
 827 002c 7B68     		ldr	r3, [r7, #4]
 828 002e 1B88     		ldrh	r3, [r3]	@ movhi
 829 0030 9BB2     		uxth	r3, r3
 830 0032 43F00103 		orr	r3, r3, #1
 831 0036 9AB2     		uxth	r2, r3
 832 0038 7B68     		ldr	r3, [r7, #4]
 833 003a 1A80     		strh	r2, [r3]	@ movhi
 834 003c FB68     		ldr	r3, [r7, #12]
 835              	.LBE3:
 507:./i2c/i2c-std.c ****          return I2C_STOP_ERROR; //I2C_ERROR;
 836              		.loc 2 507 17
 837 003e 0423     		movs	r3, #4
 838 0040 0DE0     		b	.L54
 839              	.L53:
 508:./i2c/i2c-std.c ****       }
 509:./i2c/i2c-std.c ****       if(I2Cx_Timeout==0)  
 840              		.loc 2 509 22
 841 0042 094B     		ldr	r3, .L56
 842 0044 1B68     		ldr	r3, [r3]
 843              		.loc 2 509 9
 844 0046 002B     		cmp	r3, #0
 845 0048 01D1     		bne	.L52
 510:./i2c/i2c-std.c ****            return I2C_RX_RXNE_ERROR;// set the error then exit ::I2C_RX_RXNE_ERROR
 846              		.loc 2 510 19
 847 004a 0823     		movs	r3, #8
 848 004c 07E0     		b	.L54
 849              	.L52:
 500:./i2c/i2c-std.c ****     {
 850              		.loc 2 500 11
 851 004e 7B68     		ldr	r3, [r7, #4]
 852 0050 9B8A     		ldrh	r3, [r3, #20]	@ movhi
 853 0052 9BB2     		uxth	r3, r3
 854 0054 03F04003 		and	r3, r3, #64
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s 			page 46


 500:./i2c/i2c-std.c ****     {
 855              		.loc 2 500 10
 856 0058 002B     		cmp	r3, #0
 857 005a DAD0     		beq	.L55
 511:./i2c/i2c-std.c ****      }
 512:./i2c/i2c-std.c ****     return I2C_OK;
 858              		.loc 2 512 12
 859 005c 0023     		movs	r3, #0
 860              	.L54:
 513:./i2c/i2c-std.c **** }
 861              		.loc 2 513 1
 862 005e 1846     		mov	r0, r3
 863 0060 1437     		adds	r7, r7, #20
 864              	.LCFI53:
 865              		.cfi_def_cfa_offset 4
 866 0062 BD46     		mov	sp, r7
 867              	.LCFI54:
 868              		.cfi_def_cfa_register 13
 869              		@ sp needed
 870 0064 80BC     		pop	{r7}
 871              	.LCFI55:
 872              		.cfi_restore 7
 873              		.cfi_def_cfa_offset 0
 874 0066 7047     		bx	lr
 875              	.L57:
 876              		.align	2
 877              	.L56:
 878 0068 00000000 		.word	I2Cx_Timeout
 879              		.cfi_endproc
 880              	.LFE40:
 882              		.section	.text.i2c_wait_read_byte_btf_std,"ax",%progbits
 883              		.align	1
 884              		.syntax unified
 885              		.thumb
 886              		.thumb_func
 888              	i2c_wait_read_byte_btf_std:
 889              	.LFB41:
 514:./i2c/i2c-std.c **** //-------------------------------------------------------------------------------------------------
 515:./i2c/i2c-std.c **** /**
 516:./i2c/i2c-std.c ****  * @brief    Waits the until the complete receiption of the current data byte 
 517:./i2c/i2c-std.c ****  * @details  check that  the complete receiption  of the current data byte has completed 
 518:./i2c/i2c-std.c ****  *            by checking the flag I2C_FLAG_BTF
 519:./i2c/i2c-std.c ****  
 520:./i2c/i2c-std.c ****  *           BTF: Byte transfer finished
 521:./i2c/i2c-std.c ****                 0: Data byte transfer not done
 522:./i2c/i2c-std.c ****                 1: Data byte transfer succeeded
 523:./i2c/i2c-std.c ****               – Set by hardware when NOSTRETCH=0 and:
 524:./i2c/i2c-std.c ****               – In reception when a new byte is received (including ACK pulse) and DR has not bee
 525:./i2c/i2c-std.c ****               – In transmission when a new byte should be sent and DR has not been written yet (T
 526:./i2c/i2c-std.c ****               – Cleared by software reading SR1 followed by either a read or write in the DR regi
 527:./i2c/i2c-std.c ****               - Cleared by hardware after a start or a stop condition in transmission or when PE=0.
 528:./i2c/i2c-std.c ****           Note: The BTF bit is not set after a NACK reception
 529:./i2c/i2c-std.c **** 
 530:./i2c/i2c-std.c ****             I2C_RX_BTF_ERROR:
 531:./i2c/i2c-std.c ****  *           if a timeout is passed without detecting a RNXE=1 then set an error condition  
 532:./i2c/i2c-std.c ****  * @param I2CX 
 533:./i2c/i2c-std.c ****  * @return uint8_t   
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s 			page 47


 534:./i2c/i2c-std.c **** */ 
 535:./i2c/i2c-std.c **** uint8_t i2c_wait_read_byte_btf_std(I2C_TypeDef* I2CX)          
 536:./i2c/i2c-std.c **** {
 890              		.loc 2 536 1
 891              		.cfi_startproc
 892              		@ args = 0, pretend = 0, frame = 8
 893              		@ frame_needed = 1, uses_anonymous_args = 0
 894              		@ link register save eliminated.
 895 0000 80B4     		push	{r7}
 896              	.LCFI56:
 897              		.cfi_def_cfa_offset 4
 898              		.cfi_offset 7, -4
 899 0002 83B0     		sub	sp, sp, #12
 900              	.LCFI57:
 901              		.cfi_def_cfa_offset 16
 902 0004 00AF     		add	r7, sp, #0
 903              	.LCFI58:
 904              		.cfi_def_cfa_register 7
 905 0006 7860     		str	r0, [r7, #4]
 537:./i2c/i2c-std.c ****   //! wait the complete of current byte receiption (MASTER-read) using BTF
 538:./i2c/i2c-std.c ****   // EV7_3 -- Wait for BTF , program stop , read data twice
 539:./i2c/i2c-std.c ****     I2Cx_Timeout=I2C_MAX_WAIT_TIME; 
 906              		.loc 2 539 17
 907 0008 0B4B     		ldr	r3, .L62
 908 000a 40F6AC52 		movw	r2, #3500
 909 000e 1A60     		str	r2, [r3]
 540:./i2c/i2c-std.c ****     while(bits_is_clear(I2CX->SR1,I2C_SR1_BTF)) //I2C_GetFlagStatus(I2CX,I2C_FLAG_BTF))
 910              		.loc 2 540 10
 911 0010 05E0     		b	.L59
 912              	.L61:
 541:./i2c/i2c-std.c ****     {
 542:./i2c/i2c-std.c ****       if(I2Cx_Timeout==0)  
 913              		.loc 2 542 22
 914 0012 094B     		ldr	r3, .L62
 915 0014 1B68     		ldr	r3, [r3]
 916              		.loc 2 542 9
 917 0016 002B     		cmp	r3, #0
 918 0018 01D1     		bne	.L59
 543:./i2c/i2c-std.c ****           return I2C_RX_BTF_ERROR;// set the error then exit ::I2C_RX_RXNE_ERROR
 919              		.loc 2 543 18
 920 001a 0923     		movs	r3, #9
 921 001c 07E0     		b	.L60
 922              	.L59:
 540:./i2c/i2c-std.c ****     while(bits_is_clear(I2CX->SR1,I2C_SR1_BTF)) //I2C_GetFlagStatus(I2CX,I2C_FLAG_BTF))
 923              		.loc 2 540 11
 924 001e 7B68     		ldr	r3, [r7, #4]
 925 0020 9B8A     		ldrh	r3, [r3, #20]	@ movhi
 926 0022 9BB2     		uxth	r3, r3
 927 0024 03F00403 		and	r3, r3, #4
 540:./i2c/i2c-std.c ****     while(bits_is_clear(I2CX->SR1,I2C_SR1_BTF)) //I2C_GetFlagStatus(I2CX,I2C_FLAG_BTF))
 928              		.loc 2 540 10
 929 0028 002B     		cmp	r3, #0
 930 002a F2D0     		beq	.L61
 544:./i2c/i2c-std.c ****      }
 545:./i2c/i2c-std.c **** 
 546:./i2c/i2c-std.c ****     return I2C_OK;
 931              		.loc 2 546 12
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s 			page 48


 932 002c 0023     		movs	r3, #0
 933              	.L60:
 547:./i2c/i2c-std.c **** }
 934              		.loc 2 547 1
 935 002e 1846     		mov	r0, r3
 936 0030 0C37     		adds	r7, r7, #12
 937              	.LCFI59:
 938              		.cfi_def_cfa_offset 4
 939 0032 BD46     		mov	sp, r7
 940              	.LCFI60:
 941              		.cfi_def_cfa_register 13
 942              		@ sp needed
 943 0034 80BC     		pop	{r7}
 944              	.LCFI61:
 945              		.cfi_restore 7
 946              		.cfi_def_cfa_offset 0
 947 0036 7047     		bx	lr
 948              	.L63:
 949              		.align	2
 950              	.L62:
 951 0038 00000000 		.word	I2Cx_Timeout
 952              		.cfi_endproc
 953              	.LFE41:
 955              		.section	.text.i2c_start_std,"ax",%progbits
 956              		.align	1
 957              		.syntax unified
 958              		.thumb
 959              		.thumb_func
 961              	i2c_start_std:
 962              	.LFB42:
 548:./i2c/i2c-std.c **** //-------------------------------------------------------------------------------------------------
 549:./i2c/i2c-std.c **** 
 550:./i2c/i2c-std.c **** //********************************************************************************************
 551:./i2c/i2c-std.c **** //
 552:./i2c/i2c-std.c **** //  static methods definitions
 553:./i2c/i2c-std.c **** //  trigger event methods
 554:./i2c/i2c-std.c **** //
 555:./i2c/i2c-std.c **** //********************************************************************************************
 556:./i2c/i2c-std.c **** /**
 557:./i2c/i2c-std.c ****  * @brief initiate start condition
 558:./i2c/i2c-std.c ****  * 
 559:./i2c/i2c-std.c ****  * @param I2CX 
 560:./i2c/i2c-std.c ****  * @return uint8_t 
 561:./i2c/i2c-std.c ****  */
 562:./i2c/i2c-std.c **** uint8_t i2c_start_std(I2C_TypeDef* I2CX)
 563:./i2c/i2c-std.c **** { 
 963              		.loc 2 563 1
 964              		.cfi_startproc
 965              		@ args = 0, pretend = 0, frame = 8
 966              		@ frame_needed = 1, uses_anonymous_args = 0
 967 0000 80B5     		push	{r7, lr}
 968              	.LCFI62:
 969              		.cfi_def_cfa_offset 8
 970              		.cfi_offset 7, -8
 971              		.cfi_offset 14, -4
 972 0002 82B0     		sub	sp, sp, #8
 973              	.LCFI63:
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s 			page 49


 974              		.cfi_def_cfa_offset 16
 975 0004 00AF     		add	r7, sp, #0
 976              	.LCFI64:
 977              		.cfi_def_cfa_register 7
 978 0006 7860     		str	r0, [r7, #4]
 564:./i2c/i2c-std.c ****    // activate PE
 565:./i2c/i2c-std.c ****     //CLEAR_BIT(I2CX->CR1,I2C_CR1_PE);
 566:./i2c/i2c-std.c ****     SET_BIT(I2CX->CR1,I2C_CR1_PE);
 979              		.loc 2 566 5
 980 0008 7B68     		ldr	r3, [r7, #4]
 981 000a 1B88     		ldrh	r3, [r3]	@ movhi
 982 000c 9BB2     		uxth	r3, r3
 983 000e 43F00103 		orr	r3, r3, #1
 984 0012 9AB2     		uxth	r2, r3
 985 0014 7B68     		ldr	r3, [r7, #4]
 986 0016 1A80     		strh	r2, [r3]	@ movhi
 567:./i2c/i2c-std.c ****    // clear all hardware Flags error flags
 568:./i2c/i2c-std.c ****     I2CX->SR1&=0x00ff;
 987              		.loc 2 568 14
 988 0018 7B68     		ldr	r3, [r7, #4]
 989 001a 9B8A     		ldrh	r3, [r3, #20]	@ movhi
 990 001c 9BB2     		uxth	r3, r3
 991 001e DBB2     		uxtb	r3, r3
 992 0020 9AB2     		uxth	r2, r3
 993 0022 7B68     		ldr	r3, [r7, #4]
 994 0024 9A82     		strh	r2, [r3, #20]	@ movhi
 569:./i2c/i2c-std.c ****     //CLEAR_BIT(I2CX->SR1,I2C_SR1_BERR|I2C_SR1_ARLO|I2C_SR1_AF|I2C_SR1_OVR|I2C_SR1_PECERR|I2C_SR1_T
 570:./i2c/i2c-std.c ****    // Disable Pos
 571:./i2c/i2c-std.c ****    CLEAR_BIT(I2CX->CR1, I2C_CR1_POS);
 995              		.loc 2 571 4
 996 0026 7B68     		ldr	r3, [r7, #4]
 997 0028 1B88     		ldrh	r3, [r3]	@ movhi
 998 002a 9BB2     		uxth	r3, r3
 999 002c 23F40063 		bic	r3, r3, #2048
 1000 0030 9AB2     		uxth	r2, r3
 1001 0032 7B68     		ldr	r3, [r7, #4]
 1002 0034 1A80     		strh	r2, [r3]	@ movhi
 572:./i2c/i2c-std.c ****    // Enable acknowledgment
 573:./i2c/i2c-std.c ****    SET_BIT(I2CX->CR1,I2C_CR1_ACK);  // not used in tx mode
 1003              		.loc 2 573 4
 1004 0036 7B68     		ldr	r3, [r7, #4]
 1005 0038 1B88     		ldrh	r3, [r3]	@ movhi
 1006 003a 9BB2     		uxth	r3, r3
 1007 003c 43F48063 		orr	r3, r3, #1024
 1008 0040 9AB2     		uxth	r2, r3
 1009 0042 7B68     		ldr	r3, [r7, #4]
 1010 0044 1A80     		strh	r2, [r3]	@ movhi
 574:./i2c/i2c-std.c ****    // send the start condition 
 575:./i2c/i2c-std.c ****    SET_BIT(I2CX->CR1,I2C_CR1_START); //I2C_GenerateSTART(I2CX,ENABLE);
 1011              		.loc 2 575 4
 1012 0046 7B68     		ldr	r3, [r7, #4]
 1013 0048 1B88     		ldrh	r3, [r3]	@ movhi
 1014 004a 9BB2     		uxth	r3, r3
 1015 004c 43F48073 		orr	r3, r3, #256
 1016 0050 9AB2     		uxth	r2, r3
 1017 0052 7B68     		ldr	r3, [r7, #4]
 1018 0054 1A80     		strh	r2, [r3]	@ movhi
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s 			page 50


 576:./i2c/i2c-std.c ****   //wait the event I2C_EVENT_MASTER_MODE_SELECT where BUSY, MSL and SB flag are set  
 577:./i2c/i2c-std.c ****   return i2c_wait_start_event_std(I2CX);
 1019              		.loc 2 577 10
 1020 0056 7868     		ldr	r0, [r7, #4]
 1021 0058 FFF7FEFF 		bl	i2c_wait_start_event_std
 1022 005c 0346     		mov	r3, r0
 578:./i2c/i2c-std.c **** }					        
 1023              		.loc 2 578 1
 1024 005e 1846     		mov	r0, r3
 1025 0060 0837     		adds	r7, r7, #8
 1026              	.LCFI65:
 1027              		.cfi_def_cfa_offset 8
 1028 0062 BD46     		mov	sp, r7
 1029              	.LCFI66:
 1030              		.cfi_def_cfa_register 13
 1031              		@ sp needed
 1032 0064 80BD     		pop	{r7, pc}
 1033              		.cfi_endproc
 1034              	.LFE42:
 1036              		.section	.text.i2c_stop_std,"ax",%progbits
 1037              		.align	1
 1038              		.syntax unified
 1039              		.thumb
 1040              		.thumb_func
 1042              	i2c_stop_std:
 1043              	.LFB43:
 579:./i2c/i2c-std.c **** //-------------------------------------------------------------------------------------------------
 580:./i2c/i2c-std.c **** /**
 581:./i2c/i2c-std.c ****  * @brief  initiate stop condition
 582:./i2c/i2c-std.c ****  * 
 583:./i2c/i2c-std.c ****  * @param I2CX 
 584:./i2c/i2c-std.c ****  * @return uint8_t 
 585:./i2c/i2c-std.c ****  */
 586:./i2c/i2c-std.c **** uint8_t i2c_stop_std(I2C_TypeDef* I2CX)
 587:./i2c/i2c-std.c **** {
 1044              		.loc 2 587 1
 1045              		.cfi_startproc
 1046              		@ args = 0, pretend = 0, frame = 8
 1047              		@ frame_needed = 1, uses_anonymous_args = 0
 1048 0000 80B5     		push	{r7, lr}
 1049              	.LCFI67:
 1050              		.cfi_def_cfa_offset 8
 1051              		.cfi_offset 7, -8
 1052              		.cfi_offset 14, -4
 1053 0002 82B0     		sub	sp, sp, #8
 1054              	.LCFI68:
 1055              		.cfi_def_cfa_offset 16
 1056 0004 00AF     		add	r7, sp, #0
 1057              	.LCFI69:
 1058              		.cfi_def_cfa_register 7
 1059 0006 7860     		str	r0, [r7, #4]
 588:./i2c/i2c-std.c ****     // generate the stop condition 
 589:./i2c/i2c-std.c ****       SET_BIT(I2CX->CR1,I2C_CR1_STOP); //I2C_GenerateSTOP(I2CX,ENABLE);
 1060              		.loc 2 589 7
 1061 0008 7B68     		ldr	r3, [r7, #4]
 1062 000a 1B88     		ldrh	r3, [r3]	@ movhi
 1063 000c 9BB2     		uxth	r3, r3
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s 			page 51


 1064 000e 43F40073 		orr	r3, r3, #512
 1065 0012 9AB2     		uxth	r2, r3
 1066 0014 7B68     		ldr	r3, [r7, #4]
 1067 0016 1A80     		strh	r2, [r3]	@ movhi
 590:./i2c/i2c-std.c ****     // wait until stop condition is complete STOPF is set
 591:./i2c/i2c-std.c ****      return i2c_wait_stop_event_std(I2CX);
 1068              		.loc 2 591 13
 1069 0018 7868     		ldr	r0, [r7, #4]
 1070 001a FFF7FEFF 		bl	i2c_wait_stop_event_std
 1071 001e 0346     		mov	r3, r0
 592:./i2c/i2c-std.c **** }				
 1072              		.loc 2 592 1
 1073 0020 1846     		mov	r0, r3
 1074 0022 0837     		adds	r7, r7, #8
 1075              	.LCFI70:
 1076              		.cfi_def_cfa_offset 8
 1077 0024 BD46     		mov	sp, r7
 1078              	.LCFI71:
 1079              		.cfi_def_cfa_register 13
 1080              		@ sp needed
 1081 0026 80BD     		pop	{r7, pc}
 1082              		.cfi_endproc
 1083              	.LFE43:
 1085              		.section	.text.i2c_send_7bit_slave_address_wr_std,"ax",%progbits
 1086              		.align	1
 1087              		.syntax unified
 1088              		.thumb
 1089              		.thumb_func
 1091              	i2c_send_7bit_slave_address_wr_std:
 1092              	.LFB44:
 593:./i2c/i2c-std.c **** //-------------------------------------------------------------------------------------------------
 594:./i2c/i2c-std.c **** /**
 595:./i2c/i2c-std.c ****  * @brief send a slave with write operation via I2C bus
 596:./i2c/i2c-std.c ****  * 
 597:./i2c/i2c-std.c ****  * @param I2CX 
 598:./i2c/i2c-std.c ****  * @param  slave_address
 599:./i2c/i2c-std.c ****  * @return * uint8_t 
 600:./i2c/i2c-std.c ****  */
 601:./i2c/i2c-std.c **** uint8_t i2c_send_7bit_slave_address_wr_std(I2C_TypeDef* I2CX,uint8_t slave_address)
 602:./i2c/i2c-std.c **** {
 1093              		.loc 2 602 1
 1094              		.cfi_startproc
 1095              		@ args = 0, pretend = 0, frame = 16
 1096              		@ frame_needed = 1, uses_anonymous_args = 0
 1097 0000 80B5     		push	{r7, lr}
 1098              	.LCFI72:
 1099              		.cfi_def_cfa_offset 8
 1100              		.cfi_offset 7, -8
 1101              		.cfi_offset 14, -4
 1102 0002 84B0     		sub	sp, sp, #16
 1103              	.LCFI73:
 1104              		.cfi_def_cfa_offset 24
 1105 0004 00AF     		add	r7, sp, #0
 1106              	.LCFI74:
 1107              		.cfi_def_cfa_register 7
 1108 0006 7860     		str	r0, [r7, #4]
 1109 0008 0B46     		mov	r3, r1
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s 			page 52


 1110 000a FB70     		strb	r3, [r7, #3]
 603:./i2c/i2c-std.c ****     uint8_t error=0;
 1111              		.loc 2 603 13
 1112 000c 0023     		movs	r3, #0
 1113 000e FB73     		strb	r3, [r7, #15]
 604:./i2c/i2c-std.c ****     
 605:./i2c/i2c-std.c ****     /* Send slave address */
 606:./i2c/i2c-std.c ****      //I2C_Send7bitAddress(I2CX,slave_address,I2C_Direction_Transmitter);
 607:./i2c/i2c-std.c ****      //I2CX->DR = slave_address & 0xfe;
 608:./i2c/i2c-std.c ****      I2CX->DR = I2C_7BIT_ADD_WRITE(slave_address); 
 1114              		.loc 2 608 17
 1115 0010 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1116 0012 9BB2     		uxth	r3, r3
 1117 0014 03F0FE03 		and	r3, r3, #254
 1118 0018 9AB2     		uxth	r2, r3
 1119              		.loc 2 608 15
 1120 001a 7B68     		ldr	r3, [r7, #4]
 1121 001c 1A82     		strh	r2, [r3, #16]	@ movhi
 609:./i2c/i2c-std.c ****    
 610:./i2c/i2c-std.c ****     // wait until the slave acknowledge  BUSY, MSL, ADDR, TXE and TRA flags are all set 
 611:./i2c/i2c-std.c ****     error=i2c_wait_7bit_slave_address_wr_std(I2CX);
 1122              		.loc 2 611 11
 1123 001e 7868     		ldr	r0, [r7, #4]
 1124 0020 FFF7FEFF 		bl	i2c_wait_7bit_slave_address_wr_std
 1125 0024 0346     		mov	r3, r0
 1126 0026 FB73     		strb	r3, [r7, #15]
 612:./i2c/i2c-std.c ****     if(error!=I2C_OK) return error;
 1127              		.loc 2 612 7
 1128 0028 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1129 002a 002B     		cmp	r3, #0
 1130 002c 01D0     		beq	.L69
 1131              		.loc 2 612 30 discriminator 1
 1132 002e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1133 0030 10E0     		b	.L70
 1134              	.L69:
 1135              	.LBB4:
 613:./i2c/i2c-std.c **** 
 614:./i2c/i2c-std.c ****     /* Clear ADDR flag */
 615:./i2c/i2c-std.c ****      _I2C_CLEAR_ADDRFLAG(I2CX);
 1136              		.loc 2 615 6
 1137 0032 0023     		movs	r3, #0
 1138 0034 BB60     		str	r3, [r7, #8]
 1139 0036 7B68     		ldr	r3, [r7, #4]
 1140 0038 9B8A     		ldrh	r3, [r3, #20]	@ movhi
 1141 003a 9BB2     		uxth	r3, r3
 1142 003c BB60     		str	r3, [r7, #8]
 1143 003e 7B68     		ldr	r3, [r7, #4]
 1144 0040 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 1145 0042 9BB2     		uxth	r3, r3
 1146 0044 BB60     		str	r3, [r7, #8]
 1147 0046 BB68     		ldr	r3, [r7, #8]
 1148              	.LBE4:
 616:./i2c/i2c-std.c **** 
 617:./i2c/i2c-std.c ****      /* Wait until TXE flag is set */
 618:./i2c/i2c-std.c ****       error=i2c_wait_write_byte_txe_std(I2CX);
 1149              		.loc 2 618 13
 1150 0048 7868     		ldr	r0, [r7, #4]
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s 			page 53


 1151 004a FFF7FEFF 		bl	i2c_wait_write_byte_txe_std
 1152 004e 0346     		mov	r3, r0
 1153 0050 FB73     		strb	r3, [r7, #15]
 619:./i2c/i2c-std.c **** /*
 620:./i2c/i2c-std.c ****     if(error==I2C_OK)
 621:./i2c/i2c-std.c ****     {
 622:./i2c/i2c-std.c ****       // Clear ADDR flag 
 623:./i2c/i2c-std.c ****        _I2C_CLEAR_ADDRFLAG(I2CX);
 624:./i2c/i2c-std.c **** 
 625:./i2c/i2c-std.c ****         // Wait until TXE flag is set 
 626:./i2c/i2c-std.c ****       error=i2c_wait_write_byte_txe_std(I2CX);
 627:./i2c/i2c-std.c ****  
 628:./i2c/i2c-std.c ****     }
 629:./i2c/i2c-std.c **** */
 630:./i2c/i2c-std.c ****     return error;    
 1154              		.loc 2 630 12
 1155 0052 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1156              	.L70:
 631:./i2c/i2c-std.c **** }
 1157              		.loc 2 631 1
 1158 0054 1846     		mov	r0, r3
 1159 0056 1037     		adds	r7, r7, #16
 1160              	.LCFI75:
 1161              		.cfi_def_cfa_offset 8
 1162 0058 BD46     		mov	sp, r7
 1163              	.LCFI76:
 1164              		.cfi_def_cfa_register 13
 1165              		@ sp needed
 1166 005a 80BD     		pop	{r7, pc}
 1167              		.cfi_endproc
 1168              	.LFE44:
 1170              		.section	.text.i2c_send_7bit_slave_address_rd_std,"ax",%progbits
 1171              		.align	1
 1172              		.syntax unified
 1173              		.thumb
 1174              		.thumb_func
 1176              	i2c_send_7bit_slave_address_rd_std:
 1177              	.LFB45:
 632:./i2c/i2c-std.c **** //-------------------------------------------------------------------------------------------------
 633:./i2c/i2c-std.c **** /**
 634:./i2c/i2c-std.c ****  * @brief send a slave with read operation via I2C bus
 635:./i2c/i2c-std.c ****  * 
 636:./i2c/i2c-std.c ****  * @param I2CX 
 637:./i2c/i2c-std.c ****  * @param  slave_address
 638:./i2c/i2c-std.c ****  * @return uint8_t 
 639:./i2c/i2c-std.c ****  */
 640:./i2c/i2c-std.c **** uint8_t i2c_send_7bit_slave_address_rd_std(I2C_TypeDef* I2CX,uint8_t slave_address)	
 641:./i2c/i2c-std.c **** { 
 1178              		.loc 2 641 1
 1179              		.cfi_startproc
 1180              		@ args = 0, pretend = 0, frame = 16
 1181              		@ frame_needed = 1, uses_anonymous_args = 0
 1182 0000 80B5     		push	{r7, lr}
 1183              	.LCFI77:
 1184              		.cfi_def_cfa_offset 8
 1185              		.cfi_offset 7, -8
 1186              		.cfi_offset 14, -4
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s 			page 54


 1187 0002 84B0     		sub	sp, sp, #16
 1188              	.LCFI78:
 1189              		.cfi_def_cfa_offset 24
 1190 0004 00AF     		add	r7, sp, #0
 1191              	.LCFI79:
 1192              		.cfi_def_cfa_register 7
 1193 0006 7860     		str	r0, [r7, #4]
 1194 0008 0B46     		mov	r3, r1
 1195 000a FB70     		strb	r3, [r7, #3]
 642:./i2c/i2c-std.c ****     uint8_t error=I2C_OK;
 1196              		.loc 2 642 13
 1197 000c 0023     		movs	r3, #0
 1198 000e FB73     		strb	r3, [r7, #15]
 643:./i2c/i2c-std.c ****     //(void)I2CX->SR1;
 644:./i2c/i2c-std.c ****        //I2CX->DR = slave_address | 0x01;
 645:./i2c/i2c-std.c ****      I2CX->DR = I2C_7BIT_ADD_READ(slave_address); //I2C_Send7bitAddress(I2CX,slave_address,I2C_Dire
 1199              		.loc 2 645 17
 1200 0010 FB78     		ldrb	r3, [r7, #3]
 1201 0012 43F00103 		orr	r3, r3, #1
 1202 0016 DBB2     		uxtb	r3, r3
 1203 0018 9AB2     		uxth	r2, r3
 1204              		.loc 2 645 15
 1205 001a 7B68     		ldr	r3, [r7, #4]
 1206 001c 1A82     		strh	r2, [r3, #16]	@ movhi
 646:./i2c/i2c-std.c ****      
 647:./i2c/i2c-std.c ****      // wait until the slave acknowledge  BUSY, MSL, ADDR flags are all set 
 648:./i2c/i2c-std.c ****      error=i2c_wait_7bit_slave_address_rd_std(I2CX);
 1207              		.loc 2 648 12
 1208 001e 7868     		ldr	r0, [r7, #4]
 1209 0020 FFF7FEFF 		bl	i2c_wait_7bit_slave_address_rd_std
 1210 0024 0346     		mov	r3, r0
 1211 0026 FB73     		strb	r3, [r7, #15]
 649:./i2c/i2c-std.c ****      return error;
 1212              		.loc 2 649 13
 1213 0028 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 650:./i2c/i2c-std.c **** }
 1214              		.loc 2 650 1
 1215 002a 1846     		mov	r0, r3
 1216 002c 1037     		adds	r7, r7, #16
 1217              	.LCFI80:
 1218              		.cfi_def_cfa_offset 8
 1219 002e BD46     		mov	sp, r7
 1220              	.LCFI81:
 1221              		.cfi_def_cfa_register 13
 1222              		@ sp needed
 1223 0030 80BD     		pop	{r7, pc}
 1224              		.cfi_endproc
 1225              	.LFE45:
 1227              		.section	.text.i2c_write_byte_std,"ax",%progbits
 1228              		.align	1
 1229              		.syntax unified
 1230              		.thumb
 1231              		.thumb_func
 1233              	i2c_write_byte_std:
 1234              	.LFB46:
 651:./i2c/i2c-std.c **** //-------------------------------------------------------------------------------------------------
 652:./i2c/i2c-std.c **** /**
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s 			page 55


 653:./i2c/i2c-std.c ****  * @brief write a byte via TWI/I2C bus to the slave
 654:./i2c/i2c-std.c ****  * 
 655:./i2c/i2c-std.c ****  * @param I2CX 
 656:./i2c/i2c-std.c ****  * @param data 
 657:./i2c/i2c-std.c ****  * @return uint8_t 
 658:./i2c/i2c-std.c ****  */
 659:./i2c/i2c-std.c **** uint8_t i2c_write_byte_std(I2C_TypeDef* I2CX,uint8_t data)		        
 660:./i2c/i2c-std.c **** {
 1235              		.loc 2 660 1
 1236              		.cfi_startproc
 1237              		@ args = 0, pretend = 0, frame = 16
 1238              		@ frame_needed = 1, uses_anonymous_args = 0
 1239 0000 80B5     		push	{r7, lr}
 1240              	.LCFI82:
 1241              		.cfi_def_cfa_offset 8
 1242              		.cfi_offset 7, -8
 1243              		.cfi_offset 14, -4
 1244 0002 84B0     		sub	sp, sp, #16
 1245              	.LCFI83:
 1246              		.cfi_def_cfa_offset 24
 1247 0004 00AF     		add	r7, sp, #0
 1248              	.LCFI84:
 1249              		.cfi_def_cfa_register 7
 1250 0006 7860     		str	r0, [r7, #4]
 1251 0008 0B46     		mov	r3, r1
 1252 000a FB70     		strb	r3, [r7, #3]
 661:./i2c/i2c-std.c ****     uint8_t error=0;
 1253              		.loc 2 661 13
 1254 000c 0023     		movs	r3, #0
 1255 000e FB73     		strb	r3, [r7, #15]
 662:./i2c/i2c-std.c ****     //Ev6: send the byte
 663:./i2c/i2c-std.c ****       I2CX->DR=data;///I2C_SendData(I2CX,data);    
 1256              		.loc 2 663 15
 1257 0010 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1258 0012 9AB2     		uxth	r2, r3
 1259 0014 7B68     		ldr	r3, [r7, #4]
 1260 0016 1A82     		strh	r2, [r3, #16]	@ movhi
 664:./i2c/i2c-std.c ****     //Wait until txe is set
 665:./i2c/i2c-std.c ****     error=i2c_wait_write_byte_txe_std(I2CX);
 1261              		.loc 2 665 11
 1262 0018 7868     		ldr	r0, [r7, #4]
 1263 001a FFF7FEFF 		bl	i2c_wait_write_byte_txe_std
 1264 001e 0346     		mov	r3, r0
 1265 0020 FB73     		strb	r3, [r7, #15]
 666:./i2c/i2c-std.c ****     return error;
 1266              		.loc 2 666 12
 1267 0022 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 667:./i2c/i2c-std.c **** }
 1268              		.loc 2 667 1
 1269 0024 1846     		mov	r0, r3
 1270 0026 1037     		adds	r7, r7, #16
 1271              	.LCFI85:
 1272              		.cfi_def_cfa_offset 8
 1273 0028 BD46     		mov	sp, r7
 1274              	.LCFI86:
 1275              		.cfi_def_cfa_register 13
 1276              		@ sp needed
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s 			page 56


 1277 002a 80BD     		pop	{r7, pc}
 1278              		.cfi_endproc
 1279              	.LFE46:
 1281              		.section	.text.i2c_write_nbyte_std,"ax",%progbits
 1282              		.align	1
 1283              		.syntax unified
 1284              		.thumb
 1285              		.thumb_func
 1287              	i2c_write_nbyte_std:
 1288              	.LFB47:
 668:./i2c/i2c-std.c **** //-------------------------------------------------------------------------------------------------
 669:./i2c/i2c-std.c **** /**
 670:./i2c/i2c-std.c ****  * @brief write an array of n byte via TWI/I2C bus to the slave
 671:./i2c/i2c-std.c ****  * 
 672:./i2c/i2c-std.c ****  * @param I2CX 
 673:./i2c/i2c-std.c ****  * @param data 
 674:./i2c/i2c-std.c ****  * @return uint8_t 
 675:./i2c/i2c-std.c ****  */
 676:./i2c/i2c-std.c **** uint8_t i2c_write_nbyte_std(I2C_TypeDef* I2CX, uint8_t *buf, size_t n)		        
 677:./i2c/i2c-std.c **** {
 1289              		.loc 2 677 1
 1290              		.cfi_startproc
 1291              		@ args = 0, pretend = 0, frame = 24
 1292              		@ frame_needed = 1, uses_anonymous_args = 0
 1293 0000 80B5     		push	{r7, lr}
 1294              	.LCFI87:
 1295              		.cfi_def_cfa_offset 8
 1296              		.cfi_offset 7, -8
 1297              		.cfi_offset 14, -4
 1298 0002 86B0     		sub	sp, sp, #24
 1299              	.LCFI88:
 1300              		.cfi_def_cfa_offset 32
 1301 0004 00AF     		add	r7, sp, #0
 1302              	.LCFI89:
 1303              		.cfi_def_cfa_register 7
 1304 0006 F860     		str	r0, [r7, #12]
 1305 0008 B960     		str	r1, [r7, #8]
 1306 000a 7A60     		str	r2, [r7, #4]
 678:./i2c/i2c-std.c ****     uint16_t i=0;
 1307              		.loc 2 678 14
 1308 000c 0023     		movs	r3, #0
 1309 000e FB82     		strh	r3, [r7, #22]	@ movhi
 679:./i2c/i2c-std.c ****     uint8_t error=0;
 1310              		.loc 2 679 13
 1311 0010 0023     		movs	r3, #0
 1312 0012 7B75     		strb	r3, [r7, #21]
 680:./i2c/i2c-std.c ****     //Ev6: send the byte
 681:./i2c/i2c-std.c ****     for(i=0;i<n;i++)
 1313              		.loc 2 681 10
 1314 0014 0023     		movs	r3, #0
 1315 0016 FB82     		strh	r3, [r7, #22]	@ movhi
 1316              		.loc 2 681 5
 1317 0018 11E0     		b	.L76
 1318              	.L79:
 682:./i2c/i2c-std.c ****     {
 683:./i2c/i2c-std.c ****         error=i2c_write_byte_std(I2CX,buf[i]);
 1319              		.loc 2 683 42
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s 			page 57


 1320 001a FB8A     		ldrh	r3, [r7, #22]
 1321 001c BA68     		ldr	r2, [r7, #8]
 1322 001e 1344     		add	r3, r3, r2
 1323              		.loc 2 683 15
 1324 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1325 0022 1946     		mov	r1, r3
 1326 0024 F868     		ldr	r0, [r7, #12]
 1327 0026 FFF7FEFF 		bl	i2c_write_byte_std
 1328 002a 0346     		mov	r3, r0
 1329 002c 7B75     		strb	r3, [r7, #21]
 684:./i2c/i2c-std.c ****         if(error) 
 1330              		.loc 2 684 11
 1331 002e 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 1332 0030 002B     		cmp	r3, #0
 1333 0032 01D0     		beq	.L77
 685:./i2c/i2c-std.c ****           return error;
 1334              		.loc 2 685 18
 1335 0034 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 1336 0036 07E0     		b	.L78
 1337              	.L77:
 681:./i2c/i2c-std.c ****     {
 1338              		.loc 2 681 18 discriminator 2
 1339 0038 FB8A     		ldrh	r3, [r7, #22]
 1340 003a 0133     		adds	r3, r3, #1
 1341 003c FB82     		strh	r3, [r7, #22]	@ movhi
 1342              	.L76:
 681:./i2c/i2c-std.c ****     {
 1343              		.loc 2 681 14 discriminator 1
 1344 003e FB8A     		ldrh	r3, [r7, #22]
 681:./i2c/i2c-std.c ****     {
 1345              		.loc 2 681 5 discriminator 1
 1346 0040 7A68     		ldr	r2, [r7, #4]
 1347 0042 9A42     		cmp	r2, r3
 1348 0044 E9D8     		bhi	.L79
 686:./i2c/i2c-std.c ****     }
 687:./i2c/i2c-std.c ****     // no error detected just return 0
 688:./i2c/i2c-std.c ****     return I2C_OK;
 1349              		.loc 2 688 12
 1350 0046 0023     		movs	r3, #0
 1351              	.L78:
 689:./i2c/i2c-std.c **** }
 1352              		.loc 2 689 1
 1353 0048 1846     		mov	r0, r3
 1354 004a 1837     		adds	r7, r7, #24
 1355              	.LCFI90:
 1356              		.cfi_def_cfa_offset 8
 1357 004c BD46     		mov	sp, r7
 1358              	.LCFI91:
 1359              		.cfi_def_cfa_register 13
 1360              		@ sp needed
 1361 004e 80BD     		pop	{r7, pc}
 1362              		.cfi_endproc
 1363              	.LFE47:
 1365              		.section	.text.i2c_read_lastbyte_std,"ax",%progbits
 1366              		.align	1
 1367              		.syntax unified
 1368              		.thumb
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s 			page 58


 1369              		.thumb_func
 1371              	i2c_read_lastbyte_std:
 1372              	.LFB48:
 690:./i2c/i2c-std.c **** //-------------------------------------------------------------------------------------------------
 691:./i2c/i2c-std.c **** /**
 692:./i2c/i2c-std.c ****  * @brief 
 693:./i2c/i2c-std.c ****  *      EV7_3: BTF = 1, program STOP = 1, read DR twice (Read Data1 and Data2) just after programmi
 694:./i2c/i2c-std.c ****  * @param I2CX 
 695:./i2c/i2c-std.c ****  * @param data 
 696:./i2c/i2c-std.c ****  * @param ack 
 697:./i2c/i2c-std.c ****  * @return uint8_t 
 698:./i2c/i2c-std.c ****  */
 699:./i2c/i2c-std.c **** uint8_t i2c_read_lastbyte_std(I2C_TypeDef* I2CX,uint8_t *data)
 700:./i2c/i2c-std.c **** {
 1373              		.loc 2 700 1
 1374              		.cfi_startproc
 1375              		@ args = 0, pretend = 0, frame = 16
 1376              		@ frame_needed = 1, uses_anonymous_args = 0
 1377 0000 80B5     		push	{r7, lr}
 1378              	.LCFI92:
 1379              		.cfi_def_cfa_offset 8
 1380              		.cfi_offset 7, -8
 1381              		.cfi_offset 14, -4
 1382 0002 84B0     		sub	sp, sp, #16
 1383              	.LCFI93:
 1384              		.cfi_def_cfa_offset 24
 1385 0004 00AF     		add	r7, sp, #0
 1386              	.LCFI94:
 1387              		.cfi_def_cfa_register 7
 1388 0006 7860     		str	r0, [r7, #4]
 1389 0008 3960     		str	r1, [r7]
 701:./i2c/i2c-std.c ****    uint8_t error=I2C_OK;
 1390              		.loc 2 701 12
 1391 000a 0023     		movs	r3, #0
 1392 000c FB73     		strb	r3, [r7, #15]
 702:./i2c/i2c-std.c ****    // clear POS flag
 703:./i2c/i2c-std.c ****      CLEAR_BIT(I2CX->CR1,I2C_CR1_POS); //I2C_NACKPositionConfig(I2CX , I2C_NACKPosition_Current);
 1393              		.loc 2 703 6
 1394 000e 7B68     		ldr	r3, [r7, #4]
 1395 0010 1B88     		ldrh	r3, [r3]	@ movhi
 1396 0012 9BB2     		uxth	r3, r3
 1397 0014 23F40063 		bic	r3, r3, #2048
 1398 0018 9AB2     		uxth	r2, r3
 1399 001a 7B68     		ldr	r3, [r7, #4]
 1400 001c 1A80     		strh	r2, [r3]	@ movhi
 704:./i2c/i2c-std.c **** 
 705:./i2c/i2c-std.c ****     /* Disable Acknowledge */
 706:./i2c/i2c-std.c ****      CLEAR_BIT(I2CX->CR1,I2C_CR1_ACK); //I2C_AcknowledgeConfig(I2CX , DISABLE);
 1401              		.loc 2 706 6
 1402 001e 7B68     		ldr	r3, [r7, #4]
 1403 0020 1B88     		ldrh	r3, [r3]	@ movhi
 1404 0022 9BB2     		uxth	r3, r3
 1405 0024 23F48063 		bic	r3, r3, #1024
 1406 0028 9AB2     		uxth	r2, r3
 1407 002a 7B68     		ldr	r3, [r7, #4]
 1408 002c 1A80     		strh	r2, [r3]	@ movhi
 707:./i2c/i2c-std.c **** 
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s 			page 59


 708:./i2c/i2c-std.c **** // EV6_3 -- must be atomic -- Clear ADDR (by reading SR1 then SR2), generate STOP  
 709:./i2c/i2c-std.c ****   /* Disable all active IRQs around ADDR clearing and STOP programming because the EV6_3
 710:./i2c/i2c-std.c ****     software sequence must complete before the current byte end of transfer */
 711:./i2c/i2c-std.c ****   __disable_irq ();
 1409              		.loc 2 711 3
 1410 002e FFF7FEFF 		bl	__disable_irq
 1411              	.LBB5:
 712:./i2c/i2c-std.c ****     _I2C_CLEAR_ADDRFLAG(I2CX);                /* Clear ADDR flag */ // (void) I2CX->SR1; (void) I2C
 1412              		.loc 2 712 5
 1413 0032 0023     		movs	r3, #0
 1414 0034 BB60     		str	r3, [r7, #8]
 1415 0036 7B68     		ldr	r3, [r7, #4]
 1416 0038 9B8A     		ldrh	r3, [r3, #20]	@ movhi
 1417 003a 9BB2     		uxth	r3, r3
 1418 003c BB60     		str	r3, [r7, #8]
 1419 003e 7B68     		ldr	r3, [r7, #4]
 1420 0040 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 1421 0042 9BB2     		uxth	r3, r3
 1422 0044 BB60     		str	r3, [r7, #8]
 1423 0046 BB68     		ldr	r3, [r7, #8]
 1424              	.LBE5:
 713:./i2c/i2c-std.c ****      SET_BIT(I2CX->CR1,I2C_CR1_STOP);        /* Generate Stop */  //I2C_GenerateSTOP(I2CX ,ENABLE);
 1425              		.loc 2 713 6
 1426 0048 7B68     		ldr	r3, [r7, #4]
 1427 004a 1B88     		ldrh	r3, [r3]	@ movhi
 1428 004c 9BB2     		uxth	r3, r3
 1429 004e 43F40073 		orr	r3, r3, #512
 1430 0052 9AB2     		uxth	r2, r3
 1431 0054 7B68     		ldr	r3, [r7, #4]
 1432 0056 1A80     		strh	r2, [r3]	@ movhi
 714:./i2c/i2c-std.c ****  __enable_irq ();
 1433              		.loc 2 714 2
 1434 0058 FFF7FEFF 		bl	__enable_irq
 715:./i2c/i2c-std.c **** 
 716:./i2c/i2c-std.c ****   // Receive data EV7
 717:./i2c/i2c-std.c ****   error=i2c_wait_read_byte_rxne_std(I2CX);
 1435              		.loc 2 717 9
 1436 005c 7868     		ldr	r0, [r7, #4]
 1437 005e FFF7FEFF 		bl	i2c_wait_read_byte_rxne_std
 1438 0062 0346     		mov	r3, r0
 1439 0064 FB73     		strb	r3, [r7, #15]
 718:./i2c/i2c-std.c ****   if(error!=I2C_OK)
 1440              		.loc 2 718 5
 1441 0066 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1442 0068 002B     		cmp	r3, #0
 1443 006a 01D0     		beq	.L81
 719:./i2c/i2c-std.c ****     return error;
 1444              		.loc 2 719 12
 1445 006c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1446 006e 06E0     		b	.L82
 1447              	.L81:
 720:./i2c/i2c-std.c **** 
 721:./i2c/i2c-std.c ****    *data = I2CX->DR;
 1448              		.loc 2 721 16
 1449 0070 7B68     		ldr	r3, [r7, #4]
 1450 0072 1B8A     		ldrh	r3, [r3, #16]	@ movhi
 1451 0074 9BB2     		uxth	r3, r3
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s 			page 60


 1452              		.loc 2 721 10
 1453 0076 DAB2     		uxtb	r2, r3
 1454 0078 3B68     		ldr	r3, [r7]
 1455 007a 1A70     		strb	r2, [r3]
 722:./i2c/i2c-std.c **** 
 723:./i2c/i2c-std.c ****   return I2C_OK;
 1456              		.loc 2 723 10
 1457 007c 0023     		movs	r3, #0
 1458              	.L82:
 724:./i2c/i2c-std.c **** }
 1459              		.loc 2 724 1
 1460 007e 1846     		mov	r0, r3
 1461 0080 1037     		adds	r7, r7, #16
 1462              	.LCFI95:
 1463              		.cfi_def_cfa_offset 8
 1464 0082 BD46     		mov	sp, r7
 1465              	.LCFI96:
 1466              		.cfi_def_cfa_register 13
 1467              		@ sp needed
 1468 0084 80BD     		pop	{r7, pc}
 1469              		.cfi_endproc
 1470              	.LFE48:
 1472              		.section	.text.i2c_read_last2byte_std,"ax",%progbits
 1473              		.align	1
 1474              		.syntax unified
 1475              		.thumb
 1476              		.thumb_func
 1478              	i2c_read_last2byte_std:
 1479              	.LFB49:
 725:./i2c/i2c-std.c **** //-------------------------------------------------------------------------------------------------
 726:./i2c/i2c-std.c **** /**
 727:./i2c/i2c-std.c ****  * @brief 
 728:./i2c/i2c-std.c ****  * 
 729:./i2c/i2c-std.c ****  * @param I2CX 
 730:./i2c/i2c-std.c ****  * @param data 
 731:./i2c/i2c-std.c ****  * @param ack 
 732:./i2c/i2c-std.c ****  * @return uint8_t 
 733:./i2c/i2c-std.c ****  */
 734:./i2c/i2c-std.c **** uint8_t i2c_read_last2byte_std(I2C_TypeDef* I2CX,uint8_t * buf)
 735:./i2c/i2c-std.c **** {
 1480              		.loc 2 735 1
 1481              		.cfi_startproc
 1482              		@ args = 0, pretend = 0, frame = 16
 1483              		@ frame_needed = 1, uses_anonymous_args = 0
 1484 0000 80B5     		push	{r7, lr}
 1485              	.LCFI97:
 1486              		.cfi_def_cfa_offset 8
 1487              		.cfi_offset 7, -8
 1488              		.cfi_offset 14, -4
 1489 0002 84B0     		sub	sp, sp, #16
 1490              	.LCFI98:
 1491              		.cfi_def_cfa_offset 24
 1492 0004 00AF     		add	r7, sp, #0
 1493              	.LCFI99:
 1494              		.cfi_def_cfa_register 7
 1495 0006 7860     		str	r0, [r7, #4]
 1496 0008 3960     		str	r1, [r7]
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s 			page 61


 736:./i2c/i2c-std.c ****   uint8_t error=I2C_OK;
 1497              		.loc 2 736 11
 1498 000a 0023     		movs	r3, #0
 1499 000c FB73     		strb	r3, [r7, #15]
 737:./i2c/i2c-std.c ****   /* Enable Pos */
 738:./i2c/i2c-std.c ****   SET_BIT(I2CX->CR1, I2C_CR1_POS); //I2CX->CR1|=I2C_CR1_POS;   //I2C_NACKPositionConfig(I2CX , I2C_
 1500              		.loc 2 738 3
 1501 000e 7B68     		ldr	r3, [r7, #4]
 1502 0010 1B88     		ldrh	r3, [r3]	@ movhi
 1503 0012 9BB2     		uxth	r3, r3
 1504 0014 43F40063 		orr	r3, r3, #2048
 1505 0018 9AB2     		uxth	r2, r3
 1506 001a 7B68     		ldr	r3, [r7, #4]
 1507 001c 1A80     		strh	r2, [r3]	@ movhi
 739:./i2c/i2c-std.c **** 
 740:./i2c/i2c-std.c ****   /* Disable all active IRQs around ADDR clearing and STOP programming because the EV6_3
 741:./i2c/i2c-std.c ****       software sequence must complete before the current byte end of transfer */
 742:./i2c/i2c-std.c **** __disable_irq ();
 1508              		.loc 2 742 1
 1509 001e FFF7FEFF 		bl	__disable_irq
 1510              	.LBB6:
 743:./i2c/i2c-std.c **** // Clear ADDR flag
 744:./i2c/i2c-std.c ****   _I2C_CLEAR_ADDRFLAG(I2CX);    //(void) I2CX->SR1;(void) I2CX->SR2; 
 1511              		.loc 2 744 3
 1512 0022 0023     		movs	r3, #0
 1513 0024 BB60     		str	r3, [r7, #8]
 1514 0026 7B68     		ldr	r3, [r7, #4]
 1515 0028 9B8A     		ldrh	r3, [r3, #20]	@ movhi
 1516 002a 9BB2     		uxth	r3, r3
 1517 002c BB60     		str	r3, [r7, #8]
 1518 002e 7B68     		ldr	r3, [r7, #4]
 1519 0030 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 1520 0032 9BB2     		uxth	r3, r3
 1521 0034 BB60     		str	r3, [r7, #8]
 1522 0036 BB68     		ldr	r3, [r7, #8]
 1523              	.LBE6:
 745:./i2c/i2c-std.c ****   /* Disable Acknowledge */
 746:./i2c/i2c-std.c ****   CLEAR_BIT(I2CX->CR1,I2C_CR1_ACK); //I2CX->CR1&=~I2C_CR1_ACK;//I2C_AcknowledgeConfig(I2CX , DISABL
 1524              		.loc 2 746 3
 1525 0038 7B68     		ldr	r3, [r7, #4]
 1526 003a 1B88     		ldrh	r3, [r3]	@ movhi
 1527 003c 9BB2     		uxth	r3, r3
 1528 003e 23F48063 		bic	r3, r3, #1024
 1529 0042 9AB2     		uxth	r2, r3
 1530 0044 7B68     		ldr	r3, [r7, #4]
 1531 0046 1A80     		strh	r2, [r3]	@ movhi
 747:./i2c/i2c-std.c **** __enable_irq ();
 1532              		.loc 2 747 1
 1533 0048 FFF7FEFF 		bl	__enable_irq
 748:./i2c/i2c-std.c **** 
 749:./i2c/i2c-std.c **** // EV7_3 -- Wait for BTF , program stop , read data twice
 750:./i2c/i2c-std.c ****   error=i2c_wait_read_byte_btf_std(I2CX);
 1534              		.loc 2 750 9
 1535 004c 7868     		ldr	r0, [r7, #4]
 1536 004e FFF7FEFF 		bl	i2c_wait_read_byte_btf_std
 1537 0052 0346     		mov	r3, r0
 1538 0054 FB73     		strb	r3, [r7, #15]
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s 			page 62


 751:./i2c/i2c-std.c ****   if(error!=I2C_OK)
 1539              		.loc 2 751 5
 1540 0056 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1541 0058 002B     		cmp	r3, #0
 1542 005a 01D0     		beq	.L84
 752:./i2c/i2c-std.c ****   return error;
 1543              		.loc 2 752 10
 1544 005c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1545 005e 1BE0     		b	.L85
 1546              	.L84:
 753:./i2c/i2c-std.c **** 
 754:./i2c/i2c-std.c **** __disable_irq ();
 1547              		.loc 2 754 1
 1548 0060 FFF7FEFF 		bl	__disable_irq
 755:./i2c/i2c-std.c ****   /* Generate Stop */
 756:./i2c/i2c-std.c ****   SET_BIT(I2CX->CR1,I2C_CR1_STOP); //I2C_GenerateSTOP(I2CX ,ENABLE);
 1549              		.loc 2 756 3
 1550 0064 7B68     		ldr	r3, [r7, #4]
 1551 0066 1B88     		ldrh	r3, [r3]	@ movhi
 1552 0068 9BB2     		uxth	r3, r3
 1553 006a 43F40073 		orr	r3, r3, #512
 1554 006e 9AB2     		uxth	r2, r3
 1555 0070 7B68     		ldr	r3, [r7, #4]
 1556 0072 1A80     		strh	r2, [r3]	@ movhi
 757:./i2c/i2c-std.c ****   //*buf++ = I2CX->DR;  
 758:./i2c/i2c-std.c ****   /* Read data from DR */
 759:./i2c/i2c-std.c ****   *buf = I2CX->DR;
 1557              		.loc 2 759 14
 1558 0074 7B68     		ldr	r3, [r7, #4]
 1559 0076 1B8A     		ldrh	r3, [r3, #16]	@ movhi
 1560 0078 9BB2     		uxth	r3, r3
 1561              		.loc 2 759 8
 1562 007a DAB2     		uxtb	r2, r3
 1563 007c 3B68     		ldr	r3, [r7]
 1564 007e 1A70     		strb	r2, [r3]
 760:./i2c/i2c-std.c ****   /* Increment Buffer pointer */
 761:./i2c/i2c-std.c ****   buf++;
 1565              		.loc 2 761 6
 1566 0080 3B68     		ldr	r3, [r7]
 1567 0082 0133     		adds	r3, r3, #1
 1568 0084 3B60     		str	r3, [r7]
 762:./i2c/i2c-std.c ****  __enable_irq ();
 1569              		.loc 2 762 2
 1570 0086 FFF7FEFF 		bl	__enable_irq
 763:./i2c/i2c-std.c ****  /* Read data from DR */
 764:./i2c/i2c-std.c ****   *buf= I2CX->DR;
 1571              		.loc 2 764 13
 1572 008a 7B68     		ldr	r3, [r7, #4]
 1573 008c 1B8A     		ldrh	r3, [r3, #16]	@ movhi
 1574 008e 9BB2     		uxth	r3, r3
 1575              		.loc 2 764 7
 1576 0090 DAB2     		uxtb	r2, r3
 1577 0092 3B68     		ldr	r3, [r7]
 1578 0094 1A70     		strb	r2, [r3]
 765:./i2c/i2c-std.c **** 
 766:./i2c/i2c-std.c ****  return I2C_OK;
 1579              		.loc 2 766 9
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s 			page 63


 1580 0096 0023     		movs	r3, #0
 1581              	.L85:
 767:./i2c/i2c-std.c **** }
 1582              		.loc 2 767 1
 1583 0098 1846     		mov	r0, r3
 1584 009a 1037     		adds	r7, r7, #16
 1585              	.LCFI100:
 1586              		.cfi_def_cfa_offset 8
 1587 009c BD46     		mov	sp, r7
 1588              	.LCFI101:
 1589              		.cfi_def_cfa_register 13
 1590              		@ sp needed
 1591 009e 80BD     		pop	{r7, pc}
 1592              		.cfi_endproc
 1593              	.LFE49:
 1595              		.section	.text.i2c_read_last3byte_std,"ax",%progbits
 1596              		.align	1
 1597              		.syntax unified
 1598              		.thumb
 1599              		.thumb_func
 1601              	i2c_read_last3byte_std:
 1602              	.LFB50:
 768:./i2c/i2c-std.c **** //-------------------------------------------------------------------------------------------------
 769:./i2c/i2c-std.c ****  uint8_t i2c_read_last3byte_std(I2C_TypeDef* I2CX,uint8_t *buf)
 770:./i2c/i2c-std.c ****  {
 1603              		.loc 2 770 2
 1604              		.cfi_startproc
 1605              		@ args = 0, pretend = 0, frame = 16
 1606              		@ frame_needed = 1, uses_anonymous_args = 0
 1607 0000 80B5     		push	{r7, lr}
 1608              	.LCFI102:
 1609              		.cfi_def_cfa_offset 8
 1610              		.cfi_offset 7, -8
 1611              		.cfi_offset 14, -4
 1612 0002 84B0     		sub	sp, sp, #16
 1613              	.LCFI103:
 1614              		.cfi_def_cfa_offset 24
 1615 0004 00AF     		add	r7, sp, #0
 1616              	.LCFI104:
 1617              		.cfi_def_cfa_register 7
 1618 0006 7860     		str	r0, [r7, #4]
 1619 0008 3960     		str	r1, [r7]
 771:./i2c/i2c-std.c ****   uint8_t error=0;
 1620              		.loc 2 771 11
 1621 000a 0023     		movs	r3, #0
 1622 000c FB73     		strb	r3, [r7, #15]
 772:./i2c/i2c-std.c ****   volatile uint32_t Timeout=0xfffff;
 1623              		.loc 2 772 21
 1624 000e 2E4B     		ldr	r3, .L91
 1625 0010 BB60     		str	r3, [r7, #8]
 773:./i2c/i2c-std.c ****   // Clear ADDR flag
 774:./i2c/i2c-std.c ****   // _I2C_CLEAR_ADDRFLAG(I2CX);//(void) I2CX ->SR1;(void) I2CX ->SR2; 
 775:./i2c/i2c-std.c ****    error=i2c_wait_read_byte_btf_std(I2CX);
 1626              		.loc 2 775 10
 1627 0012 7868     		ldr	r0, [r7, #4]
 1628 0014 FFF7FEFF 		bl	i2c_wait_read_byte_btf_std
 1629 0018 0346     		mov	r3, r0
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s 			page 64


 1630 001a FB73     		strb	r3, [r7, #15]
 776:./i2c/i2c-std.c ****    if(error!=I2C_OK)
 1631              		.loc 2 776 6
 1632 001c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1633 001e 002B     		cmp	r3, #0
 1634 0020 01D0     		beq	.L87
 777:./i2c/i2c-std.c ****       return error;
 1635              		.loc 2 777 14
 1636 0022 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1637 0024 4CE0     		b	.L88
 1638              	.L87:
 778:./i2c/i2c-std.c **** // EV7_2 -- Figure 1 has an error , doesn 't read N-2 !
 779:./i2c/i2c-std.c ****     /* Disable Acknowledge */
 780:./i2c/i2c-std.c ****     CLEAR_BIT(I2CX->CR1,I2C_CR1_ACK);  //I2C_AcknowledgeConfig(I2CX , DISABLE); // clear ack bit
 1639              		.loc 2 780 5
 1640 0026 7B68     		ldr	r3, [r7, #4]
 1641 0028 1B88     		ldrh	r3, [r3]	@ movhi
 1642 002a 9BB2     		uxth	r3, r3
 1643 002c 23F48063 		bic	r3, r3, #1024
 1644 0030 9AB2     		uxth	r2, r3
 1645 0032 7B68     		ldr	r3, [r7, #4]
 1646 0034 1A80     		strh	r2, [r3]	@ movhi
 781:./i2c/i2c-std.c **** 
 782:./i2c/i2c-std.c **** /*
 783:./i2c/i2c-std.c **** __disable_irq ();
 784:./i2c/i2c-std.c ****   *buf++=I2CX->DR; // receive byte N-2
 785:./i2c/i2c-std.c ****  // Generate Stop 
 786:./i2c/i2c-std.c ****   SET_BIT(I2CX->CR1,I2C_CR1_STOP); //I2C_GenerateSTOP(I2CX ,ENABLE); // program stop
 787:./i2c/i2c-std.c **** __enable_irq ();
 788:./i2c/i2c-std.c **** 
 789:./i2c/i2c-std.c **** *buf++ = I2CX->DR;  // receive byte N-1
 790:./i2c/i2c-std.c **** // wait for byte N
 791:./i2c/i2c-std.c **** // Receive data EV7
 792:./i2c/i2c-std.c **** error=i2c_wait_read_byte_rxne_std(I2CX);
 793:./i2c/i2c-std.c ****   if(error)  // I2C_EVENT_MASTER_BYTE_RECEIVED:: BUSY, MSL and RXNE flags 
 794:./i2c/i2c-std.c ****     return error;
 795:./i2c/i2c-std.c ****  *buf++ = I2CX->DR;
 796:./i2c/i2c-std.c ****  return I2C_OK; 
 797:./i2c/i2c-std.c ****  */
 798:./i2c/i2c-std.c **** 
 799:./i2c/i2c-std.c **** /* Disable all active IRQs around ADDR clearing and STOP programming because the EV6_3
 800:./i2c/i2c-std.c ****              software sequence must complete before the current byte end of transfer */
 801:./i2c/i2c-std.c **** __disable_irq ();
 1647              		.loc 2 801 1
 1648 0036 FFF7FEFF 		bl	__disable_irq
 802:./i2c/i2c-std.c ****   *buf=I2CX->DR; // receive byte N-2
 1649              		.loc 2 802 12
 1650 003a 7B68     		ldr	r3, [r7, #4]
 1651 003c 1B8A     		ldrh	r3, [r3, #16]	@ movhi
 1652 003e 9BB2     		uxth	r3, r3
 1653              		.loc 2 802 7
 1654 0040 DAB2     		uxtb	r2, r3
 1655 0042 3B68     		ldr	r3, [r7]
 1656 0044 1A70     		strb	r2, [r3]
 803:./i2c/i2c-std.c ****    buf++;
 1657              		.loc 2 803 7
 1658 0046 3B68     		ldr	r3, [r7]
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s 			page 65


 1659 0048 0133     		adds	r3, r3, #1
 1660 004a 3B60     		str	r3, [r7]
 804:./i2c/i2c-std.c ****    Timeout=I2C_MAX_WAIT_TIME *(SystemCoreClock / 25U / 1000U);
 1661              		.loc 2 804 54
 1662 004c 1F4B     		ldr	r3, .L91+4
 1663 004e 1B68     		ldr	r3, [r3]
 1664 0050 DB08     		lsrs	r3, r3, #3
 1665 0052 1F4A     		ldr	r2, .L91+8
 1666 0054 A2FB0323 		umull	r2, r3, r2, r3
 1667 0058 1B0A     		lsrs	r3, r3, #8
 1668              		.loc 2 804 30
 1669 005a 40F6AC52 		movw	r2, #3500
 1670 005e 02FB03F3 		mul	r3, r2, r3
 1671              		.loc 2 804 11
 1672 0062 BB60     		str	r3, [r7, #8]
 805:./i2c/i2c-std.c ****     while(bits_is_clear(I2CX->SR1,I2C_SR1_BTF))//bits_is_clear(I2CX->SR1,I2C_SR1_BTF)) //I2C_GetFla
 1673              		.loc 2 805 10
 1674 0064 08E0     		b	.L89
 1675              	.L90:
 806:./i2c/i2c-std.c ****     if(Timeout--==0)  
 1676              		.loc 2 806 15
 1677 0066 BB68     		ldr	r3, [r7, #8]
 1678 0068 5A1E     		subs	r2, r3, #1
 1679 006a BA60     		str	r2, [r7, #8]
 1680              		.loc 2 806 7
 1681 006c 002B     		cmp	r3, #0
 1682 006e 03D1     		bne	.L89
 807:./i2c/i2c-std.c ****     {
 808:./i2c/i2c-std.c ****       __enable_irq();
 1683              		.loc 2 808 7
 1684 0070 FFF7FEFF 		bl	__enable_irq
 809:./i2c/i2c-std.c ****       // set the error then exit ::I2C_RX_RXNE_ERROR
 810:./i2c/i2c-std.c ****         return I2C_RX_BTF_ERROR;
 1685              		.loc 2 810 16
 1686 0074 0923     		movs	r3, #9
 1687 0076 23E0     		b	.L88
 1688              	.L89:
 805:./i2c/i2c-std.c ****     if(Timeout--==0)  
 1689              		.loc 2 805 11
 1690 0078 7B68     		ldr	r3, [r7, #4]
 1691 007a 9B8A     		ldrh	r3, [r3, #20]	@ movhi
 1692 007c 9BB2     		uxth	r3, r3
 1693 007e 03F00403 		and	r3, r3, #4
 805:./i2c/i2c-std.c ****     if(Timeout--==0)  
 1694              		.loc 2 805 10
 1695 0082 002B     		cmp	r3, #0
 1696 0084 EFD0     		beq	.L90
 811:./i2c/i2c-std.c ****     }
 812:./i2c/i2c-std.c ****  // Generate Stop 
 813:./i2c/i2c-std.c ****   SET_BIT(I2CX->CR1,I2C_CR1_STOP); 
 1697              		.loc 2 813 3
 1698 0086 7B68     		ldr	r3, [r7, #4]
 1699 0088 1B88     		ldrh	r3, [r3]	@ movhi
 1700 008a 9BB2     		uxth	r3, r3
 1701 008c 43F40073 		orr	r3, r3, #512
 1702 0090 9AB2     		uxth	r2, r3
 1703 0092 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s 			page 66


 1704 0094 1A80     		strh	r2, [r3]	@ movhi
 814:./i2c/i2c-std.c ****   *buf=I2CX->DR; // receive byte N-1
 1705              		.loc 2 814 12
 1706 0096 7B68     		ldr	r3, [r7, #4]
 1707 0098 1B8A     		ldrh	r3, [r3, #16]	@ movhi
 1708 009a 9BB2     		uxth	r3, r3
 1709              		.loc 2 814 7
 1710 009c DAB2     		uxtb	r2, r3
 1711 009e 3B68     		ldr	r3, [r7]
 1712 00a0 1A70     		strb	r2, [r3]
 815:./i2c/i2c-std.c ****    buf++;
 1713              		.loc 2 815 7
 1714 00a2 3B68     		ldr	r3, [r7]
 1715 00a4 0133     		adds	r3, r3, #1
 1716 00a6 3B60     		str	r3, [r7]
 816:./i2c/i2c-std.c ****   /* Re-enable IRQs */        
 817:./i2c/i2c-std.c ****   __enable_irq();
 1717              		.loc 2 817 3
 1718 00a8 FFF7FEFF 		bl	__enable_irq
 818:./i2c/i2c-std.c **** 
 819:./i2c/i2c-std.c ****   *buf=I2CX->DR; // receive byte N-1
 1719              		.loc 2 819 12
 1720 00ac 7B68     		ldr	r3, [r7, #4]
 1721 00ae 1B8A     		ldrh	r3, [r3, #16]	@ movhi
 1722 00b0 9BB2     		uxth	r3, r3
 1723              		.loc 2 819 7
 1724 00b2 DAB2     		uxtb	r2, r3
 1725 00b4 3B68     		ldr	r3, [r7]
 1726 00b6 1A70     		strb	r2, [r3]
 820:./i2c/i2c-std.c ****    buf++;
 1727              		.loc 2 820 7
 1728 00b8 3B68     		ldr	r3, [r7]
 1729 00ba 0133     		adds	r3, r3, #1
 1730 00bc 3B60     		str	r3, [r7]
 821:./i2c/i2c-std.c ****    return I2C_OK;
 1731              		.loc 2 821 11
 1732 00be 0023     		movs	r3, #0
 1733              	.L88:
 822:./i2c/i2c-std.c **** }
 1734              		.loc 2 822 1
 1735 00c0 1846     		mov	r0, r3
 1736 00c2 1037     		adds	r7, r7, #16
 1737              	.LCFI105:
 1738              		.cfi_def_cfa_offset 8
 1739 00c4 BD46     		mov	sp, r7
 1740              	.LCFI106:
 1741              		.cfi_def_cfa_register 13
 1742              		@ sp needed
 1743 00c6 80BD     		pop	{r7, pc}
 1744              	.L92:
 1745              		.align	2
 1746              	.L91:
 1747 00c8 FFFF0F00 		.word	1048575
 1748 00cc 00000000 		.word	SystemCoreClock
 1749 00d0 89B5F814 		.word	351843721
 1750              		.cfi_endproc
 1751              	.LFE50:
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s 			page 67


 1753              		.section	.text.i2c_read_nbyte_std,"ax",%progbits
 1754              		.align	1
 1755              		.syntax unified
 1756              		.thumb
 1757              		.thumb_func
 1759              	i2c_read_nbyte_std:
 1760              	.LFB51:
 823:./i2c/i2c-std.c **** //-------------------------------------------------------------------------------------------------
 824:./i2c/i2c-std.c **** /**
 825:./i2c/i2c-std.c ****  * @brief 
 826:./i2c/i2c-std.c ****  * 
 827:./i2c/i2c-std.c ****  * @param I2CX 
 828:./i2c/i2c-std.c ****  * @param data 
 829:./i2c/i2c-std.c ****  * @param ack 
 830:./i2c/i2c-std.c ****  * @return uint8_t 
 831:./i2c/i2c-std.c ****  */
 832:./i2c/i2c-std.c **** uint8_t i2c_read_nbyte_std(I2C_TypeDef* I2CX,uint8_t *buf,uint16_t n)
 833:./i2c/i2c-std.c **** {
 1761              		.loc 2 833 1
 1762              		.cfi_startproc
 1763              		@ args = 0, pretend = 0, frame = 32
 1764              		@ frame_needed = 1, uses_anonymous_args = 0
 1765 0000 80B5     		push	{r7, lr}
 1766              	.LCFI107:
 1767              		.cfi_def_cfa_offset 8
 1768              		.cfi_offset 7, -8
 1769              		.cfi_offset 14, -4
 1770 0002 88B0     		sub	sp, sp, #32
 1771              	.LCFI108:
 1772              		.cfi_def_cfa_offset 40
 1773 0004 00AF     		add	r7, sp, #0
 1774              	.LCFI109:
 1775              		.cfi_def_cfa_register 7
 1776 0006 F860     		str	r0, [r7, #12]
 1777 0008 B960     		str	r1, [r7, #8]
 1778 000a 1346     		mov	r3, r2
 1779 000c FB80     		strh	r3, [r7, #6]	@ movhi
 834:./i2c/i2c-std.c ****     uint8_t error=0;    
 1780              		.loc 2 834 13
 1781 000e 0023     		movs	r3, #0
 1782 0010 7B77     		strb	r3, [r7, #29]
 835:./i2c/i2c-std.c ****     if(n==0) 
 1783              		.loc 2 835 7
 1784 0012 FB88     		ldrh	r3, [r7, #6]
 1785 0014 002B     		cmp	r3, #0
 1786 0016 14D1     		bne	.L94
 1787              	.LBB7:
 836:./i2c/i2c-std.c ****     {      
 837:./i2c/i2c-std.c ****       /* Clear ADDR flag */
 838:./i2c/i2c-std.c ****       _I2C_CLEAR_ADDRFLAG(I2CX);
 1788              		.loc 2 838 7
 1789 0018 0023     		movs	r3, #0
 1790 001a BB61     		str	r3, [r7, #24]
 1791 001c FB68     		ldr	r3, [r7, #12]
 1792 001e 9B8A     		ldrh	r3, [r3, #20]	@ movhi
 1793 0020 9BB2     		uxth	r3, r3
 1794 0022 BB61     		str	r3, [r7, #24]
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s 			page 68


 1795 0024 FB68     		ldr	r3, [r7, #12]
 1796 0026 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 1797 0028 9BB2     		uxth	r3, r3
 1798 002a BB61     		str	r3, [r7, #24]
 1799 002c BB69     		ldr	r3, [r7, #24]
 1800              	.LBE7:
 839:./i2c/i2c-std.c **** 
 840:./i2c/i2c-std.c ****       /* Generate Stop */
 841:./i2c/i2c-std.c ****       SET_BIT(I2CX->CR1, I2C_CR1_STOP);
 1801              		.loc 2 841 7
 1802 002e FB68     		ldr	r3, [r7, #12]
 1803 0030 1B88     		ldrh	r3, [r3]	@ movhi
 1804 0032 9BB2     		uxth	r3, r3
 1805 0034 43F40073 		orr	r3, r3, #512
 1806 0038 9AB2     		uxth	r2, r3
 1807 003a FB68     		ldr	r3, [r7, #12]
 1808 003c 1A80     		strh	r2, [r3]	@ movhi
 842:./i2c/i2c-std.c ****       return I2C_OK;
 1809              		.loc 2 842 14
 1810 003e 0023     		movs	r3, #0
 1811 0040 67E0     		b	.L95
 1812              	.L94:
 843:./i2c/i2c-std.c ****     }
 844:./i2c/i2c-std.c **** 
 845:./i2c/i2c-std.c ****     if(n==1) return i2c_read_lastbyte_std(I2CX,buf);
 1813              		.loc 2 845 7
 1814 0042 FB88     		ldrh	r3, [r7, #6]
 1815 0044 012B     		cmp	r3, #1
 1816 0046 05D1     		bne	.L96
 1817              		.loc 2 845 21 discriminator 1
 1818 0048 B968     		ldr	r1, [r7, #8]
 1819 004a F868     		ldr	r0, [r7, #12]
 1820 004c FFF7FEFF 		bl	i2c_read_lastbyte_std
 1821 0050 0346     		mov	r3, r0
 1822 0052 5EE0     		b	.L95
 1823              	.L96:
 846:./i2c/i2c-std.c ****     if(n==2) return i2c_read_last2byte_std(I2CX,buf);
 1824              		.loc 2 846 7
 1825 0054 FB88     		ldrh	r3, [r7, #6]
 1826 0056 022B     		cmp	r3, #2
 1827 0058 05D1     		bne	.L97
 1828              		.loc 2 846 21 discriminator 1
 1829 005a B968     		ldr	r1, [r7, #8]
 1830 005c F868     		ldr	r0, [r7, #12]
 1831 005e FFF7FEFF 		bl	i2c_read_last2byte_std
 1832 0062 0346     		mov	r3, r0
 1833 0064 55E0     		b	.L95
 1834              	.L97:
 847:./i2c/i2c-std.c ****      
 848:./i2c/i2c-std.c ****     // clear POS flag
 849:./i2c/i2c-std.c ****      CLEAR_BIT(I2CX->CR1,I2C_CR1_POS); 
 1835              		.loc 2 849 6
 1836 0066 FB68     		ldr	r3, [r7, #12]
 1837 0068 1B88     		ldrh	r3, [r3]	@ movhi
 1838 006a 9BB2     		uxth	r3, r3
 1839 006c 23F40063 		bic	r3, r3, #2048
 1840 0070 9AB2     		uxth	r2, r3
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s 			page 69


 1841 0072 FB68     		ldr	r3, [r7, #12]
 1842 0074 1A80     		strh	r2, [r3]	@ movhi
 850:./i2c/i2c-std.c ****      /* Enable Acknowledge */
 851:./i2c/i2c-std.c ****       SET_BIT(I2CX->CR1,I2C_CR1_ACK);
 1843              		.loc 2 851 7
 1844 0076 FB68     		ldr	r3, [r7, #12]
 1845 0078 1B88     		ldrh	r3, [r3]	@ movhi
 1846 007a 9BB2     		uxth	r3, r3
 1847 007c 43F48063 		orr	r3, r3, #1024
 1848 0080 9AB2     		uxth	r2, r3
 1849 0082 FB68     		ldr	r3, [r7, #12]
 1850 0084 1A80     		strh	r2, [r3]	@ movhi
 1851              	.LBB8:
 852:./i2c/i2c-std.c ****       /* Clear ADDR flag */
 853:./i2c/i2c-std.c ****       _I2C_CLEAR_ADDRFLAG(I2CX);
 1852              		.loc 2 853 7
 1853 0086 0023     		movs	r3, #0
 1854 0088 7B61     		str	r3, [r7, #20]
 1855 008a FB68     		ldr	r3, [r7, #12]
 1856 008c 9B8A     		ldrh	r3, [r3, #20]	@ movhi
 1857 008e 9BB2     		uxth	r3, r3
 1858 0090 7B61     		str	r3, [r7, #20]
 1859 0092 FB68     		ldr	r3, [r7, #12]
 1860 0094 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 1861 0096 9BB2     		uxth	r3, r3
 1862 0098 7B61     		str	r3, [r7, #20]
 1863 009a 7B69     		ldr	r3, [r7, #20]
 1864              	.LBE8:
 854:./i2c/i2c-std.c **** 
 855:./i2c/i2c-std.c ****     if(n>3)
 1865              		.loc 2 855 7
 1866 009c FB88     		ldrh	r3, [r7, #6]
 1867 009e 032B     		cmp	r3, #3
 1868 00a0 2ED9     		bls	.L98
 1869              	.LBB9:
 856:./i2c/i2c-std.c ****     {
 857:./i2c/i2c-std.c ****       for (uint16_t i = 0; i < n-3; i++) 
 1870              		.loc 2 857 21
 1871 00a2 0023     		movs	r3, #0
 1872 00a4 FB83     		strh	r3, [r7, #30]	@ movhi
 1873              		.loc 2 857 7
 1874 00a6 26E0     		b	.L99
 1875              	.L102:
 858:./i2c/i2c-std.c ****        {
 859:./i2c/i2c-std.c ****             // EV7 -- cannot guarantee 1 transfer completion time ,
 860:./i2c/i2c-std.c ****             // wait for BTF instead of RXNE
 861:./i2c/i2c-std.c ****             error=i2c_wait_read_byte_rxne_std(I2CX);
 1876              		.loc 2 861 19
 1877 00a8 F868     		ldr	r0, [r7, #12]
 1878 00aa FFF7FEFF 		bl	i2c_wait_read_byte_rxne_std
 1879 00ae 0346     		mov	r3, r0
 1880 00b0 7B77     		strb	r3, [r7, #29]
 862:./i2c/i2c-std.c ****             if(error!=I2C_OK)
 1881              		.loc 2 862 15
 1882 00b2 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 1883 00b4 002B     		cmp	r3, #0
 1884 00b6 01D0     		beq	.L100
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s 			page 70


 863:./i2c/i2c-std.c ****                 return error;
 1885              		.loc 2 863 24
 1886 00b8 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 1887 00ba 2AE0     		b	.L95
 1888              	.L100:
 864:./i2c/i2c-std.c ****               buf[i] = I2CX->DR;
 1889              		.loc 2 864 28
 1890 00bc FB68     		ldr	r3, [r7, #12]
 1891 00be 1B8A     		ldrh	r3, [r3, #16]	@ movhi
 1892 00c0 99B2     		uxth	r1, r3
 1893              		.loc 2 864 18
 1894 00c2 FB8B     		ldrh	r3, [r7, #30]
 1895 00c4 BA68     		ldr	r2, [r7, #8]
 1896 00c6 1344     		add	r3, r3, r2
 1897              		.loc 2 864 22
 1898 00c8 CAB2     		uxtb	r2, r1
 1899 00ca 1A70     		strb	r2, [r3]
 865:./i2c/i2c-std.c ****            if(bits_is_set(I2CX->SR1,I2C_SR1_BTF))//__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 1900              		.loc 2 865 15
 1901 00cc FB68     		ldr	r3, [r7, #12]
 1902 00ce 9B8A     		ldrh	r3, [r3, #20]	@ movhi
 1903 00d0 9BB2     		uxth	r3, r3
 1904 00d2 03F00403 		and	r3, r3, #4
 1905              		.loc 2 865 14
 1906 00d6 002B     		cmp	r3, #0
 1907 00d8 0AD0     		beq	.L101
 866:./i2c/i2c-std.c ****             {
 867:./i2c/i2c-std.c ****               /* Read data from DR */
 868:./i2c/i2c-std.c ****               i++;
 1908              		.loc 2 868 16
 1909 00da FB8B     		ldrh	r3, [r7, #30]
 1910 00dc 0133     		adds	r3, r3, #1
 1911 00de FB83     		strh	r3, [r7, #30]	@ movhi
 869:./i2c/i2c-std.c ****               buf[i] = I2CX->DR;
 1912              		.loc 2 869 28
 1913 00e0 FB68     		ldr	r3, [r7, #12]
 1914 00e2 1B8A     		ldrh	r3, [r3, #16]	@ movhi
 1915 00e4 99B2     		uxth	r1, r3
 1916              		.loc 2 869 18
 1917 00e6 FB8B     		ldrh	r3, [r7, #30]
 1918 00e8 BA68     		ldr	r2, [r7, #8]
 1919 00ea 1344     		add	r3, r3, r2
 1920              		.loc 2 869 22
 1921 00ec CAB2     		uxtb	r2, r1
 1922 00ee 1A70     		strb	r2, [r3]
 1923              	.L101:
 857:./i2c/i2c-std.c ****        {
 1924              		.loc 2 857 38 discriminator 2
 1925 00f0 FB8B     		ldrh	r3, [r7, #30]
 1926 00f2 0133     		adds	r3, r3, #1
 1927 00f4 FB83     		strh	r3, [r7, #30]	@ movhi
 1928              	.L99:
 857:./i2c/i2c-std.c ****        {
 1929              		.loc 2 857 30 discriminator 1
 1930 00f6 FA8B     		ldrh	r2, [r7, #30]
 857:./i2c/i2c-std.c ****        {
 1931              		.loc 2 857 33 discriminator 1
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s 			page 71


 1932 00f8 FB88     		ldrh	r3, [r7, #6]
 1933 00fa 033B     		subs	r3, r3, #3
 857:./i2c/i2c-std.c ****        {
 1934              		.loc 2 857 7 discriminator 1
 1935 00fc 9A42     		cmp	r2, r3
 1936 00fe D3DB     		blt	.L102
 1937              	.L98:
 1938              	.LBE9:
 870:./i2c/i2c-std.c ****             }
 871:./i2c/i2c-std.c **** 
 872:./i2c/i2c-std.c ****        }
 873:./i2c/i2c-std.c ****     }
 874:./i2c/i2c-std.c ****   
 875:./i2c/i2c-std.c ****     return i2c_read_last3byte_std(I2CX,(uint8_t *) &buf[n-3]);
 1939              		.loc 2 875 56
 1940 0100 FB88     		ldrh	r3, [r7, #6]
 1941 0102 033B     		subs	r3, r3, #3
 1942              		.loc 2 875 12
 1943 0104 BA68     		ldr	r2, [r7, #8]
 1944 0106 1344     		add	r3, r3, r2
 1945 0108 1946     		mov	r1, r3
 1946 010a F868     		ldr	r0, [r7, #12]
 1947 010c FFF7FEFF 		bl	i2c_read_last3byte_std
 1948 0110 0346     		mov	r3, r0
 1949              	.L95:
 876:./i2c/i2c-std.c **** }
 1950              		.loc 2 876 1
 1951 0112 1846     		mov	r0, r3
 1952 0114 2037     		adds	r7, r7, #32
 1953              	.LCFI110:
 1954              		.cfi_def_cfa_offset 8
 1955 0116 BD46     		mov	sp, r7
 1956              	.LCFI111:
 1957              		.cfi_def_cfa_register 13
 1958              		@ sp needed
 1959 0118 80BD     		pop	{r7, pc}
 1960              		.cfi_endproc
 1961              	.LFE51:
 1963              		.section	.text.i2c_init_std,"ax",%progbits
 1964              		.align	1
 1965              		.global	i2c_init_std
 1966              		.syntax unified
 1967              		.thumb
 1968              		.thumb_func
 1970              	i2c_init_std:
 1971              	.LFB52:
 877:./i2c/i2c-std.c **** //-------------------------------------------------------------------------------------------------
 878:./i2c/i2c-std.c **** 
 879:./i2c/i2c-std.c **** //********************************************************************************************
 880:./i2c/i2c-std.c **** //
 881:./i2c/i2c-std.c **** //  extern i2c Methods defnitions using standard peripheral library
 882:./i2c/i2c-std.c **** //
 883:./i2c/i2c-std.c **** //********************************************************************************************
 884:./i2c/i2c-std.c **** void i2c_init_std(I2C_TypeDef* I2CX, uint32_t clock_speed,uint16_t ownaddress)
 885:./i2c/i2c-std.c **** {
 1972              		.loc 2 885 1
 1973              		.cfi_startproc
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s 			page 72


 1974              		@ args = 0, pretend = 0, frame = 40
 1975              		@ frame_needed = 1, uses_anonymous_args = 0
 1976 0000 80B5     		push	{r7, lr}
 1977              	.LCFI112:
 1978              		.cfi_def_cfa_offset 8
 1979              		.cfi_offset 7, -8
 1980              		.cfi_offset 14, -4
 1981 0002 8AB0     		sub	sp, sp, #40
 1982              	.LCFI113:
 1983              		.cfi_def_cfa_offset 48
 1984 0004 00AF     		add	r7, sp, #0
 1985              	.LCFI114:
 1986              		.cfi_def_cfa_register 7
 1987 0006 F860     		str	r0, [r7, #12]
 1988 0008 B960     		str	r1, [r7, #8]
 1989 000a 1346     		mov	r3, r2
 1990 000c FB80     		strh	r3, [r7, #6]	@ movhi
 886:./i2c/i2c-std.c ****     GPIO_InitTypeDef _gpio_init_struct;
 887:./i2c/i2c-std.c ****     I2C_InitTypeDef _i2c_init_struct;
 888:./i2c/i2c-std.c ****   
 889:./i2c/i2c-std.c ****  /*1. Enable the Clock  the AFIO/GPIO Modules using RCC_APB2PeriphClockCmd*/
 890:./i2c/i2c-std.c ****     RCC_APB2PeriphClockCmd(RCC_APB2Periph_AFIO| RCC_APB2Periph_GPIOB,ENABLE);
 1991              		.loc 2 890 5
 1992 000e 0121     		movs	r1, #1
 1993 0010 0920     		movs	r0, #9
 1994 0012 FFF7FEFF 		bl	RCC_APB2PeriphClockCmd
 891:./i2c/i2c-std.c ****     
 892:./i2c/i2c-std.c **** 
 893:./i2c/i2c-std.c ****  /* 1.,2. Enable the Clock  the I2Cx Modules  and its GPIO pins mode */
 894:./i2c/i2c-std.c ****     if(I2CX==I2C1)  
 1995              		.loc 2 894 7
 1996 0016 FB68     		ldr	r3, [r7, #12]
 1997 0018 404A     		ldr	r2, .L106
 1998 001a 9342     		cmp	r3, r2
 1999 001c 22D1     		bne	.L104
 895:./i2c/i2c-std.c ****     {
 896:./i2c/i2c-std.c ****     /*Enable the Clock  the AFIO/GPIO Modules using RCC_APB2PeriphClockCmd*/
 897:./i2c/i2c-std.c ****      RCC_APB1PeriphClockCmd(RCC_APB1Periph_I2C1,ENABLE);
 2000              		.loc 2 897 6
 2001 001e 0121     		movs	r1, #1
 2002 0020 4FF40010 		mov	r0, #2097152
 2003 0024 FFF7FEFF 		bl	RCC_APB1PeriphClockCmd
 898:./i2c/i2c-std.c ****     /* Configure the pins required by the Module (AFIO_OUT or INPUT, ANALOG...) & remap incase of r
 899:./i2c/i2c-std.c ****       GPIO_StructInit((GPIO_InitTypeDef*)& _gpio_init_struct);      
 2004              		.loc 2 899 7
 2005 0028 07F12403 		add	r3, r7, #36
 2006 002c 1846     		mov	r0, r3
 2007 002e FFF7FEFF 		bl	GPIO_StructInit
 900:./i2c/i2c-std.c ****       // I2C1_SCL=PB6,I2C1_SDA=PB7
 901:./i2c/i2c-std.c ****      _gpio_init_struct.GPIO_Pin=GPIO_Pin_6 | GPIO_Pin_7;
 2008              		.loc 2 901 32
 2009 0032 C023     		movs	r3, #192
 2010 0034 BB84     		strh	r3, [r7, #36]	@ movhi
 902:./i2c/i2c-std.c ****      _gpio_init_struct.GPIO_Speed=GPIO_Speed_50MHz;
 2011              		.loc 2 902 34
 2012 0036 0323     		movs	r3, #3
 2013 0038 87F82630 		strb	r3, [r7, #38]
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s 			page 73


 903:./i2c/i2c-std.c ****      _gpio_init_struct.GPIO_Mode=GPIO_Mode_AF_OD;
 2014              		.loc 2 903 33
 2015 003c 1C23     		movs	r3, #28
 2016 003e 87F82730 		strb	r3, [r7, #39]
 904:./i2c/i2c-std.c ****       GPIO_Init(GPIOB,&_gpio_init_struct);
 2017              		.loc 2 904 7
 2018 0042 07F12403 		add	r3, r7, #36
 2019 0046 1946     		mov	r1, r3
 2020 0048 3548     		ldr	r0, .L106+4
 2021 004a FFF7FEFF 		bl	GPIO_Init
 905:./i2c/i2c-std.c **** 
 906:./i2c/i2c-std.c ****     /* I2C1 Hardware reset/set of the module */
 907:./i2c/i2c-std.c ****      RCC_APB1PeriphResetCmd(RCC_APB1Periph_I2C1,ENABLE);
 2022              		.loc 2 907 6
 2023 004e 0121     		movs	r1, #1
 2024 0050 4FF40010 		mov	r0, #2097152
 2025 0054 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 908:./i2c/i2c-std.c ****      RCC_APB1PeriphResetCmd(RCC_APB1Periph_I2C1,DISABLE);
 2026              		.loc 2 908 6
 2027 0058 0021     		movs	r1, #0
 2028 005a 4FF40010 		mov	r0, #2097152
 2029 005e FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 2030 0062 22E0     		b	.L105
 2031              	.L104:
 909:./i2c/i2c-std.c ****     }
 910:./i2c/i2c-std.c ****     else
 911:./i2c/i2c-std.c ****     { //I2C2
 912:./i2c/i2c-std.c ****             /*Enable the Clock  the AFIO/GPIO Modules using RCC_APB2PeriphClockCmd*/
 913:./i2c/i2c-std.c ****      RCC_APB1PeriphClockCmd(RCC_APB1Periph_I2C2,ENABLE);
 2032              		.loc 2 913 6
 2033 0064 0121     		movs	r1, #1
 2034 0066 4FF48000 		mov	r0, #4194304
 2035 006a FFF7FEFF 		bl	RCC_APB1PeriphClockCmd
 914:./i2c/i2c-std.c ****     /* Configure the pins required by the Module (AFIO_OUT or INPUT, ANALOG...) & remap incase of r
 915:./i2c/i2c-std.c ****       GPIO_StructInit((GPIO_InitTypeDef*)& _gpio_init_struct);      
 2036              		.loc 2 915 7
 2037 006e 07F12403 		add	r3, r7, #36
 2038 0072 1846     		mov	r0, r3
 2039 0074 FFF7FEFF 		bl	GPIO_StructInit
 916:./i2c/i2c-std.c ****       // I2C2_SCL=PB10,I2C2_SDA=PB11
 917:./i2c/i2c-std.c ****      _gpio_init_struct.GPIO_Pin=GPIO_Pin_10 | GPIO_Pin_11;
 2040              		.loc 2 917 32
 2041 0078 4FF44063 		mov	r3, #3072
 2042 007c BB84     		strh	r3, [r7, #36]	@ movhi
 918:./i2c/i2c-std.c ****      _gpio_init_struct.GPIO_Speed=GPIO_Speed_50MHz;
 2043              		.loc 2 918 34
 2044 007e 0323     		movs	r3, #3
 2045 0080 87F82630 		strb	r3, [r7, #38]
 919:./i2c/i2c-std.c ****      _gpio_init_struct.GPIO_Mode=GPIO_Mode_AF_OD;
 2046              		.loc 2 919 33
 2047 0084 1C23     		movs	r3, #28
 2048 0086 87F82730 		strb	r3, [r7, #39]
 920:./i2c/i2c-std.c ****       GPIO_Init(GPIOB,&_gpio_init_struct);
 2049              		.loc 2 920 7
 2050 008a 07F12403 		add	r3, r7, #36
 2051 008e 1946     		mov	r1, r3
 2052 0090 2348     		ldr	r0, .L106+4
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s 			page 74


 2053 0092 FFF7FEFF 		bl	GPIO_Init
 921:./i2c/i2c-std.c **** 
 922:./i2c/i2c-std.c ****     /* I2C2 Hardware reset/set of the module */
 923:./i2c/i2c-std.c ****      RCC_APB1PeriphResetCmd(RCC_APB1Periph_I2C2,ENABLE);
 2054              		.loc 2 923 6
 2055 0096 0121     		movs	r1, #1
 2056 0098 4FF48000 		mov	r0, #4194304
 2057 009c FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 924:./i2c/i2c-std.c ****      RCC_APB1PeriphResetCmd(RCC_APB1Periph_I2C2,DISABLE);
 2058              		.loc 2 924 6
 2059 00a0 0021     		movs	r1, #0
 2060 00a2 4FF48000 		mov	r0, #4194304
 2061 00a6 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 2062              	.L105:
 925:./i2c/i2c-std.c ****     }
 926:./i2c/i2c-std.c ****   /* 3. Configure the peripheral hardware interrupt @ level of  NVIC  link to IRQ and set priority 
 927:./i2c/i2c-std.c ****   /*   NVIC_InitTypeDef NVIC_InitStruct;
 928:./i2c/i2c-std.c ****      NVIC_InitStruct.NVIC_IRQChannel=I2C1_EV_IRQn;
 929:./i2c/i2c-std.c ****      NVIC_InitStruct.NVIC_IRQChannelPreemptionPriority=0;
 930:./i2c/i2c-std.c ****      NVIC_InitStruct.NVIC_IRQChannelSubPriority=9;
 931:./i2c/i2c-std.c ****      NVIC_InitStruct.NVIC_IRQChannelCmd=ENABLE;
 932:./i2c/i2c-std.c ****      NVIC_Init((NVIC_InitTypeDef*) &NVIC_InitStruct);
 933:./i2c/i2c-std.c ****   */
 934:./i2c/i2c-std.c **** /* 4.  the peripheral hardware  of the I2C */
 935:./i2c/i2c-std.c ****     I2C_StructInit((I2C_InitTypeDef *)& _i2c_init_struct);
 2063              		.loc 2 935 5
 2064 00aa 07F11403 		add	r3, r7, #20
 2065 00ae 1846     		mov	r0, r3
 2066 00b0 FFF7FEFF 		bl	I2C_StructInit
 936:./i2c/i2c-std.c ****     _i2c_init_struct.I2C_Mode=I2C_Mode_I2C ;
 2067              		.loc 2 936 30
 2068 00b4 0023     		movs	r3, #0
 2069 00b6 3B83     		strh	r3, [r7, #24]	@ movhi
 937:./i2c/i2c-std.c ****     _i2c_init_struct.I2C_DutyCycle=I2C_DutyCycle_2;
 2070              		.loc 2 937 35
 2071 00b8 4BF6FF73 		movw	r3, #49151
 2072 00bc 7B83     		strh	r3, [r7, #26]	@ movhi
 938:./i2c/i2c-std.c ****     _i2c_init_struct.I2C_Ack=I2C_Ack_Enable;
 2073              		.loc 2 938 29
 2074 00be 4FF48063 		mov	r3, #1024
 2075 00c2 FB83     		strh	r3, [r7, #30]	@ movhi
 939:./i2c/i2c-std.c ****     _i2c_init_struct.I2C_AcknowledgedAddress=I2C_AcknowledgedAddress_7bit ;
 2076              		.loc 2 939 45
 2077 00c4 4FF48043 		mov	r3, #16384
 2078 00c8 3B84     		strh	r3, [r7, #32]	@ movhi
 940:./i2c/i2c-std.c ****     _i2c_init_struct. I2C_OwnAddress1=ownaddress;
 2079              		.loc 2 940 38
 2080 00ca FB88     		ldrh	r3, [r7, #6]	@ movhi
 2081 00cc BB83     		strh	r3, [r7, #28]	@ movhi
 941:./i2c/i2c-std.c ****     _i2c_init_struct.I2C_ClockSpeed=clock_speed;
 2082              		.loc 2 941 36
 2083 00ce BB68     		ldr	r3, [r7, #8]
 2084 00d0 7B61     		str	r3, [r7, #20]
 942:./i2c/i2c-std.c ****     // reset the I2C Module
 943:./i2c/i2c-std.c ****     I2CX->CR1|=I2C_CR1_SWRST;
 2085              		.loc 2 943 14
 2086 00d2 FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s 			page 75


 2087 00d4 1B88     		ldrh	r3, [r3]	@ movhi
 2088 00d6 9BB2     		uxth	r3, r3
 2089 00d8 6FEA4343 		mvn	r3, r3, lsl #17
 2090 00dc 6FEA5343 		mvn	r3, r3, lsr #17
 2091 00e0 9AB2     		uxth	r2, r3
 2092 00e2 FB68     		ldr	r3, [r7, #12]
 2093 00e4 1A80     		strh	r2, [r3]	@ movhi
 944:./i2c/i2c-std.c ****     I2CX->CR1&=~I2C_CR1_SWRST;
 2094              		.loc 2 944 14
 2095 00e6 FB68     		ldr	r3, [r7, #12]
 2096 00e8 1B88     		ldrh	r3, [r3]	@ movhi
 2097 00ea 9BB2     		uxth	r3, r3
 2098 00ec C3F30E03 		ubfx	r3, r3, #0, #15
 2099 00f0 9AB2     		uxth	r2, r3
 2100 00f2 FB68     		ldr	r3, [r7, #12]
 2101 00f4 1A80     		strh	r2, [r3]	@ movhi
 945:./i2c/i2c-std.c **** 
 946:./i2c/i2c-std.c ****     I2C_Init((I2C_TypeDef*)I2CX,(I2C_InitTypeDef *)& _i2c_init_struct);
 2102              		.loc 2 946 5
 2103 00f6 07F11403 		add	r3, r7, #20
 2104 00fa 1946     		mov	r1, r3
 2105 00fc F868     		ldr	r0, [r7, #12]
 2106 00fe FFF7FEFF 		bl	I2C_Init
 947:./i2c/i2c-std.c ****     //I2CX->TRISE=37;
 948:./i2c/i2c-std.c ****   /* 5. Configure the peripheral interrupt @ level of the peripheral or DMA */
 949:./i2c/i2c-std.c ****     //I2C_ITConfig(I2C1, I2C_IT_EVT| I2C_IT_EVT,ENABLE);
 950:./i2c/i2c-std.c **** 
 951:./i2c/i2c-std.c ****   /* 6. Enable the peripheral Module */
 952:./i2c/i2c-std.c ****     //I2C_Cmd((I2C_TypeDef*)I2CX,ENABLE);
 953:./i2c/i2c-std.c ****     I2CX->CR1|=I2C_CR1_PE;
 2107              		.loc 2 953 14
 2108 0102 FB68     		ldr	r3, [r7, #12]
 2109 0104 1B88     		ldrh	r3, [r3]	@ movhi
 2110 0106 9BB2     		uxth	r3, r3
 2111 0108 43F00103 		orr	r3, r3, #1
 2112 010c 9AB2     		uxth	r2, r3
 2113 010e FB68     		ldr	r3, [r7, #12]
 2114 0110 1A80     		strh	r2, [r3]	@ movhi
 954:./i2c/i2c-std.c **** 
 955:./i2c/i2c-std.c **** }
 2115              		.loc 2 955 1
 2116 0112 00BF     		nop
 2117 0114 2837     		adds	r7, r7, #40
 2118              	.LCFI115:
 2119              		.cfi_def_cfa_offset 8
 2120 0116 BD46     		mov	sp, r7
 2121              	.LCFI116:
 2122              		.cfi_def_cfa_register 13
 2123              		@ sp needed
 2124 0118 80BD     		pop	{r7, pc}
 2125              	.L107:
 2126 011a 00BF     		.align	2
 2127              	.L106:
 2128 011c 00540040 		.word	1073763328
 2129 0120 000C0140 		.word	1073810432
 2130              		.cfi_endproc
 2131              	.LFE52:
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s 			page 76


 2133              		.section	.text.i2c_write_7bit_byte_std,"ax",%progbits
 2134              		.align	1
 2135              		.global	i2c_write_7bit_byte_std
 2136              		.syntax unified
 2137              		.thumb
 2138              		.thumb_func
 2140              	i2c_write_7bit_byte_std:
 2141              	.LFB53:
 956:./i2c/i2c-std.c **** //-------------------------------------------------------------------------------------------------
 957:./i2c/i2c-std.c **** 
 958:./i2c/i2c-std.c **** //********************************************************************************************
 959:./i2c/i2c-std.c **** // GROUP A
 960:./i2c/i2c-std.c **** //  extern i2c Methods defnitions using standard peripheral library
 961:./i2c/i2c-std.c **** // read and write directly without definition of a base register address in the slave
 962:./i2c/i2c-std.c **** //
 963:./i2c/i2c-std.c **** //********************************************************************************************
 964:./i2c/i2c-std.c **** 
 965:./i2c/i2c-std.c **** uint8_t i2c_write_7bit_byte_std(I2C_TypeDef* I2CX, uint8_t  slave_address,uint8_t data)
 966:./i2c/i2c-std.c **** {
 2142              		.loc 2 966 1
 2143              		.cfi_startproc
 2144              		@ args = 0, pretend = 0, frame = 16
 2145              		@ frame_needed = 1, uses_anonymous_args = 0
 2146 0000 80B5     		push	{r7, lr}
 2147              	.LCFI117:
 2148              		.cfi_def_cfa_offset 8
 2149              		.cfi_offset 7, -8
 2150              		.cfi_offset 14, -4
 2151 0002 84B0     		sub	sp, sp, #16
 2152              	.LCFI118:
 2153              		.cfi_def_cfa_offset 24
 2154 0004 00AF     		add	r7, sp, #0
 2155              	.LCFI119:
 2156              		.cfi_def_cfa_register 7
 2157 0006 7860     		str	r0, [r7, #4]
 2158 0008 0B46     		mov	r3, r1
 2159 000a FB70     		strb	r3, [r7, #3]
 2160 000c 1346     		mov	r3, r2
 2161 000e BB70     		strb	r3, [r7, #2]
 967:./i2c/i2c-std.c ****  // get the result of any sub operation where a non-zero value indicates an error condition
 968:./i2c/i2c-std.c ****     uint8_t error=0; 
 2162              		.loc 2 968 13
 2163 0010 0023     		movs	r3, #0
 2164 0012 FB73     		strb	r3, [r7, #15]
 969:./i2c/i2c-std.c **** 
 970:./i2c/i2c-std.c ****   //wait check that the I2c module is not busy
 971:./i2c/i2c-std.c ****     if((error=i2c_ready_std(I2CX)))
 2165              		.loc 2 971 15
 2166 0014 7868     		ldr	r0, [r7, #4]
 2167 0016 FFF7FEFF 		bl	i2c_ready_std
 2168 001a 0346     		mov	r3, r0
 2169 001c FB73     		strb	r3, [r7, #15]
 2170              		.loc 2 971 7
 2171 001e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2172 0020 002B     		cmp	r3, #0
 2173 0022 01D0     		beq	.L109
 972:./i2c/i2c-std.c ****         return error;
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s 			page 77


 2174              		.loc 2 972 16
 2175 0024 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2176 0026 2CE0     		b	.L110
 2177              	.L109:
 973:./i2c/i2c-std.c **** 
 974:./i2c/i2c-std.c ****   // send the start condition 
 975:./i2c/i2c-std.c ****     if((error=i2c_start_std(I2CX)))
 2178              		.loc 2 975 15
 2179 0028 7868     		ldr	r0, [r7, #4]
 2180 002a FFF7FEFF 		bl	i2c_start_std
 2181 002e 0346     		mov	r3, r0
 2182 0030 FB73     		strb	r3, [r7, #15]
 2183              		.loc 2 975 7
 2184 0032 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2185 0034 002B     		cmp	r3, #0
 2186 0036 01D0     		beq	.L111
 976:./i2c/i2c-std.c ****         return error;
 2187              		.loc 2 976 16
 2188 0038 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2189 003a 22E0     		b	.L110
 2190              	.L111:
 977:./i2c/i2c-std.c **** 
 978:./i2c/i2c-std.c ****     //EV5: send the slave address with write operation master transmit 
 979:./i2c/i2c-std.c ****     if((error=i2c_send_7bit_slave_address_wr_std(I2CX,slave_address)))
 2191              		.loc 2 979 15
 2192 003c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2193 003e 1946     		mov	r1, r3
 2194 0040 7868     		ldr	r0, [r7, #4]
 2195 0042 FFF7FEFF 		bl	i2c_send_7bit_slave_address_wr_std
 2196 0046 0346     		mov	r3, r0
 2197 0048 FB73     		strb	r3, [r7, #15]
 2198              		.loc 2 979 7
 2199 004a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2200 004c 002B     		cmp	r3, #0
 2201 004e 01D0     		beq	.L112
 980:./i2c/i2c-std.c ****         return error;
 2202              		.loc 2 980 16
 2203 0050 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2204 0052 16E0     		b	.L110
 2205              	.L112:
 981:./i2c/i2c-std.c **** 
 982:./i2c/i2c-std.c ****     //Ev6: send the byte
 983:./i2c/i2c-std.c ****     if((error=i2c_write_byte_std(I2CX,data)))
 2206              		.loc 2 983 15
 2207 0054 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 2208 0056 1946     		mov	r1, r3
 2209 0058 7868     		ldr	r0, [r7, #4]
 2210 005a FFF7FEFF 		bl	i2c_write_byte_std
 2211 005e 0346     		mov	r3, r0
 2212 0060 FB73     		strb	r3, [r7, #15]
 2213              		.loc 2 983 7
 2214 0062 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2215 0064 002B     		cmp	r3, #0
 2216 0066 01D0     		beq	.L113
 984:./i2c/i2c-std.c ****         return error;
 2217              		.loc 2 984 16
 2218 0068 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s 			page 78


 2219 006a 0AE0     		b	.L110
 2220              	.L113:
 985:./i2c/i2c-std.c **** 
 986:./i2c/i2c-std.c ****     // generate the stop condition 
 987:./i2c/i2c-std.c ****     if((error=i2c_stop_std(I2CX)))
 2221              		.loc 2 987 15
 2222 006c 7868     		ldr	r0, [r7, #4]
 2223 006e FFF7FEFF 		bl	i2c_stop_std
 2224 0072 0346     		mov	r3, r0
 2225 0074 FB73     		strb	r3, [r7, #15]
 2226              		.loc 2 987 7
 2227 0076 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2228 0078 002B     		cmp	r3, #0
 2229 007a 01D0     		beq	.L114
 988:./i2c/i2c-std.c ****         return error;
 2230              		.loc 2 988 16
 2231 007c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2232 007e 00E0     		b	.L110
 2233              	.L114:
 989:./i2c/i2c-std.c **** 
 990:./i2c/i2c-std.c ****     return I2C_OK;
 2234              		.loc 2 990 12
 2235 0080 0023     		movs	r3, #0
 2236              	.L110:
 991:./i2c/i2c-std.c **** }
 2237              		.loc 2 991 1
 2238 0082 1846     		mov	r0, r3
 2239 0084 1037     		adds	r7, r7, #16
 2240              	.LCFI120:
 2241              		.cfi_def_cfa_offset 8
 2242 0086 BD46     		mov	sp, r7
 2243              	.LCFI121:
 2244              		.cfi_def_cfa_register 13
 2245              		@ sp needed
 2246 0088 80BD     		pop	{r7, pc}
 2247              		.cfi_endproc
 2248              	.LFE53:
 2250              		.section	.text.i2c_write_7bit_nbyte_std,"ax",%progbits
 2251              		.align	1
 2252              		.global	i2c_write_7bit_nbyte_std
 2253              		.syntax unified
 2254              		.thumb
 2255              		.thumb_func
 2257              	i2c_write_7bit_nbyte_std:
 2258              	.LFB54:
 992:./i2c/i2c-std.c **** //-------------------------------------------------------------------------------------------------
 993:./i2c/i2c-std.c **** uint8_t i2c_write_7bit_nbyte_std(I2C_TypeDef* I2CX, uint8_t  slave_address, uint8_t *buf, size_t n)
 994:./i2c/i2c-std.c **** {
 2259              		.loc 2 994 1
 2260              		.cfi_startproc
 2261              		@ args = 0, pretend = 0, frame = 24
 2262              		@ frame_needed = 1, uses_anonymous_args = 0
 2263 0000 80B5     		push	{r7, lr}
 2264              	.LCFI122:
 2265              		.cfi_def_cfa_offset 8
 2266              		.cfi_offset 7, -8
 2267              		.cfi_offset 14, -4
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s 			page 79


 2268 0002 86B0     		sub	sp, sp, #24
 2269              	.LCFI123:
 2270              		.cfi_def_cfa_offset 32
 2271 0004 00AF     		add	r7, sp, #0
 2272              	.LCFI124:
 2273              		.cfi_def_cfa_register 7
 2274 0006 F860     		str	r0, [r7, #12]
 2275 0008 7A60     		str	r2, [r7, #4]
 2276 000a 3B60     		str	r3, [r7]
 2277 000c 0B46     		mov	r3, r1
 2278 000e FB72     		strb	r3, [r7, #11]
 995:./i2c/i2c-std.c ****  // get the error of the any sub operation where a non-zero value indicate an error 
 996:./i2c/i2c-std.c ****   uint8_t error=0; 
 2279              		.loc 2 996 11
 2280 0010 0023     		movs	r3, #0
 2281 0012 FB75     		strb	r3, [r7, #23]
 997:./i2c/i2c-std.c **** 
 998:./i2c/i2c-std.c ****   //wait check that the I2c module is not busy
 999:./i2c/i2c-std.c ****     if((error=i2c_ready_std(I2CX)))
 2282              		.loc 2 999 15
 2283 0014 F868     		ldr	r0, [r7, #12]
 2284 0016 FFF7FEFF 		bl	i2c_ready_std
 2285 001a 0346     		mov	r3, r0
 2286 001c FB75     		strb	r3, [r7, #23]
 2287              		.loc 2 999 7
 2288 001e FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2289 0020 002B     		cmp	r3, #0
 2290 0022 01D0     		beq	.L116
1000:./i2c/i2c-std.c ****         return error;
 2291              		.loc 2 1000 16
 2292 0024 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2293 0026 2CE0     		b	.L117
 2294              	.L116:
1001:./i2c/i2c-std.c ****   // send the start condition 
1002:./i2c/i2c-std.c ****     if((error=i2c_start_std(I2CX)))
 2295              		.loc 2 1002 15
 2296 0028 F868     		ldr	r0, [r7, #12]
 2297 002a FFF7FEFF 		bl	i2c_start_std
 2298 002e 0346     		mov	r3, r0
 2299 0030 FB75     		strb	r3, [r7, #23]
 2300              		.loc 2 1002 7
 2301 0032 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2302 0034 002B     		cmp	r3, #0
 2303 0036 01D0     		beq	.L118
1003:./i2c/i2c-std.c ****         return error;
 2304              		.loc 2 1003 16
 2305 0038 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2306 003a 22E0     		b	.L117
 2307              	.L118:
1004:./i2c/i2c-std.c **** 
1005:./i2c/i2c-std.c ****     //EV5: send the slave address with write operation master transmit 
1006:./i2c/i2c-std.c ****     if((error=i2c_send_7bit_slave_address_wr_std(I2CX,slave_address)))
 2308              		.loc 2 1006 15
 2309 003c FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 2310 003e 1946     		mov	r1, r3
 2311 0040 F868     		ldr	r0, [r7, #12]
 2312 0042 FFF7FEFF 		bl	i2c_send_7bit_slave_address_wr_std
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s 			page 80


 2313 0046 0346     		mov	r3, r0
 2314 0048 FB75     		strb	r3, [r7, #23]
 2315              		.loc 2 1006 7
 2316 004a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2317 004c 002B     		cmp	r3, #0
 2318 004e 01D0     		beq	.L119
1007:./i2c/i2c-std.c ****         return error;
 2319              		.loc 2 1007 16
 2320 0050 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2321 0052 16E0     		b	.L117
 2322              	.L119:
1008:./i2c/i2c-std.c **** 
1009:./i2c/i2c-std.c ****     //Ev6: send the byte
1010:./i2c/i2c-std.c ****     if((error=i2c_write_nbyte_std(I2CX,buf,n)))
 2323              		.loc 2 1010 15
 2324 0054 3A68     		ldr	r2, [r7]
 2325 0056 7968     		ldr	r1, [r7, #4]
 2326 0058 F868     		ldr	r0, [r7, #12]
 2327 005a FFF7FEFF 		bl	i2c_write_nbyte_std
 2328 005e 0346     		mov	r3, r0
 2329 0060 FB75     		strb	r3, [r7, #23]
 2330              		.loc 2 1010 7
 2331 0062 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2332 0064 002B     		cmp	r3, #0
 2333 0066 01D0     		beq	.L120
1011:./i2c/i2c-std.c ****         return error;
 2334              		.loc 2 1011 16
 2335 0068 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2336 006a 0AE0     		b	.L117
 2337              	.L120:
1012:./i2c/i2c-std.c **** 
1013:./i2c/i2c-std.c ****     // generate the stop condition 
1014:./i2c/i2c-std.c ****     if((error=i2c_stop_std(I2CX)))
 2338              		.loc 2 1014 15
 2339 006c F868     		ldr	r0, [r7, #12]
 2340 006e FFF7FEFF 		bl	i2c_stop_std
 2341 0072 0346     		mov	r3, r0
 2342 0074 FB75     		strb	r3, [r7, #23]
 2343              		.loc 2 1014 7
 2344 0076 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2345 0078 002B     		cmp	r3, #0
 2346 007a 01D0     		beq	.L121
1015:./i2c/i2c-std.c ****         return error;
 2347              		.loc 2 1015 16
 2348 007c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2349 007e 00E0     		b	.L117
 2350              	.L121:
1016:./i2c/i2c-std.c **** 
1017:./i2c/i2c-std.c ****     // all operation has succeeded no error to return 
1018:./i2c/i2c-std.c ****     return 0;
 2351              		.loc 2 1018 12
 2352 0080 0023     		movs	r3, #0
 2353              	.L117:
1019:./i2c/i2c-std.c **** }
 2354              		.loc 2 1019 1
 2355 0082 1846     		mov	r0, r3
 2356 0084 1837     		adds	r7, r7, #24
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s 			page 81


 2357              	.LCFI125:
 2358              		.cfi_def_cfa_offset 8
 2359 0086 BD46     		mov	sp, r7
 2360              	.LCFI126:
 2361              		.cfi_def_cfa_register 13
 2362              		@ sp needed
 2363 0088 80BD     		pop	{r7, pc}
 2364              		.cfi_endproc
 2365              	.LFE54:
 2367              		.section	.text.i2c_read_7bit_byte_std,"ax",%progbits
 2368              		.align	1
 2369              		.global	i2c_read_7bit_byte_std
 2370              		.syntax unified
 2371              		.thumb
 2372              		.thumb_func
 2374              	i2c_read_7bit_byte_std:
 2375              	.LFB55:
1020:./i2c/i2c-std.c **** //-------------------------------------------------------------------------------------------------
1021:./i2c/i2c-std.c **** uint8_t i2c_read_7bit_byte_std(I2C_TypeDef* I2CX, uint8_t  slave_address, uint8_t *data)
1022:./i2c/i2c-std.c **** {
 2376              		.loc 2 1022 1
 2377              		.cfi_startproc
 2378              		@ args = 0, pretend = 0, frame = 24
 2379              		@ frame_needed = 1, uses_anonymous_args = 0
 2380 0000 80B5     		push	{r7, lr}
 2381              	.LCFI127:
 2382              		.cfi_def_cfa_offset 8
 2383              		.cfi_offset 7, -8
 2384              		.cfi_offset 14, -4
 2385 0002 86B0     		sub	sp, sp, #24
 2386              	.LCFI128:
 2387              		.cfi_def_cfa_offset 32
 2388 0004 00AF     		add	r7, sp, #0
 2389              	.LCFI129:
 2390              		.cfi_def_cfa_register 7
 2391 0006 F860     		str	r0, [r7, #12]
 2392 0008 0B46     		mov	r3, r1
 2393 000a 7A60     		str	r2, [r7, #4]
 2394 000c FB72     		strb	r3, [r7, #11]
1023:./i2c/i2c-std.c ****   uint8_t error=0;
 2395              		.loc 2 1023 11
 2396 000e 0023     		movs	r3, #0
 2397 0010 FB75     		strb	r3, [r7, #23]
1024:./i2c/i2c-std.c **** 
1025:./i2c/i2c-std.c ****   if((error=i2c_read_7bit_nbyte_std(I2CX,slave_address, (uint8_t *)data, 1)))
 2398              		.loc 2 1025 13
 2399 0012 F97A     		ldrb	r1, [r7, #11]	@ zero_extendqisi2
 2400 0014 0123     		movs	r3, #1
 2401 0016 7A68     		ldr	r2, [r7, #4]
 2402 0018 F868     		ldr	r0, [r7, #12]
 2403 001a FFF7FEFF 		bl	i2c_read_7bit_nbyte_std
 2404 001e 0346     		mov	r3, r0
 2405 0020 FB75     		strb	r3, [r7, #23]
 2406              		.loc 2 1025 5
 2407 0022 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2408 0024 002B     		cmp	r3, #0
 2409 0026 01D0     		beq	.L123
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s 			page 82


1026:./i2c/i2c-std.c ****    return error;
 2410              		.loc 2 1026 11
 2411 0028 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2412 002a 00E0     		b	.L124
 2413              	.L123:
1027:./i2c/i2c-std.c **** 
1028:./i2c/i2c-std.c ****   return I2C_OK;
 2414              		.loc 2 1028 10
 2415 002c 0023     		movs	r3, #0
 2416              	.L124:
1029:./i2c/i2c-std.c **** }
 2417              		.loc 2 1029 1
 2418 002e 1846     		mov	r0, r3
 2419 0030 1837     		adds	r7, r7, #24
 2420              	.LCFI130:
 2421              		.cfi_def_cfa_offset 8
 2422 0032 BD46     		mov	sp, r7
 2423              	.LCFI131:
 2424              		.cfi_def_cfa_register 13
 2425              		@ sp needed
 2426 0034 80BD     		pop	{r7, pc}
 2427              		.cfi_endproc
 2428              	.LFE55:
 2430              		.section	.text.i2c_read_7bit_word_std,"ax",%progbits
 2431              		.align	1
 2432              		.global	i2c_read_7bit_word_std
 2433              		.syntax unified
 2434              		.thumb
 2435              		.thumb_func
 2437              	i2c_read_7bit_word_std:
 2438              	.LFB56:
1030:./i2c/i2c-std.c **** //-------------------------------------------------------------------------------------------------
1031:./i2c/i2c-std.c **** uint8_t i2c_read_7bit_word_std(I2C_TypeDef* I2CX, uint8_t  slave_address, uint16_t *data)
1032:./i2c/i2c-std.c **** {
 2439              		.loc 2 1032 1
 2440              		.cfi_startproc
 2441              		@ args = 0, pretend = 0, frame = 24
 2442              		@ frame_needed = 1, uses_anonymous_args = 0
 2443 0000 80B5     		push	{r7, lr}
 2444              	.LCFI132:
 2445              		.cfi_def_cfa_offset 8
 2446              		.cfi_offset 7, -8
 2447              		.cfi_offset 14, -4
 2448 0002 86B0     		sub	sp, sp, #24
 2449              	.LCFI133:
 2450              		.cfi_def_cfa_offset 32
 2451 0004 00AF     		add	r7, sp, #0
 2452              	.LCFI134:
 2453              		.cfi_def_cfa_register 7
 2454 0006 F860     		str	r0, [r7, #12]
 2455 0008 0B46     		mov	r3, r1
 2456 000a 7A60     		str	r2, [r7, #4]
 2457 000c FB72     		strb	r3, [r7, #11]
1033:./i2c/i2c-std.c ****   uint8_t error=0;
 2458              		.loc 2 1033 11
 2459 000e 0023     		movs	r3, #0
 2460 0010 FB75     		strb	r3, [r7, #23]
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s 			page 83


1034:./i2c/i2c-std.c ****   WORD_BYTES t;
1035:./i2c/i2c-std.c ****   t.word=0;
 2461              		.loc 2 1035 9
 2462 0012 0023     		movs	r3, #0
 2463 0014 BB82     		strh	r3, [r7, #20]	@ movhi
1036:./i2c/i2c-std.c ****   if((error=i2c_read_7bit_nbyte_std(I2CX,slave_address, (uint8_t *)t.bytes, 2)))
 2464              		.loc 2 1036 13
 2465 0016 07F11402 		add	r2, r7, #20
 2466 001a F97A     		ldrb	r1, [r7, #11]	@ zero_extendqisi2
 2467 001c 0223     		movs	r3, #2
 2468 001e F868     		ldr	r0, [r7, #12]
 2469 0020 FFF7FEFF 		bl	i2c_read_7bit_nbyte_std
 2470 0024 0346     		mov	r3, r0
 2471 0026 FB75     		strb	r3, [r7, #23]
 2472              		.loc 2 1036 5
 2473 0028 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2474 002a 002B     		cmp	r3, #0
 2475 002c 01D0     		beq	.L126
1037:./i2c/i2c-std.c ****    return error;
 2476              		.loc 2 1037 11
 2477 002e FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2478 0030 03E0     		b	.L128
 2479              	.L126:
1038:./i2c/i2c-std.c ****   *data=t.word;
 2480              		.loc 2 1038 10
 2481 0032 BA8A     		ldrh	r2, [r7, #20]
 2482              		.loc 2 1038 8
 2483 0034 7B68     		ldr	r3, [r7, #4]
 2484 0036 1A80     		strh	r2, [r3]	@ movhi
1039:./i2c/i2c-std.c ****   return I2C_OK;
 2485              		.loc 2 1039 10
 2486 0038 0023     		movs	r3, #0
 2487              	.L128:
1040:./i2c/i2c-std.c **** }
 2488              		.loc 2 1040 1 discriminator 1
 2489 003a 1846     		mov	r0, r3
 2490 003c 1837     		adds	r7, r7, #24
 2491              	.LCFI135:
 2492              		.cfi_def_cfa_offset 8
 2493 003e BD46     		mov	sp, r7
 2494              	.LCFI136:
 2495              		.cfi_def_cfa_register 13
 2496              		@ sp needed
 2497 0040 80BD     		pop	{r7, pc}
 2498              		.cfi_endproc
 2499              	.LFE56:
 2501              		.section	.text.i2c_read_7bit_nbyte_std,"ax",%progbits
 2502              		.align	1
 2503              		.global	i2c_read_7bit_nbyte_std
 2504              		.syntax unified
 2505              		.thumb
 2506              		.thumb_func
 2508              	i2c_read_7bit_nbyte_std:
 2509              	.LFB57:
1041:./i2c/i2c-std.c **** //-------------------------------------------------------------------------------------------------
1042:./i2c/i2c-std.c **** uint8_t i2c_read_7bit_nbyte_std(I2C_TypeDef* I2CX, uint8_t  slave_address, uint8_t *buf, size_t n)
1043:./i2c/i2c-std.c **** {
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s 			page 84


 2510              		.loc 2 1043 1
 2511              		.cfi_startproc
 2512              		@ args = 0, pretend = 0, frame = 24
 2513              		@ frame_needed = 1, uses_anonymous_args = 0
 2514 0000 80B5     		push	{r7, lr}
 2515              	.LCFI137:
 2516              		.cfi_def_cfa_offset 8
 2517              		.cfi_offset 7, -8
 2518              		.cfi_offset 14, -4
 2519 0002 86B0     		sub	sp, sp, #24
 2520              	.LCFI138:
 2521              		.cfi_def_cfa_offset 32
 2522 0004 00AF     		add	r7, sp, #0
 2523              	.LCFI139:
 2524              		.cfi_def_cfa_register 7
 2525 0006 F860     		str	r0, [r7, #12]
 2526 0008 7A60     		str	r2, [r7, #4]
 2527 000a 3B60     		str	r3, [r7]
 2528 000c 0B46     		mov	r3, r1
 2529 000e FB72     		strb	r3, [r7, #11]
1044:./i2c/i2c-std.c **** 
1045:./i2c/i2c-std.c ****   // get the error of the any sub operation where a non-zero value indicate an error 
1046:./i2c/i2c-std.c ****   uint8_t error=0; 
 2530              		.loc 2 1046 11
 2531 0010 0023     		movs	r3, #0
 2532 0012 FB75     		strb	r3, [r7, #23]
1047:./i2c/i2c-std.c ****  //wait check that the I2c module is not busy
1048:./i2c/i2c-std.c ****     if((error=i2c_ready_std(I2CX)))
 2533              		.loc 2 1048 15
 2534 0014 F868     		ldr	r0, [r7, #12]
 2535 0016 FFF7FEFF 		bl	i2c_ready_std
 2536 001a 0346     		mov	r3, r0
 2537 001c FB75     		strb	r3, [r7, #23]
 2538              		.loc 2 1048 7
 2539 001e FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2540 0020 002B     		cmp	r3, #0
 2541 0022 01D0     		beq	.L130
1049:./i2c/i2c-std.c ****         return error;
 2542              		.loc 2 1049 16
 2543 0024 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2544 0026 37E0     		b	.L131
 2545              	.L130:
1050:./i2c/i2c-std.c **** 
1051:./i2c/i2c-std.c ****   // send the repeat start condition 
1052:./i2c/i2c-std.c ****     if((error=i2c_start_std(I2CX)))
 2546              		.loc 2 1052 15
 2547 0028 F868     		ldr	r0, [r7, #12]
 2548 002a FFF7FEFF 		bl	i2c_start_std
 2549 002e 0346     		mov	r3, r0
 2550 0030 FB75     		strb	r3, [r7, #23]
 2551              		.loc 2 1052 7
 2552 0032 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2553 0034 002B     		cmp	r3, #0
 2554 0036 01D0     		beq	.L132
1053:./i2c/i2c-std.c ****         return error;
 2555              		.loc 2 1053 16
 2556 0038 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s 			page 85


 2557 003a 2DE0     		b	.L131
 2558              	.L132:
1054:./i2c/i2c-std.c ****  // Enable Acknowledgment , clear POS flag
1055:./i2c/i2c-std.c ****      I2C_AcknowledgeConfig(I2CX , ENABLE);
 2559              		.loc 2 1055 6
 2560 003c 0121     		movs	r1, #1
 2561 003e F868     		ldr	r0, [r7, #12]
 2562 0040 FFF7FEFF 		bl	I2C_AcknowledgeConfig
1056:./i2c/i2c-std.c ****      I2C_NACKPositionConfig(I2CX , I2C_NACKPosition_Current);
 2563              		.loc 2 1056 6
 2564 0044 4FF2FF71 		movw	r1, #63487
 2565 0048 F868     		ldr	r0, [r7, #12]
 2566 004a FFF7FEFF 		bl	I2C_NACKPositionConfig
1057:./i2c/i2c-std.c **** 
1058:./i2c/i2c-std.c **** //EV5: send the slave address with a read operation master transmit 
1059:./i2c/i2c-std.c ****     if((error=i2c_send_7bit_slave_address_rd_std(I2CX,slave_address)))
 2567              		.loc 2 1059 15
 2568 004e FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 2569 0050 1946     		mov	r1, r3
 2570 0052 F868     		ldr	r0, [r7, #12]
 2571 0054 FFF7FEFF 		bl	i2c_send_7bit_slave_address_rd_std
 2572 0058 0346     		mov	r3, r0
 2573 005a FB75     		strb	r3, [r7, #23]
 2574              		.loc 2 1059 7
 2575 005c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2576 005e 002B     		cmp	r3, #0
 2577 0060 01D0     		beq	.L133
1060:./i2c/i2c-std.c ****         return error;
 2578              		.loc 2 1060 16
 2579 0062 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2580 0064 18E0     		b	.L131
 2581              	.L133:
1061:./i2c/i2c-std.c **** //EV7:     
1062:./i2c/i2c-std.c ****    if((error=i2c_read_nbyte_std(I2CX,buf,n)))
 2582              		.loc 2 1062 14
 2583 0066 3B68     		ldr	r3, [r7]
 2584 0068 9BB2     		uxth	r3, r3
 2585 006a 1A46     		mov	r2, r3
 2586 006c 7968     		ldr	r1, [r7, #4]
 2587 006e F868     		ldr	r0, [r7, #12]
 2588 0070 FFF7FEFF 		bl	i2c_read_nbyte_std
 2589 0074 0346     		mov	r3, r0
 2590 0076 FB75     		strb	r3, [r7, #23]
 2591              		.loc 2 1062 6
 2592 0078 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2593 007a 002B     		cmp	r3, #0
 2594 007c 01D0     		beq	.L134
1063:./i2c/i2c-std.c ****     return error;
 2595              		.loc 2 1063 12
 2596 007e FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2597 0080 0AE0     		b	.L131
 2598              	.L134:
1064:./i2c/i2c-std.c **** 
1065:./i2c/i2c-std.c **** // generate the stop condition : note stop generation is done implicitly by the  
1066:./i2c/i2c-std.c ****    if((error=i2c_wait_stop_event_std(I2CX)))
 2599              		.loc 2 1066 14
 2600 0082 F868     		ldr	r0, [r7, #12]
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s 			page 86


 2601 0084 FFF7FEFF 		bl	i2c_wait_stop_event_std
 2602 0088 0346     		mov	r3, r0
 2603 008a FB75     		strb	r3, [r7, #23]
 2604              		.loc 2 1066 6
 2605 008c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2606 008e 002B     		cmp	r3, #0
 2607 0090 01D0     		beq	.L135
1067:./i2c/i2c-std.c ****       return error;
 2608              		.loc 2 1067 14
 2609 0092 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2610 0094 00E0     		b	.L131
 2611              	.L135:
1068:./i2c/i2c-std.c **** 
1069:./i2c/i2c-std.c ****     // all operation has succeeded no error to return 
1070:./i2c/i2c-std.c ****     return I2C_OK;
 2612              		.loc 2 1070 12
 2613 0096 0023     		movs	r3, #0
 2614              	.L131:
1071:./i2c/i2c-std.c **** }
 2615              		.loc 2 1071 1
 2616 0098 1846     		mov	r0, r3
 2617 009a 1837     		adds	r7, r7, #24
 2618              	.LCFI140:
 2619              		.cfi_def_cfa_offset 8
 2620 009c BD46     		mov	sp, r7
 2621              	.LCFI141:
 2622              		.cfi_def_cfa_register 13
 2623              		@ sp needed
 2624 009e 80BD     		pop	{r7, pc}
 2625              		.cfi_endproc
 2626              	.LFE57:
 2628              		.section	.text.i2c_write_7bit_base_byte_std,"ax",%progbits
 2629              		.align	1
 2630              		.global	i2c_write_7bit_base_byte_std
 2631              		.syntax unified
 2632              		.thumb
 2633              		.thumb_func
 2635              	i2c_write_7bit_base_byte_std:
 2636              	.LFB58:
1072:./i2c/i2c-std.c **** //-------------------------------------------------------------------------------------------------
1073:./i2c/i2c-std.c **** 
1074:./i2c/i2c-std.c **** 
1075:./i2c/i2c-std.c **** //********************************************************************************************
1076:./i2c/i2c-std.c **** // GROUP B
1077:./i2c/i2c-std.c **** //  extern i2c Methods defnitions using standard peripheral library
1078:./i2c/i2c-std.c **** // read and write directly without definition of a base register address in the slave
1079:./i2c/i2c-std.c **** //
1080:./i2c/i2c-std.c **** //********************************************************************************************
1081:./i2c/i2c-std.c **** uint8_t i2c_write_7bit_base_byte_std(I2C_TypeDef* I2CX, uint8_t  slave_address,uint8_t base_address
1082:./i2c/i2c-std.c **** {
 2637              		.loc 2 1082 1
 2638              		.cfi_startproc
 2639              		@ args = 0, pretend = 0, frame = 16
 2640              		@ frame_needed = 1, uses_anonymous_args = 0
 2641 0000 80B5     		push	{r7, lr}
 2642              	.LCFI142:
 2643              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s 			page 87


 2644              		.cfi_offset 7, -8
 2645              		.cfi_offset 14, -4
 2646 0002 84B0     		sub	sp, sp, #16
 2647              	.LCFI143:
 2648              		.cfi_def_cfa_offset 24
 2649 0004 00AF     		add	r7, sp, #0
 2650              	.LCFI144:
 2651              		.cfi_def_cfa_register 7
 2652 0006 7860     		str	r0, [r7, #4]
 2653 0008 0846     		mov	r0, r1
 2654 000a 1146     		mov	r1, r2
 2655 000c 1A46     		mov	r2, r3
 2656 000e 0346     		mov	r3, r0
 2657 0010 FB70     		strb	r3, [r7, #3]
 2658 0012 0B46     		mov	r3, r1
 2659 0014 BB70     		strb	r3, [r7, #2]
 2660 0016 1346     		mov	r3, r2
 2661 0018 7B70     		strb	r3, [r7, #1]
1083:./i2c/i2c-std.c **** 
1084:./i2c/i2c-std.c ****  // get the result of any sub operation where a non-zero value indicates an error condition
1085:./i2c/i2c-std.c ****     uint8_t error=0; 
 2662              		.loc 2 1085 13
 2663 001a 0023     		movs	r3, #0
 2664 001c FB73     		strb	r3, [r7, #15]
1086:./i2c/i2c-std.c ****   //uart_print(USART1,"\nTX_BuSY ...\r\n");
1087:./i2c/i2c-std.c ****   //wait check that the I2c module is not busy
1088:./i2c/i2c-std.c ****     if((error=i2c_ready_std(I2CX)))
 2665              		.loc 2 1088 15
 2666 001e 7868     		ldr	r0, [r7, #4]
 2667 0020 FFF7FEFF 		bl	i2c_ready_std
 2668 0024 0346     		mov	r3, r0
 2669 0026 FB73     		strb	r3, [r7, #15]
 2670              		.loc 2 1088 7
 2671 0028 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2672 002a 002B     		cmp	r3, #0
 2673 002c 01D0     		beq	.L137
1089:./i2c/i2c-std.c ****         return error;
 2674              		.loc 2 1089 16
 2675 002e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2676 0030 38E0     		b	.L138
 2677              	.L137:
1090:./i2c/i2c-std.c ****     
1091:./i2c/i2c-std.c ****   //uart_print(USART1,"TX_SB ...\r\n");
1092:./i2c/i2c-std.c ****   // send the start condition
1093:./i2c/i2c-std.c ****     error=i2c_start_std(I2CX); 
 2678              		.loc 2 1093 11
 2679 0032 7868     		ldr	r0, [r7, #4]
 2680 0034 FFF7FEFF 		bl	i2c_start_std
 2681 0038 0346     		mov	r3, r0
 2682 003a FB73     		strb	r3, [r7, #15]
1094:./i2c/i2c-std.c ****     if(error!=I2C_OK) 
 2683              		.loc 2 1094 7
 2684 003c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2685 003e 002B     		cmp	r3, #0
 2686 0040 01D0     		beq	.L139
1095:./i2c/i2c-std.c ****       return error;
 2687              		.loc 2 1095 14
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s 			page 88


 2688 0042 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2689 0044 2EE0     		b	.L138
 2690              	.L139:
1096:./i2c/i2c-std.c **** 
1097:./i2c/i2c-std.c ****    //uart_print(USART1,"TX_SLAVE_ADDR ...\r\n");
1098:./i2c/i2c-std.c ****     //EV5: send the slave address with write operation master transmit 
1099:./i2c/i2c-std.c ****     error=i2c_send_7bit_slave_address_wr_std(I2CX,slave_address);
 2691              		.loc 2 1099 11
 2692 0046 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2693 0048 1946     		mov	r1, r3
 2694 004a 7868     		ldr	r0, [r7, #4]
 2695 004c FFF7FEFF 		bl	i2c_send_7bit_slave_address_wr_std
 2696 0050 0346     		mov	r3, r0
 2697 0052 FB73     		strb	r3, [r7, #15]
1100:./i2c/i2c-std.c ****     if(error!=I2C_OK) 
 2698              		.loc 2 1100 7
 2699 0054 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2700 0056 002B     		cmp	r3, #0
 2701 0058 01D0     		beq	.L140
1101:./i2c/i2c-std.c ****       return error;
 2702              		.loc 2 1101 14
 2703 005a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2704 005c 22E0     		b	.L138
 2705              	.L140:
1102:./i2c/i2c-std.c **** 
1103:./i2c/i2c-std.c ****    //uart_print(USART1,"TX_BASE_ADDR ...\r\n");
1104:./i2c/i2c-std.c ****     //Ev6: send the byte :: the base address in the slave Memory/register map to start writing to 
1105:./i2c/i2c-std.c ****     error=i2c_write_byte_std(I2CX,base_address);
 2706              		.loc 2 1105 11
 2707 005e BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 2708 0060 1946     		mov	r1, r3
 2709 0062 7868     		ldr	r0, [r7, #4]
 2710 0064 FFF7FEFF 		bl	i2c_write_byte_std
 2711 0068 0346     		mov	r3, r0
 2712 006a FB73     		strb	r3, [r7, #15]
1106:./i2c/i2c-std.c ****     if(error!=I2C_OK) 
 2713              		.loc 2 1106 7
 2714 006c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2715 006e 002B     		cmp	r3, #0
 2716 0070 01D0     		beq	.L141
1107:./i2c/i2c-std.c ****       return error;
 2717              		.loc 2 1107 14
 2718 0072 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2719 0074 16E0     		b	.L138
 2720              	.L141:
1108:./i2c/i2c-std.c **** 
1109:./i2c/i2c-std.c ****    //uart_print(USART1,"TX_REG_DATA ...\r\n");
1110:./i2c/i2c-std.c ****     //Ev6: send the byte
1111:./i2c/i2c-std.c ****     error=i2c_write_byte_std(I2CX,data);
 2721              		.loc 2 1111 11
 2722 0076 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 2723 0078 1946     		mov	r1, r3
 2724 007a 7868     		ldr	r0, [r7, #4]
 2725 007c FFF7FEFF 		bl	i2c_write_byte_std
 2726 0080 0346     		mov	r3, r0
 2727 0082 FB73     		strb	r3, [r7, #15]
1112:./i2c/i2c-std.c ****     if(error!=I2C_OK) 
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s 			page 89


 2728              		.loc 2 1112 7
 2729 0084 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2730 0086 002B     		cmp	r3, #0
 2731 0088 01D0     		beq	.L142
1113:./i2c/i2c-std.c ****       return error;
 2732              		.loc 2 1113 14
 2733 008a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2734 008c 0AE0     		b	.L138
 2735              	.L142:
1114:./i2c/i2c-std.c **** 
1115:./i2c/i2c-std.c ****    //uart_print(USART1,"TX_STOP ...\r\n");
1116:./i2c/i2c-std.c ****     // generate the stop condition 
1117:./i2c/i2c-std.c ****     error=i2c_stop_std(I2CX);
 2736              		.loc 2 1117 11
 2737 008e 7868     		ldr	r0, [r7, #4]
 2738 0090 FFF7FEFF 		bl	i2c_stop_std
 2739 0094 0346     		mov	r3, r0
 2740 0096 FB73     		strb	r3, [r7, #15]
1118:./i2c/i2c-std.c ****     if(error!=I2C_OK) 
 2741              		.loc 2 1118 7
 2742 0098 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2743 009a 002B     		cmp	r3, #0
 2744 009c 01D0     		beq	.L143
1119:./i2c/i2c-std.c ****       return error;
 2745              		.loc 2 1119 14
 2746 009e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2747 00a0 00E0     		b	.L138
 2748              	.L143:
1120:./i2c/i2c-std.c **** 
1121:./i2c/i2c-std.c ****     return I2C_OK;
 2749              		.loc 2 1121 12
 2750 00a2 0023     		movs	r3, #0
 2751              	.L138:
1122:./i2c/i2c-std.c **** }
 2752              		.loc 2 1122 1
 2753 00a4 1846     		mov	r0, r3
 2754 00a6 1037     		adds	r7, r7, #16
 2755              	.LCFI145:
 2756              		.cfi_def_cfa_offset 8
 2757 00a8 BD46     		mov	sp, r7
 2758              	.LCFI146:
 2759              		.cfi_def_cfa_register 13
 2760              		@ sp needed
 2761 00aa 80BD     		pop	{r7, pc}
 2762              		.cfi_endproc
 2763              	.LFE58:
 2765              		.section	.text.i2c_write_7bit_base_nbyte_std,"ax",%progbits
 2766              		.align	1
 2767              		.global	i2c_write_7bit_base_nbyte_std
 2768              		.syntax unified
 2769              		.thumb
 2770              		.thumb_func
 2772              	i2c_write_7bit_base_nbyte_std:
 2773              	.LFB59:
1123:./i2c/i2c-std.c **** //-------------------------------------------------------------------------------------------------
1124:./i2c/i2c-std.c **** uint8_t i2c_write_7bit_base_nbyte_std(I2C_TypeDef* I2CX, uint8_t  slave_address,uint8_t base_addres
1125:./i2c/i2c-std.c **** {
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s 			page 90


 2774              		.loc 2 1125 1
 2775              		.cfi_startproc
 2776              		@ args = 4, pretend = 0, frame = 24
 2777              		@ frame_needed = 1, uses_anonymous_args = 0
 2778 0000 80B5     		push	{r7, lr}
 2779              	.LCFI147:
 2780              		.cfi_def_cfa_offset 8
 2781              		.cfi_offset 7, -8
 2782              		.cfi_offset 14, -4
 2783 0002 86B0     		sub	sp, sp, #24
 2784              	.LCFI148:
 2785              		.cfi_def_cfa_offset 32
 2786 0004 00AF     		add	r7, sp, #0
 2787              	.LCFI149:
 2788              		.cfi_def_cfa_register 7
 2789 0006 F860     		str	r0, [r7, #12]
 2790 0008 7B60     		str	r3, [r7, #4]
 2791 000a 0B46     		mov	r3, r1
 2792 000c FB72     		strb	r3, [r7, #11]
 2793 000e 1346     		mov	r3, r2
 2794 0010 BB72     		strb	r3, [r7, #10]
1126:./i2c/i2c-std.c ****  // get the error of the any sub operation where a non-zero value indicate an error 
1127:./i2c/i2c-std.c ****   uint8_t error=0; 
 2795              		.loc 2 1127 11
 2796 0012 0023     		movs	r3, #0
 2797 0014 FB75     		strb	r3, [r7, #23]
1128:./i2c/i2c-std.c **** 
1129:./i2c/i2c-std.c ****   //wait check that the I2c module is not busy
1130:./i2c/i2c-std.c ****     if((error=i2c_ready_std(I2CX))) 
 2798              		.loc 2 1130 15
 2799 0016 F868     		ldr	r0, [r7, #12]
 2800 0018 FFF7FEFF 		bl	i2c_ready_std
 2801 001c 0346     		mov	r3, r0
 2802 001e FB75     		strb	r3, [r7, #23]
 2803              		.loc 2 1130 7
 2804 0020 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2805 0022 002B     		cmp	r3, #0
 2806 0024 01D0     		beq	.L145
1131:./i2c/i2c-std.c ****         return error;
 2807              		.loc 2 1131 16
 2808 0026 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2809 0028 38E0     		b	.L146
 2810              	.L145:
1132:./i2c/i2c-std.c ****   // send the start condition 
1133:./i2c/i2c-std.c ****     error=i2c_start_std(I2CX);
 2811              		.loc 2 1133 11
 2812 002a F868     		ldr	r0, [r7, #12]
 2813 002c FFF7FEFF 		bl	i2c_start_std
 2814 0030 0346     		mov	r3, r0
 2815 0032 FB75     		strb	r3, [r7, #23]
1134:./i2c/i2c-std.c ****     if(error!=I2C_OK) 
 2816              		.loc 2 1134 7
 2817 0034 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2818 0036 002B     		cmp	r3, #0
 2819 0038 01D0     		beq	.L147
1135:./i2c/i2c-std.c ****       return error;
 2820              		.loc 2 1135 14
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s 			page 91


 2821 003a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2822 003c 2EE0     		b	.L146
 2823              	.L147:
1136:./i2c/i2c-std.c **** 
1137:./i2c/i2c-std.c ****     //EV5: send the slave address with write operation master transmit 
1138:./i2c/i2c-std.c ****     error=i2c_send_7bit_slave_address_wr_std(I2CX,slave_address);
 2824              		.loc 2 1138 11
 2825 003e FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 2826 0040 1946     		mov	r1, r3
 2827 0042 F868     		ldr	r0, [r7, #12]
 2828 0044 FFF7FEFF 		bl	i2c_send_7bit_slave_address_wr_std
 2829 0048 0346     		mov	r3, r0
 2830 004a FB75     		strb	r3, [r7, #23]
1139:./i2c/i2c-std.c ****     if(error!=I2C_OK) 
 2831              		.loc 2 1139 7
 2832 004c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2833 004e 002B     		cmp	r3, #0
 2834 0050 01D0     		beq	.L148
1140:./i2c/i2c-std.c ****       return error;
 2835              		.loc 2 1140 14
 2836 0052 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2837 0054 22E0     		b	.L146
 2838              	.L148:
1141:./i2c/i2c-std.c **** 
1142:./i2c/i2c-std.c ****     //Ev6: send the byte :: the base address in the slave Memory/register map to start writing to 
1143:./i2c/i2c-std.c ****     error=i2c_write_byte_std(I2CX,base_address);
 2839              		.loc 2 1143 11
 2840 0056 BB7A     		ldrb	r3, [r7, #10]	@ zero_extendqisi2
 2841 0058 1946     		mov	r1, r3
 2842 005a F868     		ldr	r0, [r7, #12]
 2843 005c FFF7FEFF 		bl	i2c_write_byte_std
 2844 0060 0346     		mov	r3, r0
 2845 0062 FB75     		strb	r3, [r7, #23]
1144:./i2c/i2c-std.c ****     if(error!=I2C_OK) 
 2846              		.loc 2 1144 7
 2847 0064 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2848 0066 002B     		cmp	r3, #0
 2849 0068 01D0     		beq	.L149
1145:./i2c/i2c-std.c ****       return error;
 2850              		.loc 2 1145 14
 2851 006a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2852 006c 16E0     		b	.L146
 2853              	.L149:
1146:./i2c/i2c-std.c **** 
1147:./i2c/i2c-std.c ****     //Ev6: send the byte
1148:./i2c/i2c-std.c ****     error=i2c_write_nbyte_std(I2CX,buf,n);
 2854              		.loc 2 1148 11
 2855 006e 3A6A     		ldr	r2, [r7, #32]
 2856 0070 7968     		ldr	r1, [r7, #4]
 2857 0072 F868     		ldr	r0, [r7, #12]
 2858 0074 FFF7FEFF 		bl	i2c_write_nbyte_std
 2859 0078 0346     		mov	r3, r0
 2860 007a FB75     		strb	r3, [r7, #23]
1149:./i2c/i2c-std.c ****     if(error!=I2C_OK) 
 2861              		.loc 2 1149 7
 2862 007c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2863 007e 002B     		cmp	r3, #0
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s 			page 92


 2864 0080 01D0     		beq	.L150
1150:./i2c/i2c-std.c ****       return error;
 2865              		.loc 2 1150 14
 2866 0082 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2867 0084 0AE0     		b	.L146
 2868              	.L150:
1151:./i2c/i2c-std.c **** 
1152:./i2c/i2c-std.c ****     // generate the stop condition 
1153:./i2c/i2c-std.c ****     error=i2c_stop_std(I2CX);
 2869              		.loc 2 1153 11
 2870 0086 F868     		ldr	r0, [r7, #12]
 2871 0088 FFF7FEFF 		bl	i2c_stop_std
 2872 008c 0346     		mov	r3, r0
 2873 008e FB75     		strb	r3, [r7, #23]
1154:./i2c/i2c-std.c ****     if(error!=I2C_OK) 
 2874              		.loc 2 1154 7
 2875 0090 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2876 0092 002B     		cmp	r3, #0
 2877 0094 01D0     		beq	.L151
1155:./i2c/i2c-std.c ****       return error;
 2878              		.loc 2 1155 14
 2879 0096 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2880 0098 00E0     		b	.L146
 2881              	.L151:
1156:./i2c/i2c-std.c **** 
1157:./i2c/i2c-std.c ****     // all operation has succeeded no error to return 
1158:./i2c/i2c-std.c ****     return I2C_OK;
 2882              		.loc 2 1158 12
 2883 009a 0023     		movs	r3, #0
 2884              	.L146:
1159:./i2c/i2c-std.c **** 
1160:./i2c/i2c-std.c **** }
 2885              		.loc 2 1160 1
 2886 009c 1846     		mov	r0, r3
 2887 009e 1837     		adds	r7, r7, #24
 2888              	.LCFI150:
 2889              		.cfi_def_cfa_offset 8
 2890 00a0 BD46     		mov	sp, r7
 2891              	.LCFI151:
 2892              		.cfi_def_cfa_register 13
 2893              		@ sp needed
 2894 00a2 80BD     		pop	{r7, pc}
 2895              		.cfi_endproc
 2896              	.LFE59:
 2898              		.section	.text.i2c_read_7bit_base_byte_std,"ax",%progbits
 2899              		.align	1
 2900              		.global	i2c_read_7bit_base_byte_std
 2901              		.syntax unified
 2902              		.thumb
 2903              		.thumb_func
 2905              	i2c_read_7bit_base_byte_std:
 2906              	.LFB60:
1161:./i2c/i2c-std.c **** //-------------------------------------------------------------------------------------------------
1162:./i2c/i2c-std.c **** uint8_t i2c_read_7bit_base_byte_std(I2C_TypeDef* I2CX, uint8_t  slave_address,uint8_t base_address,
1163:./i2c/i2c-std.c **** {
 2907              		.loc 2 1163 1
 2908              		.cfi_startproc
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s 			page 93


 2909              		@ args = 0, pretend = 0, frame = 24
 2910              		@ frame_needed = 1, uses_anonymous_args = 0
 2911 0000 80B5     		push	{r7, lr}
 2912              	.LCFI152:
 2913              		.cfi_def_cfa_offset 8
 2914              		.cfi_offset 7, -8
 2915              		.cfi_offset 14, -4
 2916 0002 88B0     		sub	sp, sp, #32
 2917              	.LCFI153:
 2918              		.cfi_def_cfa_offset 40
 2919 0004 02AF     		add	r7, sp, #8
 2920              	.LCFI154:
 2921              		.cfi_def_cfa 7, 32
 2922 0006 F860     		str	r0, [r7, #12]
 2923 0008 7B60     		str	r3, [r7, #4]
 2924 000a 0B46     		mov	r3, r1
 2925 000c FB72     		strb	r3, [r7, #11]
 2926 000e 1346     		mov	r3, r2
 2927 0010 BB72     		strb	r3, [r7, #10]
1164:./i2c/i2c-std.c ****    
1165:./i2c/i2c-std.c ****   uint8_t error=0;
 2928              		.loc 2 1165 11
 2929 0012 0023     		movs	r3, #0
 2930 0014 FB75     		strb	r3, [r7, #23]
1166:./i2c/i2c-std.c ****    error=i2c_read_7bit_base_nbyte_std(I2CX,slave_address,base_address,(uint8_t *)data, 1);
 2931              		.loc 2 1166 10
 2932 0016 BA7A     		ldrb	r2, [r7, #10]	@ zero_extendqisi2
 2933 0018 F97A     		ldrb	r1, [r7, #11]	@ zero_extendqisi2
 2934 001a 0123     		movs	r3, #1
 2935 001c 0093     		str	r3, [sp]
 2936 001e 7B68     		ldr	r3, [r7, #4]
 2937 0020 F868     		ldr	r0, [r7, #12]
 2938 0022 FFF7FEFF 		bl	i2c_read_7bit_base_nbyte_std
 2939 0026 0346     		mov	r3, r0
 2940 0028 FB75     		strb	r3, [r7, #23]
1167:./i2c/i2c-std.c ****    //uart_print(USART1,"RX DATA:");
1168:./i2c/i2c-std.c ****    //uart_print_integer(USART1,*data,16);
1169:./i2c/i2c-std.c ****    //uart_print(USART1,"\r\n");
1170:./i2c/i2c-std.c ****   if(error!=I2C_OK)
 2941              		.loc 2 1170 5
 2942 002a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2943 002c 002B     		cmp	r3, #0
 2944 002e 01D0     		beq	.L153
1171:./i2c/i2c-std.c ****    return error;
 2945              		.loc 2 1171 11
 2946 0030 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2947 0032 00E0     		b	.L154
 2948              	.L153:
1172:./i2c/i2c-std.c ****   return I2C_OK;
 2949              		.loc 2 1172 10
 2950 0034 0023     		movs	r3, #0
 2951              	.L154:
1173:./i2c/i2c-std.c ****   
1174:./i2c/i2c-std.c ****   /*
1175:./i2c/i2c-std.c ****   // get the error of the any sub operation where a non-zero value indicate an error 
1176:./i2c/i2c-std.c ****   uint8_t error=0; 
1177:./i2c/i2c-std.c ****  //wait check that the I2c module is not busy
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s 			page 94


1178:./i2c/i2c-std.c ****     uart_print(USART1,"\nRX_BuSY ...\r\n");
1179:./i2c/i2c-std.c ****     error=i2c_ready_std(I2CX);
1180:./i2c/i2c-std.c ****     if(error)//(error=i2c_ready_std(I2CX))) 
1181:./i2c/i2c-std.c ****       return error;
1182:./i2c/i2c-std.c ****  
1183:./i2c/i2c-std.c ****   // send the start condition 
1184:./i2c/i2c-std.c **** //    uart_print(USART1,"start condition:");
1185:./i2c/i2c-std.c ****     uart_print(USART1,"RX_SB ...\r\n");
1186:./i2c/i2c-std.c ****     error=i2c_start_std(I2CX);
1187:./i2c/i2c-std.c ****     if(error)//(error=i2c_start_std(I2CX)))
1188:./i2c/i2c-std.c ****         return error;
1189:./i2c/i2c-std.c **** 
1190:./i2c/i2c-std.c ****     uart_print(USART1,"RX_SLAVE_ADDR ...\r\n");
1191:./i2c/i2c-std.c ****     //EV5: send the slave address with write operation master transmit 
1192:./i2c/i2c-std.c ****     error=i2c_send_7bit_slave_address_wr_std(I2CX,slave_address);
1193:./i2c/i2c-std.c ****     if(error)//(error=i2c_send_7bit_slave_address_wr_std(I2CX,slave_address)))
1194:./i2c/i2c-std.c ****         return error;
1195:./i2c/i2c-std.c **** 
1196:./i2c/i2c-std.c **** //    uart_print(USART1,"REG:");
1197:./i2c/i2c-std.c ****     uart_print(USART1,"RX_REG_DATA ...\r\n");
1198:./i2c/i2c-std.c ****     //Ev6: send the base byte
1199:./i2c/i2c-std.c ****     error=i2c_write_byte_std(I2CX,base_address);
1200:./i2c/i2c-std.c ****     if(error)//(error=i2c_write_byte_std(I2CX,base_address))) 
1201:./i2c/i2c-std.c ****       return error;
1202:./i2c/i2c-std.c **** 
1203:./i2c/i2c-std.c ****   // send the repeat start condition 
1204:./i2c/i2c-std.c ****     uart_print(USART1,"repeat start....\r\n");
1205:./i2c/i2c-std.c ****     error=i2c_start_std(I2CX);
1206:./i2c/i2c-std.c ****     if(error)//(error=i2c_start_std(I2CX)))
1207:./i2c/i2c-std.c ****         return error;
1208:./i2c/i2c-std.c **** 
1209:./i2c/i2c-std.c ****  // Enable Acknowledgment , clear POS flag
1210:./i2c/i2c-std.c ****     I2C_AcknowledgeConfig(I2CX , ENABLE);
1211:./i2c/i2c-std.c ****     I2C_NACKPositionConfig(I2CX , I2C_NACKPosition_Current);
1212:./i2c/i2c-std.c **** 
1213:./i2c/i2c-std.c ****  //EV5: send the slave address with read operation master transmit 
1214:./i2c/i2c-std.c ****     uart_print(USART1,"RX_ Slave RD: \r\n");
1215:./i2c/i2c-std.c ****     error=i2c_send_7bit_slave_address_rd_std(I2CX,slave_address);
1216:./i2c/i2c-std.c ****     if(error)//(error=i2c_send_7bit_slave_address_rd_std(I2CX,slave_address)))
1217:./i2c/i2c-std.c ****       return error;
1218:./i2c/i2c-std.c ****      (void)I2CX->SR1;
1219:./i2c/i2c-std.c ****      (void)I2CX->SR2;
1220:./i2c/i2c-std.c **** 
1221:./i2c/i2c-std.c ****     uart_print(USART1,"RX_DATA:");
1222:./i2c/i2c-std.c ****     error=i2c_read_lastbyte_std(I2CX,data);
1223:./i2c/i2c-std.c ****     uart_print_integer(USART1,*data,16);
1224:./i2c/i2c-std.c ****     uart_print(USART1,"\r\n");
1225:./i2c/i2c-std.c **** 
1226:./i2c/i2c-std.c ****    if(error)//(error=i2c_read_lastbyte_std(I2CX,data)))
1227:./i2c/i2c-std.c ****     return error;    
1228:./i2c/i2c-std.c **** 
1229:./i2c/i2c-std.c ****   // generate the stop condition : note stop generation is done implicitly by the  
1230:./i2c/i2c-std.c ****     uart_print(USART1,"RX_STOP :\r\n");
1231:./i2c/i2c-std.c ****     error=i2c_stop_std(I2CX);
1232:./i2c/i2c-std.c ****     if(error)//(error=i2c_stop_std(I2CX)))// if((error=i2c_wait_stop_event_std(I2CX)))
1233:./i2c/i2c-std.c ****       return error;
1234:./i2c/i2c-std.c **** 
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s 			page 95


1235:./i2c/i2c-std.c ****   // all operation has succeeded no error to return 
1236:./i2c/i2c-std.c ****     return I2C_OK;
1237:./i2c/i2c-std.c ****     */
1238:./i2c/i2c-std.c **** }
 2952              		.loc 2 1238 1
 2953 0036 1846     		mov	r0, r3
 2954 0038 1837     		adds	r7, r7, #24
 2955              	.LCFI155:
 2956              		.cfi_def_cfa_offset 8
 2957 003a BD46     		mov	sp, r7
 2958              	.LCFI156:
 2959              		.cfi_def_cfa_register 13
 2960              		@ sp needed
 2961 003c 80BD     		pop	{r7, pc}
 2962              		.cfi_endproc
 2963              	.LFE60:
 2965              		.section	.text.i2c_read_7bit_base_word_std,"ax",%progbits
 2966              		.align	1
 2967              		.global	i2c_read_7bit_base_word_std
 2968              		.syntax unified
 2969              		.thumb
 2970              		.thumb_func
 2972              	i2c_read_7bit_base_word_std:
 2973              	.LFB61:
1239:./i2c/i2c-std.c **** //-------------------------------------------------------------------------------------------------
1240:./i2c/i2c-std.c **** uint8_t i2c_read_7bit_base_word_std(I2C_TypeDef* I2CX, uint8_t  slave_address,uint8_t base_address,
1241:./i2c/i2c-std.c **** {
 2974              		.loc 2 1241 1
 2975              		.cfi_startproc
 2976              		@ args = 0, pretend = 0, frame = 24
 2977              		@ frame_needed = 1, uses_anonymous_args = 0
 2978 0000 80B5     		push	{r7, lr}
 2979              	.LCFI157:
 2980              		.cfi_def_cfa_offset 8
 2981              		.cfi_offset 7, -8
 2982              		.cfi_offset 14, -4
 2983 0002 88B0     		sub	sp, sp, #32
 2984              	.LCFI158:
 2985              		.cfi_def_cfa_offset 40
 2986 0004 02AF     		add	r7, sp, #8
 2987              	.LCFI159:
 2988              		.cfi_def_cfa 7, 32
 2989 0006 F860     		str	r0, [r7, #12]
 2990 0008 7B60     		str	r3, [r7, #4]
 2991 000a 0B46     		mov	r3, r1
 2992 000c FB72     		strb	r3, [r7, #11]
 2993 000e 1346     		mov	r3, r2
 2994 0010 BB72     		strb	r3, [r7, #10]
1242:./i2c/i2c-std.c ****   uint8_t error=0;
 2995              		.loc 2 1242 11
 2996 0012 0023     		movs	r3, #0
 2997 0014 FB75     		strb	r3, [r7, #23]
1243:./i2c/i2c-std.c ****   WORD_BYTES t;
1244:./i2c/i2c-std.c ****    t.word=0;
 2998              		.loc 2 1244 10
 2999 0016 0023     		movs	r3, #0
 3000 0018 BB82     		strh	r3, [r7, #20]	@ movhi
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s 			page 96


1245:./i2c/i2c-std.c ****   if((error=i2c_read_7bit_base_nbyte_std(I2CX,slave_address,base_address,(uint8_t *)t.bytes, 2)))
 3001              		.loc 2 1245 13
 3002 001a 07F11403 		add	r3, r7, #20
 3003 001e BA7A     		ldrb	r2, [r7, #10]	@ zero_extendqisi2
 3004 0020 F97A     		ldrb	r1, [r7, #11]	@ zero_extendqisi2
 3005 0022 0220     		movs	r0, #2
 3006 0024 0090     		str	r0, [sp]
 3007 0026 F868     		ldr	r0, [r7, #12]
 3008 0028 FFF7FEFF 		bl	i2c_read_7bit_base_nbyte_std
 3009 002c 0346     		mov	r3, r0
 3010 002e FB75     		strb	r3, [r7, #23]
 3011              		.loc 2 1245 5
 3012 0030 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 3013 0032 002B     		cmp	r3, #0
 3014 0034 01D0     		beq	.L156
1246:./i2c/i2c-std.c ****     return error;
 3015              		.loc 2 1246 12
 3016 0036 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 3017 0038 03E0     		b	.L158
 3018              	.L156:
1247:./i2c/i2c-std.c ****    *data=t.word;
 3019              		.loc 2 1247 11
 3020 003a BA8A     		ldrh	r2, [r7, #20]
 3021              		.loc 2 1247 9
 3022 003c 7B68     		ldr	r3, [r7, #4]
 3023 003e 1A80     		strh	r2, [r3]	@ movhi
1248:./i2c/i2c-std.c ****   return I2C_OK;
 3024              		.loc 2 1248 10
 3025 0040 0023     		movs	r3, #0
 3026              	.L158:
1249:./i2c/i2c-std.c ****   /*
1250:./i2c/i2c-std.c ****   // get the error of the any sub operation where a non-zero value indicate an error 
1251:./i2c/i2c-std.c ****   uint8_t error=0; 
1252:./i2c/i2c-std.c ****   uint8_t buf[2]; 
1253:./i2c/i2c-std.c ****   
1254:./i2c/i2c-std.c ****  //wait check that the I2c module is not busy
1255:./i2c/i2c-std.c ****     if((error=i2c_ready_std(I2CX))) 
1256:./i2c/i2c-std.c ****         return error;
1257:./i2c/i2c-std.c **** 
1258:./i2c/i2c-std.c ****   // send the start condition  (wait for EV5) as the end of start condition
1259:./i2c/i2c-std.c ****     if((error=i2c_start_std(I2CX))) 
1260:./i2c/i2c-std.c ****         return error;
1261:./i2c/i2c-std.c **** 
1262:./i2c/i2c-std.c ****     //EV5: send the slave address with write operation master transmit 
1263:./i2c/i2c-std.c ****     if((error=i2c_send_7bit_slave_address_wr_std(I2CX,slave_address)))
1264:./i2c/i2c-std.c ****         return error;
1265:./i2c/i2c-std.c **** 
1266:./i2c/i2c-std.c ****     //Ev6: send the base byte
1267:./i2c/i2c-std.c ****     if((error=i2c_write_byte_std(I2CX,base_address))) 
1268:./i2c/i2c-std.c ****         return error;
1269:./i2c/i2c-std.c **** 
1270:./i2c/i2c-std.c ****   // send the repeat start condition 
1271:./i2c/i2c-std.c ****     if((error=i2c_start_std(I2CX))) 
1272:./i2c/i2c-std.c ****         return error;
1273:./i2c/i2c-std.c ****  // Enable Acknowledgment , clear POS flag
1274:./i2c/i2c-std.c ****      I2C_AcknowledgeConfig(I2CX , ENABLE);
1275:./i2c/i2c-std.c ****      I2C_NACKPositionConfig(I2CX, I2C_NACKPosition_Current);
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s 			page 97


1276:./i2c/i2c-std.c **** 
1277:./i2c/i2c-std.c **** //EV5: send the slave address with read operation master transmit 
1278:./i2c/i2c-std.c ****     if((error=i2c_send_7bit_slave_address_rd_std(I2CX,slave_address)))
1279:./i2c/i2c-std.c ****         return error;
1280:./i2c/i2c-std.c ****      
1281:./i2c/i2c-std.c ****    if((error=i2c_read_last2byte_std(I2CX,buf)))
1282:./i2c/i2c-std.c ****     return error;
1283:./i2c/i2c-std.c ****     *data=(uint16_t)(buf[1]<<8 | buf[0]); 
1284:./i2c/i2c-std.c ****     // generate the stop condition : note stop generation is done implicitly by the  
1285:./i2c/i2c-std.c ****     if((error=i2c_wait_stop_event_std(I2CX)))
1286:./i2c/i2c-std.c ****         return error;
1287:./i2c/i2c-std.c **** 
1288:./i2c/i2c-std.c ****     // all operation has succeeded no error to return 
1289:./i2c/i2c-std.c ****     return I2C_OK;
1290:./i2c/i2c-std.c ****     */
1291:./i2c/i2c-std.c **** }
 3027              		.loc 2 1291 1 discriminator 1
 3028 0042 1846     		mov	r0, r3
 3029 0044 1837     		adds	r7, r7, #24
 3030              	.LCFI160:
 3031              		.cfi_def_cfa_offset 8
 3032 0046 BD46     		mov	sp, r7
 3033              	.LCFI161:
 3034              		.cfi_def_cfa_register 13
 3035              		@ sp needed
 3036 0048 80BD     		pop	{r7, pc}
 3037              		.cfi_endproc
 3038              	.LFE61:
 3040              		.section	.text.i2c_read_7bit_base_nbyte_std,"ax",%progbits
 3041              		.align	1
 3042              		.global	i2c_read_7bit_base_nbyte_std
 3043              		.syntax unified
 3044              		.thumb
 3045              		.thumb_func
 3047              	i2c_read_7bit_base_nbyte_std:
 3048              	.LFB62:
1292:./i2c/i2c-std.c **** //-------------------------------------------------------------------------------------------------
1293:./i2c/i2c-std.c **** uint8_t i2c_read_7bit_base_nbyte_std(I2C_TypeDef* I2CX, uint8_t  slave_address,uint8_t base_address
1294:./i2c/i2c-std.c **** {
 3049              		.loc 2 1294 1
 3050              		.cfi_startproc
 3051              		@ args = 4, pretend = 0, frame = 24
 3052              		@ frame_needed = 1, uses_anonymous_args = 0
 3053 0000 80B5     		push	{r7, lr}
 3054              	.LCFI162:
 3055              		.cfi_def_cfa_offset 8
 3056              		.cfi_offset 7, -8
 3057              		.cfi_offset 14, -4
 3058 0002 86B0     		sub	sp, sp, #24
 3059              	.LCFI163:
 3060              		.cfi_def_cfa_offset 32
 3061 0004 00AF     		add	r7, sp, #0
 3062              	.LCFI164:
 3063              		.cfi_def_cfa_register 7
 3064 0006 F860     		str	r0, [r7, #12]
 3065 0008 7B60     		str	r3, [r7, #4]
 3066 000a 0B46     		mov	r3, r1
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s 			page 98


 3067 000c FB72     		strb	r3, [r7, #11]
 3068 000e 1346     		mov	r3, r2
 3069 0010 BB72     		strb	r3, [r7, #10]
1295:./i2c/i2c-std.c ****   // get the error of the any sub operation where a non-zero value indicate an error 
1296:./i2c/i2c-std.c ****   uint8_t error=0; 
 3070              		.loc 2 1296 11
 3071 0012 0023     		movs	r3, #0
 3072 0014 FB75     		strb	r3, [r7, #23]
1297:./i2c/i2c-std.c **** 
1298:./i2c/i2c-std.c ****  //wait check that the I2c module is not busy
1299:./i2c/i2c-std.c ****   //wait check that the I2c module is not busy
1300:./i2c/i2c-std.c ****     //uart_print(USART1,"\nRX_BuSY ...\r\n");
1301:./i2c/i2c-std.c ****     if((error=i2c_ready_std(I2CX))) 
 3073              		.loc 2 1301 15
 3074 0016 F868     		ldr	r0, [r7, #12]
 3075 0018 FFF7FEFF 		bl	i2c_ready_std
 3076 001c 0346     		mov	r3, r0
 3077 001e FB75     		strb	r3, [r7, #23]
 3078              		.loc 2 1301 7
 3079 0020 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 3080 0022 002B     		cmp	r3, #0
 3081 0024 01D0     		beq	.L160
1302:./i2c/i2c-std.c ****         return error;
 3082              		.loc 2 1302 16
 3083 0026 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 3084 0028 50E0     		b	.L161
 3085              	.L160:
1303:./i2c/i2c-std.c ****     
1304:./i2c/i2c-std.c ****   // send the start condition 
1305:./i2c/i2c-std.c ****     //uart_print(USART1,"RX_SB ...\r\n");
1306:./i2c/i2c-std.c ****     error=i2c_start_std(I2CX);
 3086              		.loc 2 1306 11
 3087 002a F868     		ldr	r0, [r7, #12]
 3088 002c FFF7FEFF 		bl	i2c_start_std
 3089 0030 0346     		mov	r3, r0
 3090 0032 FB75     		strb	r3, [r7, #23]
1307:./i2c/i2c-std.c ****     if(error!=I2C_OK) 
 3091              		.loc 2 1307 7
 3092 0034 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 3093 0036 002B     		cmp	r3, #0
 3094 0038 01D0     		beq	.L162
1308:./i2c/i2c-std.c ****       return error;
 3095              		.loc 2 1308 14
 3096 003a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 3097 003c 46E0     		b	.L161
 3098              	.L162:
1309:./i2c/i2c-std.c **** 
1310:./i2c/i2c-std.c ****     //EV5: send the slave address with write operation master transmit 
1311:./i2c/i2c-std.c ****     //uart_print(USART1,"RX_SLAVE_ADDR_WR ...\r\n");
1312:./i2c/i2c-std.c ****     error=i2c_send_7bit_slave_address_wr_std(I2CX,slave_address);
 3099              		.loc 2 1312 11
 3100 003e FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 3101 0040 1946     		mov	r1, r3
 3102 0042 F868     		ldr	r0, [r7, #12]
 3103 0044 FFF7FEFF 		bl	i2c_send_7bit_slave_address_wr_std
 3104 0048 0346     		mov	r3, r0
 3105 004a FB75     		strb	r3, [r7, #23]
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s 			page 99


1313:./i2c/i2c-std.c ****     if(error!=I2C_OK) 
 3106              		.loc 2 1313 7
 3107 004c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 3108 004e 002B     		cmp	r3, #0
 3109 0050 01D0     		beq	.L163
1314:./i2c/i2c-std.c ****       return error;
 3110              		.loc 2 1314 14
 3111 0052 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 3112 0054 3AE0     		b	.L161
 3113              	.L163:
1315:./i2c/i2c-std.c **** 
1316:./i2c/i2c-std.c ****     //Ev6: send the base byte
1317:./i2c/i2c-std.c ****     //uart_print(USART1,"RX_REG_DATA ...\r\n");
1318:./i2c/i2c-std.c ****     error=i2c_write_byte_std(I2CX,base_address);
 3114              		.loc 2 1318 11
 3115 0056 BB7A     		ldrb	r3, [r7, #10]	@ zero_extendqisi2
 3116 0058 1946     		mov	r1, r3
 3117 005a F868     		ldr	r0, [r7, #12]
 3118 005c FFF7FEFF 		bl	i2c_write_byte_std
 3119 0060 0346     		mov	r3, r0
 3120 0062 FB75     		strb	r3, [r7, #23]
1319:./i2c/i2c-std.c ****     if(error!=I2C_OK) 
 3121              		.loc 2 1319 7
 3122 0064 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 3123 0066 002B     		cmp	r3, #0
 3124 0068 01D0     		beq	.L164
1320:./i2c/i2c-std.c ****       return error;
 3125              		.loc 2 1320 14
 3126 006a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 3127 006c 2EE0     		b	.L161
 3128              	.L164:
1321:./i2c/i2c-std.c ****         
1322:./i2c/i2c-std.c ****   // send the repeat start condition 
1323:./i2c/i2c-std.c ****     //uart_print(USART1,"repeat start....\r\n");
1324:./i2c/i2c-std.c ****     error=i2c_start_std(I2CX);
 3129              		.loc 2 1324 11
 3130 006e F868     		ldr	r0, [r7, #12]
 3131 0070 FFF7FEFF 		bl	i2c_start_std
 3132 0074 0346     		mov	r3, r0
 3133 0076 FB75     		strb	r3, [r7, #23]
1325:./i2c/i2c-std.c ****     if(error!=I2C_OK) 
 3134              		.loc 2 1325 7
 3135 0078 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 3136 007a 002B     		cmp	r3, #0
 3137 007c 01D0     		beq	.L165
1326:./i2c/i2c-std.c ****       return error;
 3138              		.loc 2 1326 14
 3139 007e FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 3140 0080 24E0     		b	.L161
 3141              	.L165:
1327:./i2c/i2c-std.c ****  // Enable Acknowledgment , clear POS flag
1328:./i2c/i2c-std.c ****      //I2C_AcknowledgeConfig(I2CX , ENABLE);
1329:./i2c/i2c-std.c ****      //I2C_NACKPositionConfig(I2CX , I2C_NACKPosition_Current);
1330:./i2c/i2c-std.c **** 
1331:./i2c/i2c-std.c **** //EV5: send the slave address with a read operation master transmit 
1332:./i2c/i2c-std.c ****     //uart_print(USART1,"RX_ SLAVE_ADDR_RD... \r\n");
1333:./i2c/i2c-std.c ****     error=i2c_send_7bit_slave_address_rd_std(I2CX,slave_address);
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s 			page 100


 3142              		.loc 2 1333 11
 3143 0082 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 3144 0084 1946     		mov	r1, r3
 3145 0086 F868     		ldr	r0, [r7, #12]
 3146 0088 FFF7FEFF 		bl	i2c_send_7bit_slave_address_rd_std
 3147 008c 0346     		mov	r3, r0
 3148 008e FB75     		strb	r3, [r7, #23]
1334:./i2c/i2c-std.c ****     if(error!=I2C_OK) 
 3149              		.loc 2 1334 7
 3150 0090 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 3151 0092 002B     		cmp	r3, #0
 3152 0094 01D0     		beq	.L166
1335:./i2c/i2c-std.c ****       return error;
 3153              		.loc 2 1335 14
 3154 0096 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 3155 0098 18E0     		b	.L161
 3156              	.L166:
1336:./i2c/i2c-std.c **** //EV7:     
1337:./i2c/i2c-std.c ****     //uart_print(USART1,"DATA RD .... \r\n");
1338:./i2c/i2c-std.c ****     error=i2c_read_nbyte_std(I2CX,buf,n);
 3157              		.loc 2 1338 11
 3158 009a 3B6A     		ldr	r3, [r7, #32]
 3159 009c 9BB2     		uxth	r3, r3
 3160 009e 1A46     		mov	r2, r3
 3161 00a0 7968     		ldr	r1, [r7, #4]
 3162 00a2 F868     		ldr	r0, [r7, #12]
 3163 00a4 FFF7FEFF 		bl	i2c_read_nbyte_std
 3164 00a8 0346     		mov	r3, r0
 3165 00aa FB75     		strb	r3, [r7, #23]
1339:./i2c/i2c-std.c ****     if(error!=I2C_OK) 
 3166              		.loc 2 1339 7
 3167 00ac FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 3168 00ae 002B     		cmp	r3, #0
 3169 00b0 01D0     		beq	.L167
1340:./i2c/i2c-std.c ****       return error;
 3170              		.loc 2 1340 14
 3171 00b2 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 3172 00b4 0AE0     		b	.L161
 3173              	.L167:
1341:./i2c/i2c-std.c **** 
1342:./i2c/i2c-std.c **** // generate the stop condition : note stop generation is done implicitly by the  
1343:./i2c/i2c-std.c ****     //uart_print(USART1,"Stop Condition: \r\n");
1344:./i2c/i2c-std.c ****    if((error=i2c_wait_stop_event_std(I2CX)))
 3174              		.loc 2 1344 14
 3175 00b6 F868     		ldr	r0, [r7, #12]
 3176 00b8 FFF7FEFF 		bl	i2c_wait_stop_event_std
 3177 00bc 0346     		mov	r3, r0
 3178 00be FB75     		strb	r3, [r7, #23]
 3179              		.loc 2 1344 6
 3180 00c0 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 3181 00c2 002B     		cmp	r3, #0
 3182 00c4 01D0     		beq	.L168
1345:./i2c/i2c-std.c ****     return error;
 3183              		.loc 2 1345 12
 3184 00c6 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 3185 00c8 00E0     		b	.L161
 3186              	.L168:
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s 			page 101


1346:./i2c/i2c-std.c **** 
1347:./i2c/i2c-std.c ****     // all operation has succeeded no error to return 
1348:./i2c/i2c-std.c ****     return I2C_OK;
 3187              		.loc 2 1348 12
 3188 00ca 0023     		movs	r3, #0
 3189              	.L161:
1349:./i2c/i2c-std.c **** }
 3190              		.loc 2 1349 1
 3191 00cc 1846     		mov	r0, r3
 3192 00ce 1837     		adds	r7, r7, #24
 3193              	.LCFI165:
 3194              		.cfi_def_cfa_offset 8
 3195 00d0 BD46     		mov	sp, r7
 3196              	.LCFI166:
 3197              		.cfi_def_cfa_register 13
 3198              		@ sp needed
 3199 00d2 80BD     		pop	{r7, pc}
 3200              		.cfi_endproc
 3201              	.LFE62:
 3203              		.text
 3204              	.Letext0:
 3205              		.file 3 "c:\\arm-tool\\gcc-arm-none-eabi-10.3-2021.10\\arm-none-eabi\\include\\machine\\_default_t
 3206              		.file 4 "c:\\arm-tool\\gcc-arm-none-eabi-10.3-2021.10\\arm-none-eabi\\include\\sys\\_stdint.h"
 3207              		.file 5 "./.driver/CMSIS/Device/STM32F10x/stm32f10x.h"
 3208              		.file 6 "./.driver/STM32F10x_StdPeriph_Driver/inc/stm32f10x_gpio.h"
 3209              		.file 7 "./.driver/STM32F10x_StdPeriph_Driver/inc/stm32f10x_i2c.h"
 3210              		.file 8 "c:\\arm-tool\\gcc-arm-none-eabi-10.3-2021.10\\lib\\gcc\\arm-none-eabi\\10.3.1\\include\\s
 3211              		.file 9 "./basic/structs.h"
 3212              		.file 10 "./.driver/CMSIS/Device/STM32F10x/system_stm32f10x.h"
 3213              		.file 11 "./i2c/i2c-std.h"
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s 			page 102


DEFINED SYMBOLS
                            *ABS*:00000000 i2c-std.c
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s:18     .text.__enable_irq:00000000 $t
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s:23     .text.__enable_irq:00000000 __enable_irq
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s:60     .text.__disable_irq:00000000 $t
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s:65     .text.__disable_irq:00000000 __disable_irq
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s:105    .data.I2Cx_Timeout:00000000 I2Cx_Timeout
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s:102    .data.I2Cx_Timeout:00000000 $d
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s:108    .text.i2c_ready_std:00000000 $t
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s:113    .text.i2c_ready_std:00000000 i2c_ready_std
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s:177    .text.i2c_ready_std:00000038 $d
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s:182    .text.i2c_wait_start_event_std:00000000 $t
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s:187    .text.i2c_wait_start_event_std:00000000 i2c_wait_start_event_std
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s:262    .text.i2c_wait_start_event_std:0000004c $d
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s:267    .text.i2c_wait_stop_event_std:00000000 $t
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s:272    .text.i2c_wait_stop_event_std:00000000 i2c_wait_stop_event_std
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s:364    .text.i2c_wait_stop_event_std:00000068 $d
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s:369    .text.i2c_wait_7bit_slave_address_wr_std:00000000 $t
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s:374    .text.i2c_wait_7bit_slave_address_wr_std:00000000 i2c_wait_7bit_slave_address_wr_std
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s:465    .text.i2c_wait_7bit_slave_address_wr_std:0000006c $d
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s:470    .text.i2c_wait_7bit_slave_address_rd_std:00000000 $t
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s:475    .text.i2c_wait_7bit_slave_address_rd_std:00000000 i2c_wait_7bit_slave_address_rd_std
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s:574    .text.i2c_wait_7bit_slave_address_rd_std:00000078 $d
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s:579    .text.i2c_wait_write_byte_btf_std:00000000 $t
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s:584    .text.i2c_wait_write_byte_btf_std:00000000 i2c_wait_write_byte_btf_std
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s:675    .text.i2c_wait_write_byte_btf_std:0000006c $d
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s:680    .text.i2c_wait_write_byte_txe_std:00000000 $t
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s:685    .text.i2c_wait_write_byte_txe_std:00000000 i2c_wait_write_byte_txe_std
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s:776    .text.i2c_wait_write_byte_txe_std:0000006c $d
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s:781    .text.i2c_wait_read_byte_rxne_std:00000000 $t
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s:786    .text.i2c_wait_read_byte_rxne_std:00000000 i2c_wait_read_byte_rxne_std
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s:878    .text.i2c_wait_read_byte_rxne_std:00000068 $d
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s:883    .text.i2c_wait_read_byte_btf_std:00000000 $t
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s:888    .text.i2c_wait_read_byte_btf_std:00000000 i2c_wait_read_byte_btf_std
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s:951    .text.i2c_wait_read_byte_btf_std:00000038 $d
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s:956    .text.i2c_start_std:00000000 $t
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s:961    .text.i2c_start_std:00000000 i2c_start_std
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s:1037   .text.i2c_stop_std:00000000 $t
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s:1042   .text.i2c_stop_std:00000000 i2c_stop_std
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s:1086   .text.i2c_send_7bit_slave_address_wr_std:00000000 $t
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s:1091   .text.i2c_send_7bit_slave_address_wr_std:00000000 i2c_send_7bit_slave_address_wr_std
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s:1171   .text.i2c_send_7bit_slave_address_rd_std:00000000 $t
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s:1176   .text.i2c_send_7bit_slave_address_rd_std:00000000 i2c_send_7bit_slave_address_rd_std
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s:1228   .text.i2c_write_byte_std:00000000 $t
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s:1233   .text.i2c_write_byte_std:00000000 i2c_write_byte_std
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s:1282   .text.i2c_write_nbyte_std:00000000 $t
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s:1287   .text.i2c_write_nbyte_std:00000000 i2c_write_nbyte_std
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s:1366   .text.i2c_read_lastbyte_std:00000000 $t
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s:1371   .text.i2c_read_lastbyte_std:00000000 i2c_read_lastbyte_std
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s:1473   .text.i2c_read_last2byte_std:00000000 $t
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s:1478   .text.i2c_read_last2byte_std:00000000 i2c_read_last2byte_std
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s:1596   .text.i2c_read_last3byte_std:00000000 $t
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s:1601   .text.i2c_read_last3byte_std:00000000 i2c_read_last3byte_std
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s:1747   .text.i2c_read_last3byte_std:000000c8 $d
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s:1754   .text.i2c_read_nbyte_std:00000000 $t
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s:1759   .text.i2c_read_nbyte_std:00000000 i2c_read_nbyte_std
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s:1964   .text.i2c_init_std:00000000 $t
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s 			page 103


C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s:1970   .text.i2c_init_std:00000000 i2c_init_std
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s:2128   .text.i2c_init_std:0000011c $d
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s:2134   .text.i2c_write_7bit_byte_std:00000000 $t
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s:2140   .text.i2c_write_7bit_byte_std:00000000 i2c_write_7bit_byte_std
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s:2251   .text.i2c_write_7bit_nbyte_std:00000000 $t
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s:2257   .text.i2c_write_7bit_nbyte_std:00000000 i2c_write_7bit_nbyte_std
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s:2368   .text.i2c_read_7bit_byte_std:00000000 $t
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s:2374   .text.i2c_read_7bit_byte_std:00000000 i2c_read_7bit_byte_std
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s:2508   .text.i2c_read_7bit_nbyte_std:00000000 i2c_read_7bit_nbyte_std
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s:2431   .text.i2c_read_7bit_word_std:00000000 $t
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s:2437   .text.i2c_read_7bit_word_std:00000000 i2c_read_7bit_word_std
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s:2502   .text.i2c_read_7bit_nbyte_std:00000000 $t
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s:2629   .text.i2c_write_7bit_base_byte_std:00000000 $t
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s:2635   .text.i2c_write_7bit_base_byte_std:00000000 i2c_write_7bit_base_byte_std
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s:2766   .text.i2c_write_7bit_base_nbyte_std:00000000 $t
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s:2772   .text.i2c_write_7bit_base_nbyte_std:00000000 i2c_write_7bit_base_nbyte_std
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s:2899   .text.i2c_read_7bit_base_byte_std:00000000 $t
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s:2905   .text.i2c_read_7bit_base_byte_std:00000000 i2c_read_7bit_base_byte_std
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s:3047   .text.i2c_read_7bit_base_nbyte_std:00000000 i2c_read_7bit_base_nbyte_std
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s:2966   .text.i2c_read_7bit_base_word_std:00000000 $t
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s:2972   .text.i2c_read_7bit_base_word_std:00000000 i2c_read_7bit_base_word_std
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s:3041   .text.i2c_read_7bit_base_nbyte_std:00000000 $t
                           .group:00000000 wm4.0.f4779009c199947b70d43074c2c41c8e
                           .group:00000000 wm4.stm32f10x.h.50.d4f13d34ecdc4ac490487d4d35cb5131
                           .group:00000000 wm4.core_cm3.h.25.d35e9a9b04ec4aaebae9bf79fff061f9
                           .group:00000000 wm4._newlib_version.h.4.bfdf54b0af045d4a71376ae00f63a22c
                           .group:00000000 wm4.features.h.33.318b64d71e0957639cfb30f1db1f7ec8
                           .group:00000000 wm4._default_types.h.15.247e5cd201eca3442cbf5404108c4935
                           .group:00000000 wm4._intsup.h.10.48bafbb683905c4daa4565a85aeeb264
                           .group:00000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:00000000 wm4.stdint.h.23.d53047a68f4a85177f80b422d52785ed
                           .group:00000000 wm4.core_cm3.h.113.b286929a54d33b4c8909a7132437b244
                           .group:00000000 wm4.stm32f10x.h.525.b40cb5ee4fd40825ea8ccc10ea6f4722
                           .group:00000000 wm4.stm32f10x_adc.h.82.085dab8bb2bdf6609e97ee2fc7a88347
                           .group:00000000 wm4.stm32f10x_bkp.h.24.9f1bb2b1135ba72667dd3fcde11cf4b7
                           .group:00000000 wm4.stm32f10x_can.h.24.b871c380ea975c71825bf46cccde3c7a
                           .group:00000000 wm4.stm32f10x_cec.h.24.a1ee61cba6b8120b5bab40528e933770
                           .group:00000000 wm4.stm32f10x_dac.h.24.39482d0fe30ddea181f0c79f49fb629e
                           .group:00000000 wm4.stm32f10x_dbgmcu.h.24.f73145056e79bc5a93dd6677b2b33d54
                           .group:00000000 wm4.stm32f10x_dma.h.24.a48d4478db5b2956954d84bc5fd35ae1
                           .group:00000000 wm4.stm32f10x_exti.h.24.377f48157d7e463bb3841cf6c97a1c93
                           .group:00000000 wm4.stm32f10x_flash.h.24.877157533caf7ce4331c44a3d0ea5612
                           .group:00000000 wm4.stm32f10x_fsmc.h.24.0518485f192fab09dd5cfc912ded3186
                           .group:00000000 wm4.stm32f10x_gpio.h.24.b627ee324fedf5e3b8730fa015ea30de
                           .group:00000000 wm4.stm32f10x_i2c.h.24.8bc26b82f9e7563ca7234eabea47534c
                           .group:00000000 wm4.stm32f10x_iwdg.h.24.129c4cff233d2076aefd5fc4fbf5956b
                           .group:00000000 wm4.stm32f10x_pwr.h.24.98a178bf0c8fa18634174f1c1123c7bc
                           .group:00000000 wm4.stm32f10x_rcc.h.24.43948985157a0da383ddce718b66f782
                           .group:00000000 wm4.stm32f10x_rtc.h.24.496e77df0282a7f4dc79c6de18da3ecc
                           .group:00000000 wm4.stm32f10x_sdio.h.24.646055cc54873a75158b5d1015b409e6
                           .group:00000000 wm4.stm32f10x_spi.h.24.e7b2623920274a1745e534a7a7156e76
                           .group:00000000 wm4.stm32f10x_tim.h.24.24ac72f04686046a18ee9117ff7bba1f
                           .group:00000000 wm4.stm32f10x_usart.h.24.cf5f8d8e971fad2927ee799886f23b78
                           .group:00000000 wm4.stm32f10x_wwdg.h.24.7f7037b09db3a78d5a9de97b2cba748a
                           .group:00000000 wm4.misc.h.24.c54738789d48fd25c957e9d7c7349497
                           .group:00000000 wm4.stm32f10x.h.8349.9a0c7ea810a74ad6d06203f1a551aebb
                           .group:00000000 wm4.ieeefp.h.77.25247dc27dbe3b23bfe98c2dc18f6ac5
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s 			page 104


                           .group:00000000 wm4.newlib.h.8.4679f89e52c9f69cd44f3a27cd28c759
                           .group:00000000 wm4.config.h.224.79362c3cdb280fe0b8d95bd0bc4d5c54
                           .group:00000000 wm4._ansi.h.31.de524f58584151836e90d8620a16f8e8
                           .group:00000000 wm4.stdlib.h.13.4ed386f5c1a80d71e72172885d946ef2
                           .group:00000000 wm4.stddef.h.181.13772e73e5434e8cc4fafaaddad2b5da
                           .group:00000000 wm4.stddef.h.39.cf3ebec0bc8c9e3d2f276a64e0fe5e7a
                           .group:00000000 wm4._types.h.20.dd0d04dca3800a0d2a6129b87f3adbb2
                           .group:00000000 wm4.stddef.h.155.3588ebfdd1e8c7ede80509bb9c3b8009
                           .group:00000000 wm4._types.h.127.34941de1b2539d59d5cac00e0dd27a45
                           .group:00000000 wm4.reent.h.17.e292bf8b0bec6c96e131a54347145a30
                           .group:00000000 wm4.lock.h.2.1461d1fff82dffe8bfddc23307f6484f
                           .group:00000000 wm4.reent.h.77.32fd7d280fc2a40b0797abce5beaf6e3
                           .group:00000000 wm4.assert.h.11.db24e541f16414db224bf986d21017e2
                           .group:00000000 wm4.reent.h.504.40d20ade344680fbcb6a0178bf7ae09e
                           .group:00000000 wm4.cdefs.h.49.39045112216f6a021dbdffe3bf5accce
                           .group:00000000 wm4.alloca.h.8.dfc0c703c47ec3e69746825b17d9e66d
                           .group:00000000 wm4.stdlib.h.56.f4862cfbf4363a1db01842d5bdf72c18
                           .group:00000000 wm4.stdio.h.27.3fc80220048df77954e38daec3bb9670
                           .group:00000000 wm4.stddef.h.155.ba788add86a0e365f264484f110c3c29
                           .group:00000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:00000000 wm4.types.h.40.8b6acba56cefbb11746718204edc8f5e
                           .group:00000000 wm4._endian.h.31.65a10590763c3dde1ac4a7f66d7d4891
                           .group:00000000 wm4.endian.h.9.49f3a4695c1b61e8a0808de3c4a106cb
                           .group:00000000 wm4._timeval.h.32.bec3221fa7a9bb0bdde696c9c57e47d2
                           .group:00000000 wm4.timespec.h.41.d855182eb0e690443ab8651bcedca6e1
                           .group:00000000 wm4.select.h.19.40cd3f2bfc456b193b790c2754690ebf
                           .group:00000000 wm4.types.h.51.5571ec98f267d17d3c670b7a3ba33afa
                           .group:00000000 wm4.sched.h.22.c60982713a5c428609783c78f9c78d95
                           .group:00000000 wm4._pthreadtypes.h.36.fcee9961c35163dde6267ef772ad1972
                           .group:00000000 wm4.stdio.h.2.4aa87247282eca6c8f36f9de33d8df1a
                           .group:00000000 wm4.stdio.h.81.60a2ded7dae310b81f9d6907fe5e3dbf
                           .group:00000000 wm4.stdarg.h.31.3fa7b8f6daaa31edd1696c08c77f2a73
                           .group:00000000 wm4.stdalign.h.27.0aad28df4d66a8553430227d1bac48aa
                           .group:00000000 wm4.ctype.h.34.80f174baaec468e2eb1c07380b0b3287
                           .group:00000000 wm4.inttypes.h.14.b28deb26920e51e0da310220ef0f9003
                           .group:00000000 wm4.inttypes.h.28.c3e61b48c6ae3a7cb62609add2dd53d1
                           .group:00000000 wm4.math.h.13.4f4c30988c5d76b6bf30dd7e2791b7c6
                           .group:00000000 wm4.syslimits.h.34.de5cbd310098bc5895998b6bde577ed2
                           .group:00000000 wm4.limits.h.9.70fb0ada6f71b16202a66baaa6d8ea70
                           .group:00000000 wm4.limits.h.60.56a1ae353e2028a24298ec6463b8b593
                           .group:00000000 wm4.string.h.8.c4b8571ce60dff2817f43fec8b86aecd
                           .group:00000000 wm4.basic.h.43.2d669d0e281f2a7583ad0da99046413d
                           .group:00000000 wm4.phy.h.43.a806668fd6b193a83e00fcf9e3814821
                           .group:00000000 wm4.structs.h.12.142e94c12fffe9b2bba6755d00a8ad91
                           .group:00000000 wm4.time.h.12.ca6eecf26198e1bc6166f71fd8292735
                           .group:00000000 wm4.initmacro.h.4.2927af5a543f65dade9f92f80a04dc35
                           .group:00000000 wm4.i2ccom.h.10.147b279fb90e839345ab35ddb589e0ce
                           .group:00000000 wm4.i2cstd.h.10.d432c3988f9748933a79fb991e070438
                           .group:00000000 wm4.i2c.h.24.666d2983f106290f51d8fe2e4e0034bc
                           .group:00000000 wm4.mpu6050.h.10.38cdb8b04d26be567bd69a6269d225c3
                           .group:00000000 wm4.uart.h.10.038a6d9ab9b8d6aefd66f3a92e73c3f1
                           .group:00000000 wm4.lcd.h.11.3a2e2f95e46d234fe99d1d3e8f20de18
                           .group:00000000 wm4.systemtask.h.12.296b6a27be8b79a110bf5281d2fc993a

UNDEFINED SYMBOLS
SystemCoreClock
RCC_APB2PeriphClockCmd
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccnjIPNI.s 			page 105


RCC_APB1PeriphClockCmd
GPIO_StructInit
GPIO_Init
RCC_APB1PeriphResetCmd
I2C_StructInit
I2C_Init
I2C_AcknowledgeConfig
I2C_NACKPositionConfig
