ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"i2c-std.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.__enable_irq,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  23              	__enable_irq:
  24              	.LFB0:
  25              		.file 1 "./.driver/CMSIS/Core/core_cm3.h"
   1:./.driver/CMSIS/Core/core_cm3.h **** /**************************************************************************//**
   2:./.driver/CMSIS/Core/core_cm3.h ****  * @file     core_cm3.h
   3:./.driver/CMSIS/Core/core_cm3.h ****  * @brief    CMSIS Cortex-M3 Core Peripheral Access Layer Header File
   4:./.driver/CMSIS/Core/core_cm3.h ****  * @version  V1.30
   5:./.driver/CMSIS/Core/core_cm3.h ****  * @date     30. October 2009
   6:./.driver/CMSIS/Core/core_cm3.h ****  *
   7:./.driver/CMSIS/Core/core_cm3.h ****  * @note
   8:./.driver/CMSIS/Core/core_cm3.h ****  * Copyright (C) 2009 ARM Limited. All rights reserved.
   9:./.driver/CMSIS/Core/core_cm3.h ****  *
  10:./.driver/CMSIS/Core/core_cm3.h ****  * @par
  11:./.driver/CMSIS/Core/core_cm3.h ****  * ARM Limited (ARM) is supplying this software for use with Cortex-M 
  12:./.driver/CMSIS/Core/core_cm3.h ****  * processor based microcontrollers.  This file can be freely distributed 
  13:./.driver/CMSIS/Core/core_cm3.h ****  * within development tools that are supporting such ARM based processors. 
  14:./.driver/CMSIS/Core/core_cm3.h ****  *
  15:./.driver/CMSIS/Core/core_cm3.h ****  * @par
  16:./.driver/CMSIS/Core/core_cm3.h ****  * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
  17:./.driver/CMSIS/Core/core_cm3.h ****  * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
  18:./.driver/CMSIS/Core/core_cm3.h ****  * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
  19:./.driver/CMSIS/Core/core_cm3.h ****  * ARM SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL, OR
  20:./.driver/CMSIS/Core/core_cm3.h ****  * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
  21:./.driver/CMSIS/Core/core_cm3.h ****  *
  22:./.driver/CMSIS/Core/core_cm3.h ****  ******************************************************************************/
  23:./.driver/CMSIS/Core/core_cm3.h **** 
  24:./.driver/CMSIS/Core/core_cm3.h **** #ifndef __CM3_CORE_H__
  25:./.driver/CMSIS/Core/core_cm3.h **** #define __CM3_CORE_H__
  26:./.driver/CMSIS/Core/core_cm3.h **** 
  27:./.driver/CMSIS/Core/core_cm3.h **** /** @addtogroup CMSIS_CM3_core_LintCinfiguration CMSIS CM3 Core Lint Configuration
  28:./.driver/CMSIS/Core/core_cm3.h ****  *
  29:./.driver/CMSIS/Core/core_cm3.h ****  * List of Lint messages which will be suppressed and not shown:
  30:./.driver/CMSIS/Core/core_cm3.h ****  *   - Error 10: \n
  31:./.driver/CMSIS/Core/core_cm3.h ****  *     register uint32_t __regBasePri         __asm("basepri"); \n
  32:./.driver/CMSIS/Core/core_cm3.h ****  *     Error 10: Expecting ';'
  33:./.driver/CMSIS/Core/core_cm3.h ****  * .
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s 			page 2


  34:./.driver/CMSIS/Core/core_cm3.h ****  *   - Error 530: \n
  35:./.driver/CMSIS/Core/core_cm3.h ****  *     return(__regBasePri); \n
  36:./.driver/CMSIS/Core/core_cm3.h ****  *     Warning 530: Symbol '__regBasePri' (line 264) not initialized
  37:./.driver/CMSIS/Core/core_cm3.h ****  * . 
  38:./.driver/CMSIS/Core/core_cm3.h ****  *   - Error 550: \n
  39:./.driver/CMSIS/Core/core_cm3.h ****  *     __regBasePri = (basePri & 0x1ff); \n
  40:./.driver/CMSIS/Core/core_cm3.h ****  *     Warning 550: Symbol '__regBasePri' (line 271) not accessed
  41:./.driver/CMSIS/Core/core_cm3.h ****  * .
  42:./.driver/CMSIS/Core/core_cm3.h ****  *   - Error 754: \n
  43:./.driver/CMSIS/Core/core_cm3.h ****  *     uint32_t RESERVED0[24]; \n
  44:./.driver/CMSIS/Core/core_cm3.h ****  *     Info 754: local structure member '<some, not used in the HAL>' (line 109, file ./cm3_core.h)
  45:./.driver/CMSIS/Core/core_cm3.h ****  * .
  46:./.driver/CMSIS/Core/core_cm3.h ****  *   - Error 750: \n
  47:./.driver/CMSIS/Core/core_cm3.h ****  *     #define __CM3_CORE_H__ \n
  48:./.driver/CMSIS/Core/core_cm3.h ****  *     Info 750: local macro '__CM3_CORE_H__' (line 43, file./cm3_core.h) not referenced
  49:./.driver/CMSIS/Core/core_cm3.h ****  * .
  50:./.driver/CMSIS/Core/core_cm3.h ****  *   - Error 528: \n
  51:./.driver/CMSIS/Core/core_cm3.h ****  *     static __INLINE void NVIC_DisableIRQ(uint32_t IRQn) \n
  52:./.driver/CMSIS/Core/core_cm3.h ****  *     Warning 528: Symbol 'NVIC_DisableIRQ(unsigned int)' (line 419, file ./cm3_core.h) not refere
  53:./.driver/CMSIS/Core/core_cm3.h ****  * .
  54:./.driver/CMSIS/Core/core_cm3.h ****  *   - Error 751: \n
  55:./.driver/CMSIS/Core/core_cm3.h ****  *     } InterruptType_Type; \n
  56:./.driver/CMSIS/Core/core_cm3.h ****  *     Info 751: local typedef 'InterruptType_Type' (line 170, file ./cm3_core.h) not referenced
  57:./.driver/CMSIS/Core/core_cm3.h ****  * .
  58:./.driver/CMSIS/Core/core_cm3.h ****  * Note:  To re-enable a Message, insert a space before 'lint' *
  59:./.driver/CMSIS/Core/core_cm3.h ****  *
  60:./.driver/CMSIS/Core/core_cm3.h ****  */
  61:./.driver/CMSIS/Core/core_cm3.h **** 
  62:./.driver/CMSIS/Core/core_cm3.h **** /*lint -save */
  63:./.driver/CMSIS/Core/core_cm3.h **** /*lint -e10  */
  64:./.driver/CMSIS/Core/core_cm3.h **** /*lint -e530 */
  65:./.driver/CMSIS/Core/core_cm3.h **** /*lint -e550 */
  66:./.driver/CMSIS/Core/core_cm3.h **** /*lint -e754 */
  67:./.driver/CMSIS/Core/core_cm3.h **** /*lint -e750 */
  68:./.driver/CMSIS/Core/core_cm3.h **** /*lint -e528 */
  69:./.driver/CMSIS/Core/core_cm3.h **** /*lint -e751 */
  70:./.driver/CMSIS/Core/core_cm3.h **** 
  71:./.driver/CMSIS/Core/core_cm3.h **** 
  72:./.driver/CMSIS/Core/core_cm3.h **** /** @addtogroup CMSIS_CM3_core_definitions CM3 Core Definitions
  73:./.driver/CMSIS/Core/core_cm3.h ****   This file defines all structures and symbols for CMSIS core:
  74:./.driver/CMSIS/Core/core_cm3.h ****     - CMSIS version number
  75:./.driver/CMSIS/Core/core_cm3.h ****     - Cortex-M core registers and bitfields
  76:./.driver/CMSIS/Core/core_cm3.h ****     - Cortex-M core peripheral base address
  77:./.driver/CMSIS/Core/core_cm3.h ****   @{
  78:./.driver/CMSIS/Core/core_cm3.h ****  */
  79:./.driver/CMSIS/Core/core_cm3.h **** 
  80:./.driver/CMSIS/Core/core_cm3.h **** #ifdef __cplusplus
  81:./.driver/CMSIS/Core/core_cm3.h ****  extern "C" {
  82:./.driver/CMSIS/Core/core_cm3.h **** #endif 
  83:./.driver/CMSIS/Core/core_cm3.h **** 
  84:./.driver/CMSIS/Core/core_cm3.h **** #define __CM3_CMSIS_VERSION_MAIN  (0x01)                                                       /*!<
  85:./.driver/CMSIS/Core/core_cm3.h **** #define __CM3_CMSIS_VERSION_SUB   (0x30)                                                       /*!<
  86:./.driver/CMSIS/Core/core_cm3.h **** #define __CM3_CMSIS_VERSION       ((__CM3_CMSIS_VERSION_MAIN << 16) | __CM3_CMSIS_VERSION_SUB) /*!<
  87:./.driver/CMSIS/Core/core_cm3.h **** 
  88:./.driver/CMSIS/Core/core_cm3.h **** #define __CORTEX_M                (0x03)                                                       /*!<
  89:./.driver/CMSIS/Core/core_cm3.h **** 
  90:./.driver/CMSIS/Core/core_cm3.h **** #include <stdint.h>                           /* Include standard types */
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s 			page 3


  91:./.driver/CMSIS/Core/core_cm3.h **** 
  92:./.driver/CMSIS/Core/core_cm3.h **** #if defined (__ICCARM__)
  93:./.driver/CMSIS/Core/core_cm3.h ****   #include <intrinsics.h>                     /* IAR Intrinsics   */
  94:./.driver/CMSIS/Core/core_cm3.h **** #endif
  95:./.driver/CMSIS/Core/core_cm3.h **** 
  96:./.driver/CMSIS/Core/core_cm3.h **** 
  97:./.driver/CMSIS/Core/core_cm3.h **** #ifndef __NVIC_PRIO_BITS
  98:./.driver/CMSIS/Core/core_cm3.h ****   #define __NVIC_PRIO_BITS    4               /*!< standard definition for NVIC Priority Bits */
  99:./.driver/CMSIS/Core/core_cm3.h **** #endif
 100:./.driver/CMSIS/Core/core_cm3.h **** 
 101:./.driver/CMSIS/Core/core_cm3.h **** 
 102:./.driver/CMSIS/Core/core_cm3.h **** 
 103:./.driver/CMSIS/Core/core_cm3.h **** 
 104:./.driver/CMSIS/Core/core_cm3.h **** /**
 105:./.driver/CMSIS/Core/core_cm3.h ****  * IO definitions
 106:./.driver/CMSIS/Core/core_cm3.h ****  *
 107:./.driver/CMSIS/Core/core_cm3.h ****  * define access restrictions to peripheral registers
 108:./.driver/CMSIS/Core/core_cm3.h ****  */
 109:./.driver/CMSIS/Core/core_cm3.h **** 
 110:./.driver/CMSIS/Core/core_cm3.h **** #ifdef __cplusplus
 111:./.driver/CMSIS/Core/core_cm3.h ****   #define     __I     volatile                /*!< defines 'read only' permissions      */
 112:./.driver/CMSIS/Core/core_cm3.h **** #else
 113:./.driver/CMSIS/Core/core_cm3.h ****   #define     __I     volatile const          /*!< defines 'read only' permissions      */
 114:./.driver/CMSIS/Core/core_cm3.h **** #endif
 115:./.driver/CMSIS/Core/core_cm3.h **** #define     __O     volatile                  /*!< defines 'write only' permissions     */
 116:./.driver/CMSIS/Core/core_cm3.h **** #define     __IO    volatile                  /*!< defines 'read / write' permissions   */
 117:./.driver/CMSIS/Core/core_cm3.h **** 
 118:./.driver/CMSIS/Core/core_cm3.h **** 
 119:./.driver/CMSIS/Core/core_cm3.h **** 
 120:./.driver/CMSIS/Core/core_cm3.h **** /*******************************************************************************
 121:./.driver/CMSIS/Core/core_cm3.h ****  *                 Register Abstraction
 122:./.driver/CMSIS/Core/core_cm3.h ****  ******************************************************************************/
 123:./.driver/CMSIS/Core/core_cm3.h **** /** @addtogroup CMSIS_CM3_core_register CMSIS CM3 Core Register
 124:./.driver/CMSIS/Core/core_cm3.h ****  @{
 125:./.driver/CMSIS/Core/core_cm3.h **** */
 126:./.driver/CMSIS/Core/core_cm3.h **** 
 127:./.driver/CMSIS/Core/core_cm3.h **** 
 128:./.driver/CMSIS/Core/core_cm3.h **** /** @addtogroup CMSIS_CM3_NVIC CMSIS CM3 NVIC
 129:./.driver/CMSIS/Core/core_cm3.h ****   memory mapped structure for Nested Vectored Interrupt Controller (NVIC)
 130:./.driver/CMSIS/Core/core_cm3.h ****   @{
 131:./.driver/CMSIS/Core/core_cm3.h ****  */
 132:./.driver/CMSIS/Core/core_cm3.h **** typedef struct
 133:./.driver/CMSIS/Core/core_cm3.h **** {
 134:./.driver/CMSIS/Core/core_cm3.h ****   __IO uint32_t ISER[8];                      /*!< Offset: 0x000  Interrupt Set Enable Register    
 135:./.driver/CMSIS/Core/core_cm3.h ****        uint32_t RESERVED0[24];                                   
 136:./.driver/CMSIS/Core/core_cm3.h ****   __IO uint32_t ICER[8];                      /*!< Offset: 0x080  Interrupt Clear Enable Register  
 137:./.driver/CMSIS/Core/core_cm3.h ****        uint32_t RSERVED1[24];                                    
 138:./.driver/CMSIS/Core/core_cm3.h ****   __IO uint32_t ISPR[8];                      /*!< Offset: 0x100  Interrupt Set Pending Register   
 139:./.driver/CMSIS/Core/core_cm3.h ****        uint32_t RESERVED2[24];                                   
 140:./.driver/CMSIS/Core/core_cm3.h ****   __IO uint32_t ICPR[8];                      /*!< Offset: 0x180  Interrupt Clear Pending Register 
 141:./.driver/CMSIS/Core/core_cm3.h ****        uint32_t RESERVED3[24];                                   
 142:./.driver/CMSIS/Core/core_cm3.h ****   __IO uint32_t IABR[8];                      /*!< Offset: 0x200  Interrupt Active bit Register    
 143:./.driver/CMSIS/Core/core_cm3.h ****        uint32_t RESERVED4[56];                                   
 144:./.driver/CMSIS/Core/core_cm3.h ****   __IO uint8_t  IP[240];                      /*!< Offset: 0x300  Interrupt Priority Register (8Bit
 145:./.driver/CMSIS/Core/core_cm3.h ****        uint32_t RESERVED5[644];                                  
 146:./.driver/CMSIS/Core/core_cm3.h ****   __O  uint32_t STIR;                         /*!< Offset: 0xE00  Software Trigger Interrupt Regist
 147:./.driver/CMSIS/Core/core_cm3.h **** }  NVIC_Type;                                               
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s 			page 4


 148:./.driver/CMSIS/Core/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_NVIC */
 149:./.driver/CMSIS/Core/core_cm3.h **** 
 150:./.driver/CMSIS/Core/core_cm3.h **** 
 151:./.driver/CMSIS/Core/core_cm3.h **** /** @addtogroup CMSIS_CM3_SCB CMSIS CM3 SCB
 152:./.driver/CMSIS/Core/core_cm3.h ****   memory mapped structure for System Control Block (SCB)
 153:./.driver/CMSIS/Core/core_cm3.h ****   @{
 154:./.driver/CMSIS/Core/core_cm3.h ****  */
 155:./.driver/CMSIS/Core/core_cm3.h **** typedef struct
 156:./.driver/CMSIS/Core/core_cm3.h **** {
 157:./.driver/CMSIS/Core/core_cm3.h ****   __I  uint32_t CPUID;                        /*!< Offset: 0x00  CPU ID Base Register              
 158:./.driver/CMSIS/Core/core_cm3.h ****   __IO uint32_t ICSR;                         /*!< Offset: 0x04  Interrupt Control State Register  
 159:./.driver/CMSIS/Core/core_cm3.h ****   __IO uint32_t VTOR;                         /*!< Offset: 0x08  Vector Table Offset Register      
 160:./.driver/CMSIS/Core/core_cm3.h ****   __IO uint32_t AIRCR;                        /*!< Offset: 0x0C  Application Interrupt / Reset Cont
 161:./.driver/CMSIS/Core/core_cm3.h ****   __IO uint32_t SCR;                          /*!< Offset: 0x10  System Control Register           
 162:./.driver/CMSIS/Core/core_cm3.h ****   __IO uint32_t CCR;                          /*!< Offset: 0x14  Configuration Control Register    
 163:./.driver/CMSIS/Core/core_cm3.h ****   __IO uint8_t  SHP[12];                      /*!< Offset: 0x18  System Handlers Priority Registers
 164:./.driver/CMSIS/Core/core_cm3.h ****   __IO uint32_t SHCSR;                        /*!< Offset: 0x24  System Handler Control and State R
 165:./.driver/CMSIS/Core/core_cm3.h ****   __IO uint32_t CFSR;                         /*!< Offset: 0x28  Configurable Fault Status Register
 166:./.driver/CMSIS/Core/core_cm3.h ****   __IO uint32_t HFSR;                         /*!< Offset: 0x2C  Hard Fault Status Register        
 167:./.driver/CMSIS/Core/core_cm3.h ****   __IO uint32_t DFSR;                         /*!< Offset: 0x30  Debug Fault Status Register       
 168:./.driver/CMSIS/Core/core_cm3.h ****   __IO uint32_t MMFAR;                        /*!< Offset: 0x34  Mem Manage Address Register       
 169:./.driver/CMSIS/Core/core_cm3.h ****   __IO uint32_t BFAR;                         /*!< Offset: 0x38  Bus Fault Address Register        
 170:./.driver/CMSIS/Core/core_cm3.h ****   __IO uint32_t AFSR;                         /*!< Offset: 0x3C  Auxiliary Fault Status Register   
 171:./.driver/CMSIS/Core/core_cm3.h ****   __I  uint32_t PFR[2];                       /*!< Offset: 0x40  Processor Feature Register        
 172:./.driver/CMSIS/Core/core_cm3.h ****   __I  uint32_t DFR;                          /*!< Offset: 0x48  Debug Feature Register            
 173:./.driver/CMSIS/Core/core_cm3.h ****   __I  uint32_t ADR;                          /*!< Offset: 0x4C  Auxiliary Feature Register        
 174:./.driver/CMSIS/Core/core_cm3.h ****   __I  uint32_t MMFR[4];                      /*!< Offset: 0x50  Memory Model Feature Register     
 175:./.driver/CMSIS/Core/core_cm3.h ****   __I  uint32_t ISAR[5];                      /*!< Offset: 0x60  ISA Feature Register              
 176:./.driver/CMSIS/Core/core_cm3.h **** } SCB_Type;                                                
 177:./.driver/CMSIS/Core/core_cm3.h **** 
 178:./.driver/CMSIS/Core/core_cm3.h **** /* SCB CPUID Register Definitions */
 179:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24                                             /*!< SCB 
 180:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFul << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 181:./.driver/CMSIS/Core/core_cm3.h **** 
 182:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_CPUID_VARIANT_Pos              20                                             /*!< SCB 
 183:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_CPUID_VARIANT_Msk              (0xFul << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 184:./.driver/CMSIS/Core/core_cm3.h **** 
 185:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_CPUID_PARTNO_Pos                4                                             /*!< SCB 
 186:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFul << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 187:./.driver/CMSIS/Core/core_cm3.h **** 
 188:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_CPUID_REVISION_Pos              0                                             /*!< SCB 
 189:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_CPUID_REVISION_Msk             (0xFul << SCB_CPUID_REVISION_Pos)              /*!< SCB 
 190:./.driver/CMSIS/Core/core_cm3.h **** 
 191:./.driver/CMSIS/Core/core_cm3.h **** /* SCB Interrupt Control State Register Definitions */
 192:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_ICSR_NMIPENDSET_Pos            31                                             /*!< SCB 
 193:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1ul << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 194:./.driver/CMSIS/Core/core_cm3.h **** 
 195:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_ICSR_PENDSVSET_Pos             28                                             /*!< SCB 
 196:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_ICSR_PENDSVSET_Msk             (1ul << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 197:./.driver/CMSIS/Core/core_cm3.h **** 
 198:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_ICSR_PENDSVCLR_Pos             27                                             /*!< SCB 
 199:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1ul << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 200:./.driver/CMSIS/Core/core_cm3.h **** 
 201:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_ICSR_PENDSTSET_Pos             26                                             /*!< SCB 
 202:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_ICSR_PENDSTSET_Msk             (1ul << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 203:./.driver/CMSIS/Core/core_cm3.h **** 
 204:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_ICSR_PENDSTCLR_Pos             25                                             /*!< SCB 
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s 			page 5


 205:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1ul << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 206:./.driver/CMSIS/Core/core_cm3.h **** 
 207:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23                                             /*!< SCB 
 208:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1ul << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 209:./.driver/CMSIS/Core/core_cm3.h **** 
 210:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_ICSR_ISRPENDING_Pos            22                                             /*!< SCB 
 211:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_ICSR_ISRPENDING_Msk            (1ul << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 212:./.driver/CMSIS/Core/core_cm3.h **** 
 213:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_ICSR_VECTPENDING_Pos           12                                             /*!< SCB 
 214:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFul << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 215:./.driver/CMSIS/Core/core_cm3.h **** 
 216:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_ICSR_RETTOBASE_Pos             11                                             /*!< SCB 
 217:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_ICSR_RETTOBASE_Msk             (1ul << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 218:./.driver/CMSIS/Core/core_cm3.h **** 
 219:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_ICSR_VECTACTIVE_Pos             0                                             /*!< SCB 
 220:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFul << SCB_ICSR_VECTACTIVE_Pos)           /*!< SCB 
 221:./.driver/CMSIS/Core/core_cm3.h **** 
 222:./.driver/CMSIS/Core/core_cm3.h **** /* SCB Interrupt Control State Register Definitions */
 223:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_VTOR_TBLBASE_Pos               29                                             /*!< SCB 
 224:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_VTOR_TBLBASE_Msk               (0x1FFul << SCB_VTOR_TBLBASE_Pos)              /*!< SCB 
 225:./.driver/CMSIS/Core/core_cm3.h **** 
 226:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_VTOR_TBLOFF_Pos                 7                                             /*!< SCB 
 227:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_VTOR_TBLOFF_Msk                (0x3FFFFFul << SCB_VTOR_TBLOFF_Pos)            /*!< SCB 
 228:./.driver/CMSIS/Core/core_cm3.h **** 
 229:./.driver/CMSIS/Core/core_cm3.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 230:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_AIRCR_VECTKEY_Pos              16                                             /*!< SCB 
 231:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFul << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 232:./.driver/CMSIS/Core/core_cm3.h **** 
 233:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16                                             /*!< SCB 
 234:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFul << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 235:./.driver/CMSIS/Core/core_cm3.h **** 
 236:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_AIRCR_ENDIANESS_Pos            15                                             /*!< SCB 
 237:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1ul << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 238:./.driver/CMSIS/Core/core_cm3.h **** 
 239:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_AIRCR_PRIGROUP_Pos              8                                             /*!< SCB 
 240:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7ul << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 241:./.driver/CMSIS/Core/core_cm3.h **** 
 242:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2                                             /*!< SCB 
 243:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1ul << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 244:./.driver/CMSIS/Core/core_cm3.h **** 
 245:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1                                             /*!< SCB 
 246:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1ul << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 247:./.driver/CMSIS/Core/core_cm3.h **** 
 248:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_AIRCR_VECTRESET_Pos             0                                             /*!< SCB 
 249:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_AIRCR_VECTRESET_Msk            (1ul << SCB_AIRCR_VECTRESET_Pos)               /*!< SCB 
 250:./.driver/CMSIS/Core/core_cm3.h **** 
 251:./.driver/CMSIS/Core/core_cm3.h **** /* SCB System Control Register Definitions */
 252:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_SCR_SEVONPEND_Pos               4                                             /*!< SCB 
 253:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_SCR_SEVONPEND_Msk              (1ul << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 254:./.driver/CMSIS/Core/core_cm3.h **** 
 255:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_SCR_SLEEPDEEP_Pos               2                                             /*!< SCB 
 256:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1ul << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 257:./.driver/CMSIS/Core/core_cm3.h **** 
 258:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1                                             /*!< SCB 
 259:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1ul << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 260:./.driver/CMSIS/Core/core_cm3.h **** 
 261:./.driver/CMSIS/Core/core_cm3.h **** /* SCB Configuration Control Register Definitions */
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s 			page 6


 262:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_CCR_STKALIGN_Pos                9                                             /*!< SCB 
 263:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_CCR_STKALIGN_Msk               (1ul << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 264:./.driver/CMSIS/Core/core_cm3.h **** 
 265:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_CCR_BFHFNMIGN_Pos               8                                             /*!< SCB 
 266:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1ul << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 267:./.driver/CMSIS/Core/core_cm3.h **** 
 268:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_CCR_DIV_0_TRP_Pos               4                                             /*!< SCB 
 269:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1ul << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 270:./.driver/CMSIS/Core/core_cm3.h **** 
 271:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3                                             /*!< SCB 
 272:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1ul << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 273:./.driver/CMSIS/Core/core_cm3.h **** 
 274:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_CCR_USERSETMPEND_Pos            1                                             /*!< SCB 
 275:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_CCR_USERSETMPEND_Msk           (1ul << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 276:./.driver/CMSIS/Core/core_cm3.h **** 
 277:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0                                             /*!< SCB 
 278:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1ul << SCB_CCR_NONBASETHRDENA_Pos)            /*!< SCB 
 279:./.driver/CMSIS/Core/core_cm3.h **** 
 280:./.driver/CMSIS/Core/core_cm3.h **** /* SCB System Handler Control and State Register Definitions */
 281:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18                                             /*!< SCB 
 282:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1ul << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 283:./.driver/CMSIS/Core/core_cm3.h **** 
 284:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17                                             /*!< SCB 
 285:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1ul << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 286:./.driver/CMSIS/Core/core_cm3.h **** 
 287:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16                                             /*!< SCB 
 288:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1ul << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 289:./.driver/CMSIS/Core/core_cm3.h **** 
 290:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15                                             /*!< SCB 
 291:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1ul << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 292:./.driver/CMSIS/Core/core_cm3.h **** 
 293:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14                                             /*!< SCB 
 294:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1ul << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 295:./.driver/CMSIS/Core/core_cm3.h **** 
 296:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13                                             /*!< SCB 
 297:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1ul << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 298:./.driver/CMSIS/Core/core_cm3.h **** 
 299:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12                                             /*!< SCB 
 300:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1ul << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 301:./.driver/CMSIS/Core/core_cm3.h **** 
 302:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11                                             /*!< SCB 
 303:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1ul << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 304:./.driver/CMSIS/Core/core_cm3.h **** 
 305:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_SHCSR_PENDSVACT_Pos            10                                             /*!< SCB 
 306:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1ul << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 307:./.driver/CMSIS/Core/core_cm3.h **** 
 308:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_SHCSR_MONITORACT_Pos            8                                             /*!< SCB 
 309:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_SHCSR_MONITORACT_Msk           (1ul << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 310:./.driver/CMSIS/Core/core_cm3.h **** 
 311:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_SHCSR_SVCALLACT_Pos             7                                             /*!< SCB 
 312:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1ul << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 313:./.driver/CMSIS/Core/core_cm3.h ****                                      
 314:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3                                             /*!< SCB 
 315:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1ul << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 316:./.driver/CMSIS/Core/core_cm3.h **** 
 317:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1                                             /*!< SCB 
 318:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1ul << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s 			page 7


 319:./.driver/CMSIS/Core/core_cm3.h **** 
 320:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0                                             /*!< SCB 
 321:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1ul << SCB_SHCSR_MEMFAULTACT_Pos)             /*!< SCB 
 322:./.driver/CMSIS/Core/core_cm3.h **** 
 323:./.driver/CMSIS/Core/core_cm3.h **** /* SCB Configurable Fault Status Registers Definitions */
 324:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_CFSR_USGFAULTSR_Pos            16                                             /*!< SCB 
 325:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFul << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 326:./.driver/CMSIS/Core/core_cm3.h **** 
 327:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8                                             /*!< SCB 
 328:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFul << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 329:./.driver/CMSIS/Core/core_cm3.h **** 
 330:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0                                             /*!< SCB 
 331:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFul << SCB_CFSR_MEMFAULTSR_Pos)            /*!< SCB 
 332:./.driver/CMSIS/Core/core_cm3.h **** 
 333:./.driver/CMSIS/Core/core_cm3.h **** /* SCB Hard Fault Status Registers Definitions */
 334:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_HFSR_DEBUGEVT_Pos              31                                             /*!< SCB 
 335:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1ul << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 336:./.driver/CMSIS/Core/core_cm3.h **** 
 337:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_HFSR_FORCED_Pos                30                                             /*!< SCB 
 338:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_HFSR_FORCED_Msk                (1ul << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 339:./.driver/CMSIS/Core/core_cm3.h **** 
 340:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_HFSR_VECTTBL_Pos                1                                             /*!< SCB 
 341:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_HFSR_VECTTBL_Msk               (1ul << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 342:./.driver/CMSIS/Core/core_cm3.h **** 
 343:./.driver/CMSIS/Core/core_cm3.h **** /* SCB Debug Fault Status Register Definitions */
 344:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_DFSR_EXTERNAL_Pos               4                                             /*!< SCB 
 345:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_DFSR_EXTERNAL_Msk              (1ul << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 346:./.driver/CMSIS/Core/core_cm3.h **** 
 347:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_DFSR_VCATCH_Pos                 3                                             /*!< SCB 
 348:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_DFSR_VCATCH_Msk                (1ul << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 349:./.driver/CMSIS/Core/core_cm3.h **** 
 350:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_DFSR_DWTTRAP_Pos                2                                             /*!< SCB 
 351:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_DFSR_DWTTRAP_Msk               (1ul << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 352:./.driver/CMSIS/Core/core_cm3.h **** 
 353:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_DFSR_BKPT_Pos                   1                                             /*!< SCB 
 354:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_DFSR_BKPT_Msk                  (1ul << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 355:./.driver/CMSIS/Core/core_cm3.h **** 
 356:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_DFSR_HALTED_Pos                 0                                             /*!< SCB 
 357:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_DFSR_HALTED_Msk                (1ul << SCB_DFSR_HALTED_Pos)                   /*!< SCB 
 358:./.driver/CMSIS/Core/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_SCB */
 359:./.driver/CMSIS/Core/core_cm3.h **** 
 360:./.driver/CMSIS/Core/core_cm3.h **** 
 361:./.driver/CMSIS/Core/core_cm3.h **** /** @addtogroup CMSIS_CM3_SysTick CMSIS CM3 SysTick
 362:./.driver/CMSIS/Core/core_cm3.h ****   memory mapped structure for SysTick
 363:./.driver/CMSIS/Core/core_cm3.h ****   @{
 364:./.driver/CMSIS/Core/core_cm3.h ****  */
 365:./.driver/CMSIS/Core/core_cm3.h **** typedef struct
 366:./.driver/CMSIS/Core/core_cm3.h **** {
 367:./.driver/CMSIS/Core/core_cm3.h ****   __IO uint32_t CTRL;                         /*!< Offset: 0x00  SysTick Control and Status Registe
 368:./.driver/CMSIS/Core/core_cm3.h ****   __IO uint32_t LOAD;                         /*!< Offset: 0x04  SysTick Reload Value Register     
 369:./.driver/CMSIS/Core/core_cm3.h ****   __IO uint32_t VAL;                          /*!< Offset: 0x08  SysTick Current Value Register    
 370:./.driver/CMSIS/Core/core_cm3.h ****   __I  uint32_t CALIB;                        /*!< Offset: 0x0C  SysTick Calibration Register      
 371:./.driver/CMSIS/Core/core_cm3.h **** } SysTick_Type;
 372:./.driver/CMSIS/Core/core_cm3.h **** 
 373:./.driver/CMSIS/Core/core_cm3.h **** /* SysTick Control / Status Register Definitions */
 374:./.driver/CMSIS/Core/core_cm3.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16                                             /*!< SysT
 375:./.driver/CMSIS/Core/core_cm3.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1ul << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s 			page 8


 376:./.driver/CMSIS/Core/core_cm3.h **** 
 377:./.driver/CMSIS/Core/core_cm3.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2                                             /*!< SysT
 378:./.driver/CMSIS/Core/core_cm3.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1ul << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 379:./.driver/CMSIS/Core/core_cm3.h **** 
 380:./.driver/CMSIS/Core/core_cm3.h **** #define SysTick_CTRL_TICKINT_Pos            1                                             /*!< SysT
 381:./.driver/CMSIS/Core/core_cm3.h **** #define SysTick_CTRL_TICKINT_Msk           (1ul << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 382:./.driver/CMSIS/Core/core_cm3.h **** 
 383:./.driver/CMSIS/Core/core_cm3.h **** #define SysTick_CTRL_ENABLE_Pos             0                                             /*!< SysT
 384:./.driver/CMSIS/Core/core_cm3.h **** #define SysTick_CTRL_ENABLE_Msk            (1ul << SysTick_CTRL_ENABLE_Pos)               /*!< SysT
 385:./.driver/CMSIS/Core/core_cm3.h **** 
 386:./.driver/CMSIS/Core/core_cm3.h **** /* SysTick Reload Register Definitions */
 387:./.driver/CMSIS/Core/core_cm3.h **** #define SysTick_LOAD_RELOAD_Pos             0                                             /*!< SysT
 388:./.driver/CMSIS/Core/core_cm3.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFul << SysTick_LOAD_RELOAD_Pos)        /*!< SysT
 389:./.driver/CMSIS/Core/core_cm3.h **** 
 390:./.driver/CMSIS/Core/core_cm3.h **** /* SysTick Current Register Definitions */
 391:./.driver/CMSIS/Core/core_cm3.h **** #define SysTick_VAL_CURRENT_Pos             0                                             /*!< SysT
 392:./.driver/CMSIS/Core/core_cm3.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFul << SysTick_VAL_CURRENT_Pos)        /*!< SysT
 393:./.driver/CMSIS/Core/core_cm3.h **** 
 394:./.driver/CMSIS/Core/core_cm3.h **** /* SysTick Calibration Register Definitions */
 395:./.driver/CMSIS/Core/core_cm3.h **** #define SysTick_CALIB_NOREF_Pos            31                                             /*!< SysT
 396:./.driver/CMSIS/Core/core_cm3.h **** #define SysTick_CALIB_NOREF_Msk            (1ul << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 397:./.driver/CMSIS/Core/core_cm3.h **** 
 398:./.driver/CMSIS/Core/core_cm3.h **** #define SysTick_CALIB_SKEW_Pos             30                                             /*!< SysT
 399:./.driver/CMSIS/Core/core_cm3.h **** #define SysTick_CALIB_SKEW_Msk             (1ul << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 400:./.driver/CMSIS/Core/core_cm3.h **** 
 401:./.driver/CMSIS/Core/core_cm3.h **** #define SysTick_CALIB_TENMS_Pos             0                                             /*!< SysT
 402:./.driver/CMSIS/Core/core_cm3.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFul << SysTick_VAL_CURRENT_Pos)        /*!< SysT
 403:./.driver/CMSIS/Core/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_SysTick */
 404:./.driver/CMSIS/Core/core_cm3.h **** 
 405:./.driver/CMSIS/Core/core_cm3.h **** 
 406:./.driver/CMSIS/Core/core_cm3.h **** /** @addtogroup CMSIS_CM3_ITM CMSIS CM3 ITM
 407:./.driver/CMSIS/Core/core_cm3.h ****   memory mapped structure for Instrumentation Trace Macrocell (ITM)
 408:./.driver/CMSIS/Core/core_cm3.h ****   @{
 409:./.driver/CMSIS/Core/core_cm3.h ****  */
 410:./.driver/CMSIS/Core/core_cm3.h **** typedef struct
 411:./.driver/CMSIS/Core/core_cm3.h **** {
 412:./.driver/CMSIS/Core/core_cm3.h ****   __O  union  
 413:./.driver/CMSIS/Core/core_cm3.h ****   {
 414:./.driver/CMSIS/Core/core_cm3.h ****     __O  uint8_t    u8;                       /*!< Offset:       ITM Stimulus Port 8-bit           
 415:./.driver/CMSIS/Core/core_cm3.h ****     __O  uint16_t   u16;                      /*!< Offset:       ITM Stimulus Port 16-bit          
 416:./.driver/CMSIS/Core/core_cm3.h ****     __O  uint32_t   u32;                      /*!< Offset:       ITM Stimulus Port 32-bit          
 417:./.driver/CMSIS/Core/core_cm3.h ****   }  PORT [32];                               /*!< Offset: 0x00  ITM Stimulus Port Registers       
 418:./.driver/CMSIS/Core/core_cm3.h ****        uint32_t RESERVED0[864];                                 
 419:./.driver/CMSIS/Core/core_cm3.h ****   __IO uint32_t TER;                          /*!< Offset:       ITM Trace Enable Register         
 420:./.driver/CMSIS/Core/core_cm3.h ****        uint32_t RESERVED1[15];                                  
 421:./.driver/CMSIS/Core/core_cm3.h ****   __IO uint32_t TPR;                          /*!< Offset:       ITM Trace Privilege Register      
 422:./.driver/CMSIS/Core/core_cm3.h ****        uint32_t RESERVED2[15];                                  
 423:./.driver/CMSIS/Core/core_cm3.h ****   __IO uint32_t TCR;                          /*!< Offset:       ITM Trace Control Register        
 424:./.driver/CMSIS/Core/core_cm3.h ****        uint32_t RESERVED3[29];                                  
 425:./.driver/CMSIS/Core/core_cm3.h ****   __IO uint32_t IWR;                          /*!< Offset:       ITM Integration Write Register    
 426:./.driver/CMSIS/Core/core_cm3.h ****   __IO uint32_t IRR;                          /*!< Offset:       ITM Integration Read Register     
 427:./.driver/CMSIS/Core/core_cm3.h ****   __IO uint32_t IMCR;                         /*!< Offset:       ITM Integration Mode Control Regis
 428:./.driver/CMSIS/Core/core_cm3.h ****        uint32_t RESERVED4[43];                                  
 429:./.driver/CMSIS/Core/core_cm3.h ****   __IO uint32_t LAR;                          /*!< Offset:       ITM Lock Access Register          
 430:./.driver/CMSIS/Core/core_cm3.h ****   __IO uint32_t LSR;                          /*!< Offset:       ITM Lock Status Register          
 431:./.driver/CMSIS/Core/core_cm3.h ****        uint32_t RESERVED5[6];                                   
 432:./.driver/CMSIS/Core/core_cm3.h ****   __I  uint32_t PID4;                         /*!< Offset:       ITM Peripheral Identification Regi
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s 			page 9


 433:./.driver/CMSIS/Core/core_cm3.h ****   __I  uint32_t PID5;                         /*!< Offset:       ITM Peripheral Identification Regi
 434:./.driver/CMSIS/Core/core_cm3.h ****   __I  uint32_t PID6;                         /*!< Offset:       ITM Peripheral Identification Regi
 435:./.driver/CMSIS/Core/core_cm3.h ****   __I  uint32_t PID7;                         /*!< Offset:       ITM Peripheral Identification Regi
 436:./.driver/CMSIS/Core/core_cm3.h ****   __I  uint32_t PID0;                         /*!< Offset:       ITM Peripheral Identification Regi
 437:./.driver/CMSIS/Core/core_cm3.h ****   __I  uint32_t PID1;                         /*!< Offset:       ITM Peripheral Identification Regi
 438:./.driver/CMSIS/Core/core_cm3.h ****   __I  uint32_t PID2;                         /*!< Offset:       ITM Peripheral Identification Regi
 439:./.driver/CMSIS/Core/core_cm3.h ****   __I  uint32_t PID3;                         /*!< Offset:       ITM Peripheral Identification Regi
 440:./.driver/CMSIS/Core/core_cm3.h ****   __I  uint32_t CID0;                         /*!< Offset:       ITM Component  Identification Regi
 441:./.driver/CMSIS/Core/core_cm3.h ****   __I  uint32_t CID1;                         /*!< Offset:       ITM Component  Identification Regi
 442:./.driver/CMSIS/Core/core_cm3.h ****   __I  uint32_t CID2;                         /*!< Offset:       ITM Component  Identification Regi
 443:./.driver/CMSIS/Core/core_cm3.h ****   __I  uint32_t CID3;                         /*!< Offset:       ITM Component  Identification Regi
 444:./.driver/CMSIS/Core/core_cm3.h **** } ITM_Type;                                                
 445:./.driver/CMSIS/Core/core_cm3.h **** 
 446:./.driver/CMSIS/Core/core_cm3.h **** /* ITM Trace Privilege Register Definitions */
 447:./.driver/CMSIS/Core/core_cm3.h **** #define ITM_TPR_PRIVMASK_Pos                0                                             /*!< ITM 
 448:./.driver/CMSIS/Core/core_cm3.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFul << ITM_TPR_PRIVMASK_Pos)                /*!< ITM 
 449:./.driver/CMSIS/Core/core_cm3.h **** 
 450:./.driver/CMSIS/Core/core_cm3.h **** /* ITM Trace Control Register Definitions */
 451:./.driver/CMSIS/Core/core_cm3.h **** #define ITM_TCR_BUSY_Pos                   23                                             /*!< ITM 
 452:./.driver/CMSIS/Core/core_cm3.h **** #define ITM_TCR_BUSY_Msk                   (1ul << ITM_TCR_BUSY_Pos)                      /*!< ITM 
 453:./.driver/CMSIS/Core/core_cm3.h **** 
 454:./.driver/CMSIS/Core/core_cm3.h **** #define ITM_TCR_ATBID_Pos                  16                                             /*!< ITM 
 455:./.driver/CMSIS/Core/core_cm3.h **** #define ITM_TCR_ATBID_Msk                  (0x7Ful << ITM_TCR_ATBID_Pos)                  /*!< ITM 
 456:./.driver/CMSIS/Core/core_cm3.h **** 
 457:./.driver/CMSIS/Core/core_cm3.h **** #define ITM_TCR_TSPrescale_Pos              8                                             /*!< ITM 
 458:./.driver/CMSIS/Core/core_cm3.h **** #define ITM_TCR_TSPrescale_Msk             (3ul << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
 459:./.driver/CMSIS/Core/core_cm3.h **** 
 460:./.driver/CMSIS/Core/core_cm3.h **** #define ITM_TCR_SWOENA_Pos                  4                                             /*!< ITM 
 461:./.driver/CMSIS/Core/core_cm3.h **** #define ITM_TCR_SWOENA_Msk                 (1ul << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
 462:./.driver/CMSIS/Core/core_cm3.h **** 
 463:./.driver/CMSIS/Core/core_cm3.h **** #define ITM_TCR_DWTENA_Pos                  3                                             /*!< ITM 
 464:./.driver/CMSIS/Core/core_cm3.h **** #define ITM_TCR_DWTENA_Msk                 (1ul << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
 465:./.driver/CMSIS/Core/core_cm3.h **** 
 466:./.driver/CMSIS/Core/core_cm3.h **** #define ITM_TCR_SYNCENA_Pos                 2                                             /*!< ITM 
 467:./.driver/CMSIS/Core/core_cm3.h **** #define ITM_TCR_SYNCENA_Msk                (1ul << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
 468:./.driver/CMSIS/Core/core_cm3.h **** 
 469:./.driver/CMSIS/Core/core_cm3.h **** #define ITM_TCR_TSENA_Pos                   1                                             /*!< ITM 
 470:./.driver/CMSIS/Core/core_cm3.h **** #define ITM_TCR_TSENA_Msk                  (1ul << ITM_TCR_TSENA_Pos)                     /*!< ITM 
 471:./.driver/CMSIS/Core/core_cm3.h **** 
 472:./.driver/CMSIS/Core/core_cm3.h **** #define ITM_TCR_ITMENA_Pos                  0                                             /*!< ITM 
 473:./.driver/CMSIS/Core/core_cm3.h **** #define ITM_TCR_ITMENA_Msk                 (1ul << ITM_TCR_ITMENA_Pos)                    /*!< ITM 
 474:./.driver/CMSIS/Core/core_cm3.h **** 
 475:./.driver/CMSIS/Core/core_cm3.h **** /* ITM Integration Write Register Definitions */
 476:./.driver/CMSIS/Core/core_cm3.h **** #define ITM_IWR_ATVALIDM_Pos                0                                             /*!< ITM 
 477:./.driver/CMSIS/Core/core_cm3.h **** #define ITM_IWR_ATVALIDM_Msk               (1ul << ITM_IWR_ATVALIDM_Pos)                  /*!< ITM 
 478:./.driver/CMSIS/Core/core_cm3.h **** 
 479:./.driver/CMSIS/Core/core_cm3.h **** /* ITM Integration Read Register Definitions */
 480:./.driver/CMSIS/Core/core_cm3.h **** #define ITM_IRR_ATREADYM_Pos                0                                             /*!< ITM 
 481:./.driver/CMSIS/Core/core_cm3.h **** #define ITM_IRR_ATREADYM_Msk               (1ul << ITM_IRR_ATREADYM_Pos)                  /*!< ITM 
 482:./.driver/CMSIS/Core/core_cm3.h **** 
 483:./.driver/CMSIS/Core/core_cm3.h **** /* ITM Integration Mode Control Register Definitions */
 484:./.driver/CMSIS/Core/core_cm3.h **** #define ITM_IMCR_INTEGRATION_Pos            0                                             /*!< ITM 
 485:./.driver/CMSIS/Core/core_cm3.h **** #define ITM_IMCR_INTEGRATION_Msk           (1ul << ITM_IMCR_INTEGRATION_Pos)              /*!< ITM 
 486:./.driver/CMSIS/Core/core_cm3.h **** 
 487:./.driver/CMSIS/Core/core_cm3.h **** /* ITM Lock Status Register Definitions */
 488:./.driver/CMSIS/Core/core_cm3.h **** #define ITM_LSR_ByteAcc_Pos                 2                                             /*!< ITM 
 489:./.driver/CMSIS/Core/core_cm3.h **** #define ITM_LSR_ByteAcc_Msk                (1ul << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s 			page 10


 490:./.driver/CMSIS/Core/core_cm3.h **** 
 491:./.driver/CMSIS/Core/core_cm3.h **** #define ITM_LSR_Access_Pos                  1                                             /*!< ITM 
 492:./.driver/CMSIS/Core/core_cm3.h **** #define ITM_LSR_Access_Msk                 (1ul << ITM_LSR_Access_Pos)                    /*!< ITM 
 493:./.driver/CMSIS/Core/core_cm3.h **** 
 494:./.driver/CMSIS/Core/core_cm3.h **** #define ITM_LSR_Present_Pos                 0                                             /*!< ITM 
 495:./.driver/CMSIS/Core/core_cm3.h **** #define ITM_LSR_Present_Msk                (1ul << ITM_LSR_Present_Pos)                   /*!< ITM 
 496:./.driver/CMSIS/Core/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_ITM */
 497:./.driver/CMSIS/Core/core_cm3.h **** 
 498:./.driver/CMSIS/Core/core_cm3.h **** 
 499:./.driver/CMSIS/Core/core_cm3.h **** /** @addtogroup CMSIS_CM3_InterruptType CMSIS CM3 Interrupt Type
 500:./.driver/CMSIS/Core/core_cm3.h ****   memory mapped structure for Interrupt Type
 501:./.driver/CMSIS/Core/core_cm3.h ****   @{
 502:./.driver/CMSIS/Core/core_cm3.h ****  */
 503:./.driver/CMSIS/Core/core_cm3.h **** typedef struct
 504:./.driver/CMSIS/Core/core_cm3.h **** {
 505:./.driver/CMSIS/Core/core_cm3.h ****        uint32_t RESERVED0;
 506:./.driver/CMSIS/Core/core_cm3.h ****   __I  uint32_t ICTR;                         /*!< Offset: 0x04  Interrupt Control Type Register */
 507:./.driver/CMSIS/Core/core_cm3.h **** #if ((defined __CM3_REV) && (__CM3_REV >= 0x200))
 508:./.driver/CMSIS/Core/core_cm3.h ****   __IO uint32_t ACTLR;                        /*!< Offset: 0x08  Auxiliary Control Register      */
 509:./.driver/CMSIS/Core/core_cm3.h **** #else
 510:./.driver/CMSIS/Core/core_cm3.h ****        uint32_t RESERVED1;
 511:./.driver/CMSIS/Core/core_cm3.h **** #endif
 512:./.driver/CMSIS/Core/core_cm3.h **** } InterruptType_Type;
 513:./.driver/CMSIS/Core/core_cm3.h **** 
 514:./.driver/CMSIS/Core/core_cm3.h **** /* Interrupt Controller Type Register Definitions */
 515:./.driver/CMSIS/Core/core_cm3.h **** #define InterruptType_ICTR_INTLINESNUM_Pos  0                                             /*!< Inte
 516:./.driver/CMSIS/Core/core_cm3.h **** #define InterruptType_ICTR_INTLINESNUM_Msk (0x1Ful << InterruptType_ICTR_INTLINESNUM_Pos) /*!< Inte
 517:./.driver/CMSIS/Core/core_cm3.h **** 
 518:./.driver/CMSIS/Core/core_cm3.h **** /* Auxiliary Control Register Definitions */
 519:./.driver/CMSIS/Core/core_cm3.h **** #define InterruptType_ACTLR_DISFOLD_Pos     2                                             /*!< Inte
 520:./.driver/CMSIS/Core/core_cm3.h **** #define InterruptType_ACTLR_DISFOLD_Msk    (1ul << InterruptType_ACTLR_DISFOLD_Pos)       /*!< Inte
 521:./.driver/CMSIS/Core/core_cm3.h **** 
 522:./.driver/CMSIS/Core/core_cm3.h **** #define InterruptType_ACTLR_DISDEFWBUF_Pos  1                                             /*!< Inte
 523:./.driver/CMSIS/Core/core_cm3.h **** #define InterruptType_ACTLR_DISDEFWBUF_Msk (1ul << InterruptType_ACTLR_DISDEFWBUF_Pos)    /*!< Inte
 524:./.driver/CMSIS/Core/core_cm3.h **** 
 525:./.driver/CMSIS/Core/core_cm3.h **** #define InterruptType_ACTLR_DISMCYCINT_Pos  0                                             /*!< Inte
 526:./.driver/CMSIS/Core/core_cm3.h **** #define InterruptType_ACTLR_DISMCYCINT_Msk (1ul << InterruptType_ACTLR_DISMCYCINT_Pos)    /*!< Inte
 527:./.driver/CMSIS/Core/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_InterruptType */
 528:./.driver/CMSIS/Core/core_cm3.h **** 
 529:./.driver/CMSIS/Core/core_cm3.h **** 
 530:./.driver/CMSIS/Core/core_cm3.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1)
 531:./.driver/CMSIS/Core/core_cm3.h **** /** @addtogroup CMSIS_CM3_MPU CMSIS CM3 MPU
 532:./.driver/CMSIS/Core/core_cm3.h ****   memory mapped structure for Memory Protection Unit (MPU)
 533:./.driver/CMSIS/Core/core_cm3.h ****   @{
 534:./.driver/CMSIS/Core/core_cm3.h ****  */
 535:./.driver/CMSIS/Core/core_cm3.h **** typedef struct
 536:./.driver/CMSIS/Core/core_cm3.h **** {
 537:./.driver/CMSIS/Core/core_cm3.h ****   __I  uint32_t TYPE;                         /*!< Offset: 0x00  MPU Type Register                 
 538:./.driver/CMSIS/Core/core_cm3.h ****   __IO uint32_t CTRL;                         /*!< Offset: 0x04  MPU Control Register              
 539:./.driver/CMSIS/Core/core_cm3.h ****   __IO uint32_t RNR;                          /*!< Offset: 0x08  MPU Region RNRber Register        
 540:./.driver/CMSIS/Core/core_cm3.h ****   __IO uint32_t RBAR;                         /*!< Offset: 0x0C  MPU Region Base Address Register  
 541:./.driver/CMSIS/Core/core_cm3.h ****   __IO uint32_t RASR;                         /*!< Offset: 0x10  MPU Region Attribute and Size Regi
 542:./.driver/CMSIS/Core/core_cm3.h ****   __IO uint32_t RBAR_A1;                      /*!< Offset: 0x14  MPU Alias 1 Region Base Address Re
 543:./.driver/CMSIS/Core/core_cm3.h ****   __IO uint32_t RASR_A1;                      /*!< Offset: 0x18  MPU Alias 1 Region Attribute and S
 544:./.driver/CMSIS/Core/core_cm3.h ****   __IO uint32_t RBAR_A2;                      /*!< Offset: 0x1C  MPU Alias 2 Region Base Address Re
 545:./.driver/CMSIS/Core/core_cm3.h ****   __IO uint32_t RASR_A2;                      /*!< Offset: 0x20  MPU Alias 2 Region Attribute and S
 546:./.driver/CMSIS/Core/core_cm3.h ****   __IO uint32_t RBAR_A3;                      /*!< Offset: 0x24  MPU Alias 3 Region Base Address Re
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s 			page 11


 547:./.driver/CMSIS/Core/core_cm3.h ****   __IO uint32_t RASR_A3;                      /*!< Offset: 0x28  MPU Alias 3 Region Attribute and S
 548:./.driver/CMSIS/Core/core_cm3.h **** } MPU_Type;                                                
 549:./.driver/CMSIS/Core/core_cm3.h **** 
 550:./.driver/CMSIS/Core/core_cm3.h **** /* MPU Type Register */
 551:./.driver/CMSIS/Core/core_cm3.h **** #define MPU_TYPE_IREGION_Pos               16                                             /*!< MPU 
 552:./.driver/CMSIS/Core/core_cm3.h **** #define MPU_TYPE_IREGION_Msk               (0xFFul << MPU_TYPE_IREGION_Pos)               /*!< MPU 
 553:./.driver/CMSIS/Core/core_cm3.h **** 
 554:./.driver/CMSIS/Core/core_cm3.h **** #define MPU_TYPE_DREGION_Pos                8                                             /*!< MPU 
 555:./.driver/CMSIS/Core/core_cm3.h **** #define MPU_TYPE_DREGION_Msk               (0xFFul << MPU_TYPE_DREGION_Pos)               /*!< MPU 
 556:./.driver/CMSIS/Core/core_cm3.h **** 
 557:./.driver/CMSIS/Core/core_cm3.h **** #define MPU_TYPE_SEPARATE_Pos               0                                             /*!< MPU 
 558:./.driver/CMSIS/Core/core_cm3.h **** #define MPU_TYPE_SEPARATE_Msk              (1ul << MPU_TYPE_SEPARATE_Pos)                 /*!< MPU 
 559:./.driver/CMSIS/Core/core_cm3.h **** 
 560:./.driver/CMSIS/Core/core_cm3.h **** /* MPU Control Register */
 561:./.driver/CMSIS/Core/core_cm3.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2                                             /*!< MPU 
 562:./.driver/CMSIS/Core/core_cm3.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1ul << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
 563:./.driver/CMSIS/Core/core_cm3.h **** 
 564:./.driver/CMSIS/Core/core_cm3.h **** #define MPU_CTRL_HFNMIENA_Pos               1                                             /*!< MPU 
 565:./.driver/CMSIS/Core/core_cm3.h **** #define MPU_CTRL_HFNMIENA_Msk              (1ul << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
 566:./.driver/CMSIS/Core/core_cm3.h **** 
 567:./.driver/CMSIS/Core/core_cm3.h **** #define MPU_CTRL_ENABLE_Pos                 0                                             /*!< MPU 
 568:./.driver/CMSIS/Core/core_cm3.h **** #define MPU_CTRL_ENABLE_Msk                (1ul << MPU_CTRL_ENABLE_Pos)                   /*!< MPU 
 569:./.driver/CMSIS/Core/core_cm3.h **** 
 570:./.driver/CMSIS/Core/core_cm3.h **** /* MPU Region Number Register */
 571:./.driver/CMSIS/Core/core_cm3.h **** #define MPU_RNR_REGION_Pos                  0                                             /*!< MPU 
 572:./.driver/CMSIS/Core/core_cm3.h **** #define MPU_RNR_REGION_Msk                 (0xFFul << MPU_RNR_REGION_Pos)                 /*!< MPU 
 573:./.driver/CMSIS/Core/core_cm3.h **** 
 574:./.driver/CMSIS/Core/core_cm3.h **** /* MPU Region Base Address Register */
 575:./.driver/CMSIS/Core/core_cm3.h **** #define MPU_RBAR_ADDR_Pos                   5                                             /*!< MPU 
 576:./.driver/CMSIS/Core/core_cm3.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFul << MPU_RBAR_ADDR_Pos)             /*!< MPU 
 577:./.driver/CMSIS/Core/core_cm3.h **** 
 578:./.driver/CMSIS/Core/core_cm3.h **** #define MPU_RBAR_VALID_Pos                  4                                             /*!< MPU 
 579:./.driver/CMSIS/Core/core_cm3.h **** #define MPU_RBAR_VALID_Msk                 (1ul << MPU_RBAR_VALID_Pos)                    /*!< MPU 
 580:./.driver/CMSIS/Core/core_cm3.h **** 
 581:./.driver/CMSIS/Core/core_cm3.h **** #define MPU_RBAR_REGION_Pos                 0                                             /*!< MPU 
 582:./.driver/CMSIS/Core/core_cm3.h **** #define MPU_RBAR_REGION_Msk                (0xFul << MPU_RBAR_REGION_Pos)                 /*!< MPU 
 583:./.driver/CMSIS/Core/core_cm3.h **** 
 584:./.driver/CMSIS/Core/core_cm3.h **** /* MPU Region Attribute and Size Register */
 585:./.driver/CMSIS/Core/core_cm3.h **** #define MPU_RASR_XN_Pos                    28                                             /*!< MPU 
 586:./.driver/CMSIS/Core/core_cm3.h **** #define MPU_RASR_XN_Msk                    (1ul << MPU_RASR_XN_Pos)                       /*!< MPU 
 587:./.driver/CMSIS/Core/core_cm3.h **** 
 588:./.driver/CMSIS/Core/core_cm3.h **** #define MPU_RASR_AP_Pos                    24                                             /*!< MPU 
 589:./.driver/CMSIS/Core/core_cm3.h **** #define MPU_RASR_AP_Msk                    (7ul << MPU_RASR_AP_Pos)                       /*!< MPU 
 590:./.driver/CMSIS/Core/core_cm3.h **** 
 591:./.driver/CMSIS/Core/core_cm3.h **** #define MPU_RASR_TEX_Pos                   19                                             /*!< MPU 
 592:./.driver/CMSIS/Core/core_cm3.h **** #define MPU_RASR_TEX_Msk                   (7ul << MPU_RASR_TEX_Pos)                      /*!< MPU 
 593:./.driver/CMSIS/Core/core_cm3.h **** 
 594:./.driver/CMSIS/Core/core_cm3.h **** #define MPU_RASR_S_Pos                     18                                             /*!< MPU 
 595:./.driver/CMSIS/Core/core_cm3.h **** #define MPU_RASR_S_Msk                     (1ul << MPU_RASR_S_Pos)                        /*!< MPU 
 596:./.driver/CMSIS/Core/core_cm3.h **** 
 597:./.driver/CMSIS/Core/core_cm3.h **** #define MPU_RASR_C_Pos                     17                                             /*!< MPU 
 598:./.driver/CMSIS/Core/core_cm3.h **** #define MPU_RASR_C_Msk                     (1ul << MPU_RASR_C_Pos)                        /*!< MPU 
 599:./.driver/CMSIS/Core/core_cm3.h **** 
 600:./.driver/CMSIS/Core/core_cm3.h **** #define MPU_RASR_B_Pos                     16                                             /*!< MPU 
 601:./.driver/CMSIS/Core/core_cm3.h **** #define MPU_RASR_B_Msk                     (1ul << MPU_RASR_B_Pos)                        /*!< MPU 
 602:./.driver/CMSIS/Core/core_cm3.h **** 
 603:./.driver/CMSIS/Core/core_cm3.h **** #define MPU_RASR_SRD_Pos                    8                                             /*!< MPU 
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s 			page 12


 604:./.driver/CMSIS/Core/core_cm3.h **** #define MPU_RASR_SRD_Msk                   (0xFFul << MPU_RASR_SRD_Pos)                   /*!< MPU 
 605:./.driver/CMSIS/Core/core_cm3.h **** 
 606:./.driver/CMSIS/Core/core_cm3.h **** #define MPU_RASR_SIZE_Pos                   1                                             /*!< MPU 
 607:./.driver/CMSIS/Core/core_cm3.h **** #define MPU_RASR_SIZE_Msk                  (0x1Ful << MPU_RASR_SIZE_Pos)                  /*!< MPU 
 608:./.driver/CMSIS/Core/core_cm3.h **** 
 609:./.driver/CMSIS/Core/core_cm3.h **** #define MPU_RASR_ENA_Pos                     0                                            /*!< MPU 
 610:./.driver/CMSIS/Core/core_cm3.h **** #define MPU_RASR_ENA_Msk                    (0x1Ful << MPU_RASR_ENA_Pos)                  /*!< MPU 
 611:./.driver/CMSIS/Core/core_cm3.h **** 
 612:./.driver/CMSIS/Core/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_MPU */
 613:./.driver/CMSIS/Core/core_cm3.h **** #endif
 614:./.driver/CMSIS/Core/core_cm3.h **** 
 615:./.driver/CMSIS/Core/core_cm3.h **** 
 616:./.driver/CMSIS/Core/core_cm3.h **** /** @addtogroup CMSIS_CM3_CoreDebug CMSIS CM3 Core Debug
 617:./.driver/CMSIS/Core/core_cm3.h ****   memory mapped structure for Core Debug Register
 618:./.driver/CMSIS/Core/core_cm3.h ****   @{
 619:./.driver/CMSIS/Core/core_cm3.h ****  */
 620:./.driver/CMSIS/Core/core_cm3.h **** typedef struct
 621:./.driver/CMSIS/Core/core_cm3.h **** {
 622:./.driver/CMSIS/Core/core_cm3.h ****   __IO uint32_t DHCSR;                        /*!< Offset: 0x00  Debug Halting Control and Status R
 623:./.driver/CMSIS/Core/core_cm3.h ****   __O  uint32_t DCRSR;                        /*!< Offset: 0x04  Debug Core Register Selector Regis
 624:./.driver/CMSIS/Core/core_cm3.h ****   __IO uint32_t DCRDR;                        /*!< Offset: 0x08  Debug Core Register Data Register 
 625:./.driver/CMSIS/Core/core_cm3.h ****   __IO uint32_t DEMCR;                        /*!< Offset: 0x0C  Debug Exception and Monitor Contro
 626:./.driver/CMSIS/Core/core_cm3.h **** } CoreDebug_Type;
 627:./.driver/CMSIS/Core/core_cm3.h **** 
 628:./.driver/CMSIS/Core/core_cm3.h **** /* Debug Halting Control and Status Register */
 629:./.driver/CMSIS/Core/core_cm3.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16                                             /*!< Core
 630:./.driver/CMSIS/Core/core_cm3.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFul << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
 631:./.driver/CMSIS/Core/core_cm3.h **** 
 632:./.driver/CMSIS/Core/core_cm3.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25                                             /*!< Core
 633:./.driver/CMSIS/Core/core_cm3.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1ul << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
 634:./.driver/CMSIS/Core/core_cm3.h **** 
 635:./.driver/CMSIS/Core/core_cm3.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24                                             /*!< Core
 636:./.driver/CMSIS/Core/core_cm3.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1ul << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
 637:./.driver/CMSIS/Core/core_cm3.h **** 
 638:./.driver/CMSIS/Core/core_cm3.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19                                             /*!< Core
 639:./.driver/CMSIS/Core/core_cm3.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1ul << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
 640:./.driver/CMSIS/Core/core_cm3.h **** 
 641:./.driver/CMSIS/Core/core_cm3.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18                                             /*!< Core
 642:./.driver/CMSIS/Core/core_cm3.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1ul << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
 643:./.driver/CMSIS/Core/core_cm3.h **** 
 644:./.driver/CMSIS/Core/core_cm3.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17                                             /*!< Core
 645:./.driver/CMSIS/Core/core_cm3.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1ul << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
 646:./.driver/CMSIS/Core/core_cm3.h **** 
 647:./.driver/CMSIS/Core/core_cm3.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16                                             /*!< Core
 648:./.driver/CMSIS/Core/core_cm3.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1ul << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
 649:./.driver/CMSIS/Core/core_cm3.h **** 
 650:./.driver/CMSIS/Core/core_cm3.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5                                             /*!< Core
 651:./.driver/CMSIS/Core/core_cm3.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1ul << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
 652:./.driver/CMSIS/Core/core_cm3.h **** 
 653:./.driver/CMSIS/Core/core_cm3.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3                                             /*!< Core
 654:./.driver/CMSIS/Core/core_cm3.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1ul << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
 655:./.driver/CMSIS/Core/core_cm3.h **** 
 656:./.driver/CMSIS/Core/core_cm3.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2                                             /*!< Core
 657:./.driver/CMSIS/Core/core_cm3.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1ul << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
 658:./.driver/CMSIS/Core/core_cm3.h **** 
 659:./.driver/CMSIS/Core/core_cm3.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1                                             /*!< Core
 660:./.driver/CMSIS/Core/core_cm3.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1ul << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s 			page 13


 661:./.driver/CMSIS/Core/core_cm3.h **** 
 662:./.driver/CMSIS/Core/core_cm3.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0                                             /*!< Core
 663:./.driver/CMSIS/Core/core_cm3.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1ul << CoreDebug_DHCSR_C_DEBUGEN_Pos)         /*!< Core
 664:./.driver/CMSIS/Core/core_cm3.h **** 
 665:./.driver/CMSIS/Core/core_cm3.h **** /* Debug Core Register Selector Register */
 666:./.driver/CMSIS/Core/core_cm3.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16                                             /*!< Core
 667:./.driver/CMSIS/Core/core_cm3.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1ul << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
 668:./.driver/CMSIS/Core/core_cm3.h **** 
 669:./.driver/CMSIS/Core/core_cm3.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0                                             /*!< Core
 670:./.driver/CMSIS/Core/core_cm3.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1Ful << CoreDebug_DCRSR_REGSEL_Pos)         /*!< Core
 671:./.driver/CMSIS/Core/core_cm3.h **** 
 672:./.driver/CMSIS/Core/core_cm3.h **** /* Debug Exception and Monitor Control Register */
 673:./.driver/CMSIS/Core/core_cm3.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24                                             /*!< Core
 674:./.driver/CMSIS/Core/core_cm3.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1ul << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
 675:./.driver/CMSIS/Core/core_cm3.h **** 
 676:./.driver/CMSIS/Core/core_cm3.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19                                             /*!< Core
 677:./.driver/CMSIS/Core/core_cm3.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1ul << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
 678:./.driver/CMSIS/Core/core_cm3.h **** 
 679:./.driver/CMSIS/Core/core_cm3.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18                                             /*!< Core
 680:./.driver/CMSIS/Core/core_cm3.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1ul << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
 681:./.driver/CMSIS/Core/core_cm3.h **** 
 682:./.driver/CMSIS/Core/core_cm3.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17                                             /*!< Core
 683:./.driver/CMSIS/Core/core_cm3.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1ul << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
 684:./.driver/CMSIS/Core/core_cm3.h **** 
 685:./.driver/CMSIS/Core/core_cm3.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16                                             /*!< Core
 686:./.driver/CMSIS/Core/core_cm3.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1ul << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
 687:./.driver/CMSIS/Core/core_cm3.h **** 
 688:./.driver/CMSIS/Core/core_cm3.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10                                             /*!< Core
 689:./.driver/CMSIS/Core/core_cm3.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1ul << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
 690:./.driver/CMSIS/Core/core_cm3.h **** 
 691:./.driver/CMSIS/Core/core_cm3.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9                                             /*!< Core
 692:./.driver/CMSIS/Core/core_cm3.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1ul << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
 693:./.driver/CMSIS/Core/core_cm3.h **** 
 694:./.driver/CMSIS/Core/core_cm3.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8                                             /*!< Core
 695:./.driver/CMSIS/Core/core_cm3.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1ul << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
 696:./.driver/CMSIS/Core/core_cm3.h **** 
 697:./.driver/CMSIS/Core/core_cm3.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7                                             /*!< Core
 698:./.driver/CMSIS/Core/core_cm3.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1ul << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
 699:./.driver/CMSIS/Core/core_cm3.h **** 
 700:./.driver/CMSIS/Core/core_cm3.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6                                             /*!< Core
 701:./.driver/CMSIS/Core/core_cm3.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1ul << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
 702:./.driver/CMSIS/Core/core_cm3.h **** 
 703:./.driver/CMSIS/Core/core_cm3.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5                                             /*!< Core
 704:./.driver/CMSIS/Core/core_cm3.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1ul << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
 705:./.driver/CMSIS/Core/core_cm3.h **** 
 706:./.driver/CMSIS/Core/core_cm3.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4                                             /*!< Core
 707:./.driver/CMSIS/Core/core_cm3.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1ul << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
 708:./.driver/CMSIS/Core/core_cm3.h **** 
 709:./.driver/CMSIS/Core/core_cm3.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0                                             /*!< Core
 710:./.driver/CMSIS/Core/core_cm3.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1ul << CoreDebug_DEMCR_VC_CORERESET_Pos)      /*!< Core
 711:./.driver/CMSIS/Core/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_CoreDebug */
 712:./.driver/CMSIS/Core/core_cm3.h **** 
 713:./.driver/CMSIS/Core/core_cm3.h **** 
 714:./.driver/CMSIS/Core/core_cm3.h **** /* Memory mapping of Cortex-M3 Hardware */
 715:./.driver/CMSIS/Core/core_cm3.h **** #define SCS_BASE            (0xE000E000)                              /*!< System Control Space Bas
 716:./.driver/CMSIS/Core/core_cm3.h **** #define ITM_BASE            (0xE0000000)                              /*!< ITM Base Address        
 717:./.driver/CMSIS/Core/core_cm3.h **** #define CoreDebug_BASE      (0xE000EDF0)                              /*!< Core Debug Base Address 
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s 			page 14


 718:./.driver/CMSIS/Core/core_cm3.h **** #define SysTick_BASE        (SCS_BASE +  0x0010)                      /*!< SysTick Base Address    
 719:./.driver/CMSIS/Core/core_cm3.h **** #define NVIC_BASE           (SCS_BASE +  0x0100)                      /*!< NVIC Base Address       
 720:./.driver/CMSIS/Core/core_cm3.h **** #define SCB_BASE            (SCS_BASE +  0x0D00)                      /*!< System Control Block Bas
 721:./.driver/CMSIS/Core/core_cm3.h **** 
 722:./.driver/CMSIS/Core/core_cm3.h **** #define InterruptType       ((InterruptType_Type *) SCS_BASE)         /*!< Interrupt Type Register 
 723:./.driver/CMSIS/Core/core_cm3.h **** #define SCB                 ((SCB_Type *)           SCB_BASE)         /*!< SCB configuration struct
 724:./.driver/CMSIS/Core/core_cm3.h **** #define SysTick             ((SysTick_Type *)       SysTick_BASE)     /*!< SysTick configuration st
 725:./.driver/CMSIS/Core/core_cm3.h **** #define NVIC                ((NVIC_Type *)          NVIC_BASE)        /*!< NVIC configuration struc
 726:./.driver/CMSIS/Core/core_cm3.h **** #define ITM                 ((ITM_Type *)           ITM_BASE)         /*!< ITM configuration struct
 727:./.driver/CMSIS/Core/core_cm3.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
 728:./.driver/CMSIS/Core/core_cm3.h **** 
 729:./.driver/CMSIS/Core/core_cm3.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1)
 730:./.driver/CMSIS/Core/core_cm3.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90)                      /*!< Memory Protection Unit  
 731:./.driver/CMSIS/Core/core_cm3.h ****   #define MPU               ((MPU_Type*)            MPU_BASE)         /*!< Memory Protection Unit  
 732:./.driver/CMSIS/Core/core_cm3.h **** #endif
 733:./.driver/CMSIS/Core/core_cm3.h **** 
 734:./.driver/CMSIS/Core/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_core_register */
 735:./.driver/CMSIS/Core/core_cm3.h **** 
 736:./.driver/CMSIS/Core/core_cm3.h **** 
 737:./.driver/CMSIS/Core/core_cm3.h **** /*******************************************************************************
 738:./.driver/CMSIS/Core/core_cm3.h ****  *                Hardware Abstraction Layer
 739:./.driver/CMSIS/Core/core_cm3.h ****  ******************************************************************************/
 740:./.driver/CMSIS/Core/core_cm3.h **** 
 741:./.driver/CMSIS/Core/core_cm3.h **** #if defined ( __CC_ARM   )
 742:./.driver/CMSIS/Core/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
 743:./.driver/CMSIS/Core/core_cm3.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
 744:./.driver/CMSIS/Core/core_cm3.h **** 
 745:./.driver/CMSIS/Core/core_cm3.h **** #elif defined ( __ICCARM__ )
 746:./.driver/CMSIS/Core/core_cm3.h ****   #define __ASM           __asm                                       /*!< asm keyword for IAR Comp
 747:./.driver/CMSIS/Core/core_cm3.h ****   #define __INLINE        inline                                      /*!< inline keyword for IAR C
 748:./.driver/CMSIS/Core/core_cm3.h **** 
 749:./.driver/CMSIS/Core/core_cm3.h **** #elif defined   (  __GNUC__  )
 750:./.driver/CMSIS/Core/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for GNU Comp
 751:./.driver/CMSIS/Core/core_cm3.h ****   #define __INLINE         inline                                     /*!< inline keyword for GNU C
 752:./.driver/CMSIS/Core/core_cm3.h **** 
 753:./.driver/CMSIS/Core/core_cm3.h **** #elif defined   (  __TASKING__  )
 754:./.driver/CMSIS/Core/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for TASKING 
 755:./.driver/CMSIS/Core/core_cm3.h ****   #define __INLINE         inline                                     /*!< inline keyword for TASKI
 756:./.driver/CMSIS/Core/core_cm3.h **** 
 757:./.driver/CMSIS/Core/core_cm3.h **** #endif
 758:./.driver/CMSIS/Core/core_cm3.h **** 
 759:./.driver/CMSIS/Core/core_cm3.h **** 
 760:./.driver/CMSIS/Core/core_cm3.h **** /* ###################  Compiler specific Intrinsics  ########################### */
 761:./.driver/CMSIS/Core/core_cm3.h **** 
 762:./.driver/CMSIS/Core/core_cm3.h **** #if defined ( __CC_ARM   ) /*------------------RealView Compiler -----------------*/
 763:./.driver/CMSIS/Core/core_cm3.h **** /* ARM armcc specific functions */
 764:./.driver/CMSIS/Core/core_cm3.h **** 
 765:./.driver/CMSIS/Core/core_cm3.h **** #define __enable_fault_irq                __enable_fiq
 766:./.driver/CMSIS/Core/core_cm3.h **** #define __disable_fault_irq               __disable_fiq
 767:./.driver/CMSIS/Core/core_cm3.h **** 
 768:./.driver/CMSIS/Core/core_cm3.h **** #define __NOP                             __nop
 769:./.driver/CMSIS/Core/core_cm3.h **** #define __WFI                             __wfi
 770:./.driver/CMSIS/Core/core_cm3.h **** #define __WFE                             __wfe
 771:./.driver/CMSIS/Core/core_cm3.h **** #define __SEV                             __sev
 772:./.driver/CMSIS/Core/core_cm3.h **** #define __ISB()                           __isb(0)
 773:./.driver/CMSIS/Core/core_cm3.h **** #define __DSB()                           __dsb(0)
 774:./.driver/CMSIS/Core/core_cm3.h **** #define __DMB()                           __dmb(0)
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s 			page 15


 775:./.driver/CMSIS/Core/core_cm3.h **** #define __REV                             __rev
 776:./.driver/CMSIS/Core/core_cm3.h **** #define __RBIT                            __rbit
 777:./.driver/CMSIS/Core/core_cm3.h **** #define __LDREXB(ptr)                     ((unsigned char ) __ldrex(ptr))
 778:./.driver/CMSIS/Core/core_cm3.h **** #define __LDREXH(ptr)                     ((unsigned short) __ldrex(ptr))
 779:./.driver/CMSIS/Core/core_cm3.h **** #define __LDREXW(ptr)                     ((unsigned int  ) __ldrex(ptr))
 780:./.driver/CMSIS/Core/core_cm3.h **** #define __STREXB(value, ptr)              __strex(value, ptr)
 781:./.driver/CMSIS/Core/core_cm3.h **** #define __STREXH(value, ptr)              __strex(value, ptr)
 782:./.driver/CMSIS/Core/core_cm3.h **** #define __STREXW(value, ptr)              __strex(value, ptr)
 783:./.driver/CMSIS/Core/core_cm3.h **** 
 784:./.driver/CMSIS/Core/core_cm3.h **** 
 785:./.driver/CMSIS/Core/core_cm3.h **** /* intrinsic unsigned long long __ldrexd(volatile void *ptr) */
 786:./.driver/CMSIS/Core/core_cm3.h **** /* intrinsic int __strexd(unsigned long long val, volatile void *ptr) */
 787:./.driver/CMSIS/Core/core_cm3.h **** /* intrinsic void __enable_irq();     */
 788:./.driver/CMSIS/Core/core_cm3.h **** /* intrinsic void __disable_irq();    */
 789:./.driver/CMSIS/Core/core_cm3.h **** 
 790:./.driver/CMSIS/Core/core_cm3.h **** 
 791:./.driver/CMSIS/Core/core_cm3.h **** /**
 792:./.driver/CMSIS/Core/core_cm3.h ****  * @brief  Return the Process Stack Pointer
 793:./.driver/CMSIS/Core/core_cm3.h ****  *
 794:./.driver/CMSIS/Core/core_cm3.h ****  * @return ProcessStackPointer
 795:./.driver/CMSIS/Core/core_cm3.h ****  *
 796:./.driver/CMSIS/Core/core_cm3.h ****  * Return the actual process stack pointer
 797:./.driver/CMSIS/Core/core_cm3.h ****  */
 798:./.driver/CMSIS/Core/core_cm3.h **** extern uint32_t __get_PSP(void);
 799:./.driver/CMSIS/Core/core_cm3.h **** 
 800:./.driver/CMSIS/Core/core_cm3.h **** /**
 801:./.driver/CMSIS/Core/core_cm3.h ****  * @brief  Set the Process Stack Pointer
 802:./.driver/CMSIS/Core/core_cm3.h ****  *
 803:./.driver/CMSIS/Core/core_cm3.h ****  * @param  topOfProcStack  Process Stack Pointer
 804:./.driver/CMSIS/Core/core_cm3.h ****  *
 805:./.driver/CMSIS/Core/core_cm3.h ****  * Assign the value ProcessStackPointer to the MSP 
 806:./.driver/CMSIS/Core/core_cm3.h ****  * (process stack pointer) Cortex processor register
 807:./.driver/CMSIS/Core/core_cm3.h ****  */
 808:./.driver/CMSIS/Core/core_cm3.h **** extern void __set_PSP(uint32_t topOfProcStack);
 809:./.driver/CMSIS/Core/core_cm3.h **** 
 810:./.driver/CMSIS/Core/core_cm3.h **** /**
 811:./.driver/CMSIS/Core/core_cm3.h ****  * @brief  Return the Main Stack Pointer
 812:./.driver/CMSIS/Core/core_cm3.h ****  *
 813:./.driver/CMSIS/Core/core_cm3.h ****  * @return Main Stack Pointer
 814:./.driver/CMSIS/Core/core_cm3.h ****  *
 815:./.driver/CMSIS/Core/core_cm3.h ****  * Return the current value of the MSP (main stack pointer)
 816:./.driver/CMSIS/Core/core_cm3.h ****  * Cortex processor register
 817:./.driver/CMSIS/Core/core_cm3.h ****  */
 818:./.driver/CMSIS/Core/core_cm3.h **** extern uint32_t __get_MSP(void);
 819:./.driver/CMSIS/Core/core_cm3.h **** 
 820:./.driver/CMSIS/Core/core_cm3.h **** /**
 821:./.driver/CMSIS/Core/core_cm3.h ****  * @brief  Set the Main Stack Pointer
 822:./.driver/CMSIS/Core/core_cm3.h ****  *
 823:./.driver/CMSIS/Core/core_cm3.h ****  * @param  topOfMainStack  Main Stack Pointer
 824:./.driver/CMSIS/Core/core_cm3.h ****  *
 825:./.driver/CMSIS/Core/core_cm3.h ****  * Assign the value mainStackPointer to the MSP 
 826:./.driver/CMSIS/Core/core_cm3.h ****  * (main stack pointer) Cortex processor register
 827:./.driver/CMSIS/Core/core_cm3.h ****  */
 828:./.driver/CMSIS/Core/core_cm3.h **** extern void __set_MSP(uint32_t topOfMainStack);
 829:./.driver/CMSIS/Core/core_cm3.h **** 
 830:./.driver/CMSIS/Core/core_cm3.h **** /**
 831:./.driver/CMSIS/Core/core_cm3.h ****  * @brief  Reverse byte order in unsigned short value
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s 			page 16


 832:./.driver/CMSIS/Core/core_cm3.h ****  *
 833:./.driver/CMSIS/Core/core_cm3.h ****  * @param   value  value to reverse
 834:./.driver/CMSIS/Core/core_cm3.h ****  * @return         reversed value
 835:./.driver/CMSIS/Core/core_cm3.h ****  *
 836:./.driver/CMSIS/Core/core_cm3.h ****  * Reverse byte order in unsigned short value
 837:./.driver/CMSIS/Core/core_cm3.h ****  */
 838:./.driver/CMSIS/Core/core_cm3.h **** extern uint32_t __REV16(uint16_t value);
 839:./.driver/CMSIS/Core/core_cm3.h **** 
 840:./.driver/CMSIS/Core/core_cm3.h **** /**
 841:./.driver/CMSIS/Core/core_cm3.h ****  * @brief  Reverse byte order in signed short value with sign extension to integer
 842:./.driver/CMSIS/Core/core_cm3.h ****  *
 843:./.driver/CMSIS/Core/core_cm3.h ****  * @param   value  value to reverse
 844:./.driver/CMSIS/Core/core_cm3.h ****  * @return         reversed value
 845:./.driver/CMSIS/Core/core_cm3.h ****  *
 846:./.driver/CMSIS/Core/core_cm3.h ****  * Reverse byte order in signed short value with sign extension to integer
 847:./.driver/CMSIS/Core/core_cm3.h ****  */
 848:./.driver/CMSIS/Core/core_cm3.h **** extern int32_t __REVSH(int16_t value);
 849:./.driver/CMSIS/Core/core_cm3.h **** 
 850:./.driver/CMSIS/Core/core_cm3.h **** 
 851:./.driver/CMSIS/Core/core_cm3.h **** #if (__ARMCC_VERSION < 400000)
 852:./.driver/CMSIS/Core/core_cm3.h **** 
 853:./.driver/CMSIS/Core/core_cm3.h **** /**
 854:./.driver/CMSIS/Core/core_cm3.h ****  * @brief  Remove the exclusive lock created by ldrex
 855:./.driver/CMSIS/Core/core_cm3.h ****  *
 856:./.driver/CMSIS/Core/core_cm3.h ****  * Removes the exclusive lock which is created by ldrex.
 857:./.driver/CMSIS/Core/core_cm3.h ****  */
 858:./.driver/CMSIS/Core/core_cm3.h **** extern void __CLREX(void);
 859:./.driver/CMSIS/Core/core_cm3.h **** 
 860:./.driver/CMSIS/Core/core_cm3.h **** /**
 861:./.driver/CMSIS/Core/core_cm3.h ****  * @brief  Return the Base Priority value
 862:./.driver/CMSIS/Core/core_cm3.h ****  *
 863:./.driver/CMSIS/Core/core_cm3.h ****  * @return BasePriority
 864:./.driver/CMSIS/Core/core_cm3.h ****  *
 865:./.driver/CMSIS/Core/core_cm3.h ****  * Return the content of the base priority register
 866:./.driver/CMSIS/Core/core_cm3.h ****  */
 867:./.driver/CMSIS/Core/core_cm3.h **** extern uint32_t __get_BASEPRI(void);
 868:./.driver/CMSIS/Core/core_cm3.h **** 
 869:./.driver/CMSIS/Core/core_cm3.h **** /**
 870:./.driver/CMSIS/Core/core_cm3.h ****  * @brief  Set the Base Priority value
 871:./.driver/CMSIS/Core/core_cm3.h ****  *
 872:./.driver/CMSIS/Core/core_cm3.h ****  * @param  basePri  BasePriority
 873:./.driver/CMSIS/Core/core_cm3.h ****  *
 874:./.driver/CMSIS/Core/core_cm3.h ****  * Set the base priority register
 875:./.driver/CMSIS/Core/core_cm3.h ****  */
 876:./.driver/CMSIS/Core/core_cm3.h **** extern void __set_BASEPRI(uint32_t basePri);
 877:./.driver/CMSIS/Core/core_cm3.h **** 
 878:./.driver/CMSIS/Core/core_cm3.h **** /**
 879:./.driver/CMSIS/Core/core_cm3.h ****  * @brief  Return the Priority Mask value
 880:./.driver/CMSIS/Core/core_cm3.h ****  *
 881:./.driver/CMSIS/Core/core_cm3.h ****  * @return PriMask
 882:./.driver/CMSIS/Core/core_cm3.h ****  *
 883:./.driver/CMSIS/Core/core_cm3.h ****  * Return state of the priority mask bit from the priority mask register
 884:./.driver/CMSIS/Core/core_cm3.h ****  */
 885:./.driver/CMSIS/Core/core_cm3.h **** extern uint32_t __get_PRIMASK(void);
 886:./.driver/CMSIS/Core/core_cm3.h **** 
 887:./.driver/CMSIS/Core/core_cm3.h **** /**
 888:./.driver/CMSIS/Core/core_cm3.h ****  * @brief  Set the Priority Mask value
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s 			page 17


 889:./.driver/CMSIS/Core/core_cm3.h ****  *
 890:./.driver/CMSIS/Core/core_cm3.h ****  * @param   priMask  PriMask
 891:./.driver/CMSIS/Core/core_cm3.h ****  *
 892:./.driver/CMSIS/Core/core_cm3.h ****  * Set the priority mask bit in the priority mask register
 893:./.driver/CMSIS/Core/core_cm3.h ****  */
 894:./.driver/CMSIS/Core/core_cm3.h **** extern void __set_PRIMASK(uint32_t priMask);
 895:./.driver/CMSIS/Core/core_cm3.h **** 
 896:./.driver/CMSIS/Core/core_cm3.h **** /**
 897:./.driver/CMSIS/Core/core_cm3.h ****  * @brief  Return the Fault Mask value
 898:./.driver/CMSIS/Core/core_cm3.h ****  *
 899:./.driver/CMSIS/Core/core_cm3.h ****  * @return FaultMask
 900:./.driver/CMSIS/Core/core_cm3.h ****  *
 901:./.driver/CMSIS/Core/core_cm3.h ****  * Return the content of the fault mask register
 902:./.driver/CMSIS/Core/core_cm3.h ****  */
 903:./.driver/CMSIS/Core/core_cm3.h **** extern uint32_t __get_FAULTMASK(void);
 904:./.driver/CMSIS/Core/core_cm3.h **** 
 905:./.driver/CMSIS/Core/core_cm3.h **** /**
 906:./.driver/CMSIS/Core/core_cm3.h ****  * @brief  Set the Fault Mask value
 907:./.driver/CMSIS/Core/core_cm3.h ****  *
 908:./.driver/CMSIS/Core/core_cm3.h ****  * @param  faultMask faultMask value
 909:./.driver/CMSIS/Core/core_cm3.h ****  *
 910:./.driver/CMSIS/Core/core_cm3.h ****  * Set the fault mask register
 911:./.driver/CMSIS/Core/core_cm3.h ****  */
 912:./.driver/CMSIS/Core/core_cm3.h **** extern void __set_FAULTMASK(uint32_t faultMask);
 913:./.driver/CMSIS/Core/core_cm3.h **** 
 914:./.driver/CMSIS/Core/core_cm3.h **** /**
 915:./.driver/CMSIS/Core/core_cm3.h ****  * @brief  Return the Control Register value
 916:./.driver/CMSIS/Core/core_cm3.h ****  * 
 917:./.driver/CMSIS/Core/core_cm3.h ****  * @return Control value
 918:./.driver/CMSIS/Core/core_cm3.h ****  *
 919:./.driver/CMSIS/Core/core_cm3.h ****  * Return the content of the control register
 920:./.driver/CMSIS/Core/core_cm3.h ****  */
 921:./.driver/CMSIS/Core/core_cm3.h **** extern uint32_t __get_CONTROL(void);
 922:./.driver/CMSIS/Core/core_cm3.h **** 
 923:./.driver/CMSIS/Core/core_cm3.h **** /**
 924:./.driver/CMSIS/Core/core_cm3.h ****  * @brief  Set the Control Register value
 925:./.driver/CMSIS/Core/core_cm3.h ****  *
 926:./.driver/CMSIS/Core/core_cm3.h ****  * @param  control  Control value
 927:./.driver/CMSIS/Core/core_cm3.h ****  *
 928:./.driver/CMSIS/Core/core_cm3.h ****  * Set the control register
 929:./.driver/CMSIS/Core/core_cm3.h ****  */
 930:./.driver/CMSIS/Core/core_cm3.h **** extern void __set_CONTROL(uint32_t control);
 931:./.driver/CMSIS/Core/core_cm3.h **** 
 932:./.driver/CMSIS/Core/core_cm3.h **** #else  /* (__ARMCC_VERSION >= 400000)  */
 933:./.driver/CMSIS/Core/core_cm3.h **** 
 934:./.driver/CMSIS/Core/core_cm3.h **** /**
 935:./.driver/CMSIS/Core/core_cm3.h ****  * @brief  Remove the exclusive lock created by ldrex
 936:./.driver/CMSIS/Core/core_cm3.h ****  *
 937:./.driver/CMSIS/Core/core_cm3.h ****  * Removes the exclusive lock which is created by ldrex.
 938:./.driver/CMSIS/Core/core_cm3.h ****  */
 939:./.driver/CMSIS/Core/core_cm3.h **** #define __CLREX                           __clrex
 940:./.driver/CMSIS/Core/core_cm3.h **** 
 941:./.driver/CMSIS/Core/core_cm3.h **** /**
 942:./.driver/CMSIS/Core/core_cm3.h ****  * @brief  Return the Base Priority value
 943:./.driver/CMSIS/Core/core_cm3.h ****  *
 944:./.driver/CMSIS/Core/core_cm3.h ****  * @return BasePriority
 945:./.driver/CMSIS/Core/core_cm3.h ****  *
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s 			page 18


 946:./.driver/CMSIS/Core/core_cm3.h ****  * Return the content of the base priority register
 947:./.driver/CMSIS/Core/core_cm3.h ****  */
 948:./.driver/CMSIS/Core/core_cm3.h **** static __INLINE uint32_t  __get_BASEPRI(void)
 949:./.driver/CMSIS/Core/core_cm3.h **** {
 950:./.driver/CMSIS/Core/core_cm3.h ****   register uint32_t __regBasePri         __ASM("basepri");
 951:./.driver/CMSIS/Core/core_cm3.h ****   return(__regBasePri);
 952:./.driver/CMSIS/Core/core_cm3.h **** }
 953:./.driver/CMSIS/Core/core_cm3.h **** 
 954:./.driver/CMSIS/Core/core_cm3.h **** /**
 955:./.driver/CMSIS/Core/core_cm3.h ****  * @brief  Set the Base Priority value
 956:./.driver/CMSIS/Core/core_cm3.h ****  *
 957:./.driver/CMSIS/Core/core_cm3.h ****  * @param  basePri  BasePriority
 958:./.driver/CMSIS/Core/core_cm3.h ****  *
 959:./.driver/CMSIS/Core/core_cm3.h ****  * Set the base priority register
 960:./.driver/CMSIS/Core/core_cm3.h ****  */
 961:./.driver/CMSIS/Core/core_cm3.h **** static __INLINE void __set_BASEPRI(uint32_t basePri)
 962:./.driver/CMSIS/Core/core_cm3.h **** {
 963:./.driver/CMSIS/Core/core_cm3.h ****   register uint32_t __regBasePri         __ASM("basepri");
 964:./.driver/CMSIS/Core/core_cm3.h ****   __regBasePri = (basePri & 0xff);
 965:./.driver/CMSIS/Core/core_cm3.h **** }
 966:./.driver/CMSIS/Core/core_cm3.h **** 
 967:./.driver/CMSIS/Core/core_cm3.h **** /**
 968:./.driver/CMSIS/Core/core_cm3.h ****  * @brief  Return the Priority Mask value
 969:./.driver/CMSIS/Core/core_cm3.h ****  *
 970:./.driver/CMSIS/Core/core_cm3.h ****  * @return PriMask
 971:./.driver/CMSIS/Core/core_cm3.h ****  *
 972:./.driver/CMSIS/Core/core_cm3.h ****  * Return state of the priority mask bit from the priority mask register
 973:./.driver/CMSIS/Core/core_cm3.h ****  */
 974:./.driver/CMSIS/Core/core_cm3.h **** static __INLINE uint32_t __get_PRIMASK(void)
 975:./.driver/CMSIS/Core/core_cm3.h **** {
 976:./.driver/CMSIS/Core/core_cm3.h ****   register uint32_t __regPriMask         __ASM("primask");
 977:./.driver/CMSIS/Core/core_cm3.h ****   return(__regPriMask);
 978:./.driver/CMSIS/Core/core_cm3.h **** }
 979:./.driver/CMSIS/Core/core_cm3.h **** 
 980:./.driver/CMSIS/Core/core_cm3.h **** /**
 981:./.driver/CMSIS/Core/core_cm3.h ****  * @brief  Set the Priority Mask value
 982:./.driver/CMSIS/Core/core_cm3.h ****  *
 983:./.driver/CMSIS/Core/core_cm3.h ****  * @param  priMask  PriMask
 984:./.driver/CMSIS/Core/core_cm3.h ****  *
 985:./.driver/CMSIS/Core/core_cm3.h ****  * Set the priority mask bit in the priority mask register
 986:./.driver/CMSIS/Core/core_cm3.h ****  */
 987:./.driver/CMSIS/Core/core_cm3.h **** static __INLINE void __set_PRIMASK(uint32_t priMask)
 988:./.driver/CMSIS/Core/core_cm3.h **** {
 989:./.driver/CMSIS/Core/core_cm3.h ****   register uint32_t __regPriMask         __ASM("primask");
 990:./.driver/CMSIS/Core/core_cm3.h ****   __regPriMask = (priMask);
 991:./.driver/CMSIS/Core/core_cm3.h **** }
 992:./.driver/CMSIS/Core/core_cm3.h **** 
 993:./.driver/CMSIS/Core/core_cm3.h **** /**
 994:./.driver/CMSIS/Core/core_cm3.h ****  * @brief  Return the Fault Mask value
 995:./.driver/CMSIS/Core/core_cm3.h ****  *
 996:./.driver/CMSIS/Core/core_cm3.h ****  * @return FaultMask
 997:./.driver/CMSIS/Core/core_cm3.h ****  *
 998:./.driver/CMSIS/Core/core_cm3.h ****  * Return the content of the fault mask register
 999:./.driver/CMSIS/Core/core_cm3.h ****  */
1000:./.driver/CMSIS/Core/core_cm3.h **** static __INLINE uint32_t __get_FAULTMASK(void)
1001:./.driver/CMSIS/Core/core_cm3.h **** {
1002:./.driver/CMSIS/Core/core_cm3.h ****   register uint32_t __regFaultMask       __ASM("faultmask");
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s 			page 19


1003:./.driver/CMSIS/Core/core_cm3.h ****   return(__regFaultMask);
1004:./.driver/CMSIS/Core/core_cm3.h **** }
1005:./.driver/CMSIS/Core/core_cm3.h **** 
1006:./.driver/CMSIS/Core/core_cm3.h **** /**
1007:./.driver/CMSIS/Core/core_cm3.h ****  * @brief  Set the Fault Mask value
1008:./.driver/CMSIS/Core/core_cm3.h ****  *
1009:./.driver/CMSIS/Core/core_cm3.h ****  * @param  faultMask  faultMask value
1010:./.driver/CMSIS/Core/core_cm3.h ****  *
1011:./.driver/CMSIS/Core/core_cm3.h ****  * Set the fault mask register
1012:./.driver/CMSIS/Core/core_cm3.h ****  */
1013:./.driver/CMSIS/Core/core_cm3.h **** static __INLINE void __set_FAULTMASK(uint32_t faultMask)
1014:./.driver/CMSIS/Core/core_cm3.h **** {
1015:./.driver/CMSIS/Core/core_cm3.h ****   register uint32_t __regFaultMask       __ASM("faultmask");
1016:./.driver/CMSIS/Core/core_cm3.h ****   __regFaultMask = (faultMask & 1);
1017:./.driver/CMSIS/Core/core_cm3.h **** }
1018:./.driver/CMSIS/Core/core_cm3.h **** 
1019:./.driver/CMSIS/Core/core_cm3.h **** /**
1020:./.driver/CMSIS/Core/core_cm3.h ****  * @brief  Return the Control Register value
1021:./.driver/CMSIS/Core/core_cm3.h ****  * 
1022:./.driver/CMSIS/Core/core_cm3.h ****  * @return Control value
1023:./.driver/CMSIS/Core/core_cm3.h ****  *
1024:./.driver/CMSIS/Core/core_cm3.h ****  * Return the content of the control register
1025:./.driver/CMSIS/Core/core_cm3.h ****  */
1026:./.driver/CMSIS/Core/core_cm3.h **** static __INLINE uint32_t __get_CONTROL(void)
1027:./.driver/CMSIS/Core/core_cm3.h **** {
1028:./.driver/CMSIS/Core/core_cm3.h ****   register uint32_t __regControl         __ASM("control");
1029:./.driver/CMSIS/Core/core_cm3.h ****   return(__regControl);
1030:./.driver/CMSIS/Core/core_cm3.h **** }
1031:./.driver/CMSIS/Core/core_cm3.h **** 
1032:./.driver/CMSIS/Core/core_cm3.h **** /**
1033:./.driver/CMSIS/Core/core_cm3.h ****  * @brief  Set the Control Register value
1034:./.driver/CMSIS/Core/core_cm3.h ****  *
1035:./.driver/CMSIS/Core/core_cm3.h ****  * @param  control  Control value
1036:./.driver/CMSIS/Core/core_cm3.h ****  *
1037:./.driver/CMSIS/Core/core_cm3.h ****  * Set the control register
1038:./.driver/CMSIS/Core/core_cm3.h ****  */
1039:./.driver/CMSIS/Core/core_cm3.h **** static __INLINE void __set_CONTROL(uint32_t control)
1040:./.driver/CMSIS/Core/core_cm3.h **** {
1041:./.driver/CMSIS/Core/core_cm3.h ****   register uint32_t __regControl         __ASM("control");
1042:./.driver/CMSIS/Core/core_cm3.h ****   __regControl = control;
1043:./.driver/CMSIS/Core/core_cm3.h **** }
1044:./.driver/CMSIS/Core/core_cm3.h **** 
1045:./.driver/CMSIS/Core/core_cm3.h **** #endif /* __ARMCC_VERSION  */ 
1046:./.driver/CMSIS/Core/core_cm3.h **** 
1047:./.driver/CMSIS/Core/core_cm3.h **** 
1048:./.driver/CMSIS/Core/core_cm3.h **** 
1049:./.driver/CMSIS/Core/core_cm3.h **** #elif (defined (__ICCARM__)) /*------------------ ICC Compiler -------------------*/
1050:./.driver/CMSIS/Core/core_cm3.h **** /* IAR iccarm specific functions */
1051:./.driver/CMSIS/Core/core_cm3.h **** 
1052:./.driver/CMSIS/Core/core_cm3.h **** #define __enable_irq                              __enable_interrupt        /*!< global Interrupt e
1053:./.driver/CMSIS/Core/core_cm3.h **** #define __disable_irq                             __disable_interrupt       /*!< global Interrupt d
1054:./.driver/CMSIS/Core/core_cm3.h **** 
1055:./.driver/CMSIS/Core/core_cm3.h **** static __INLINE void __enable_fault_irq()         { __ASM ("cpsie f"); }
1056:./.driver/CMSIS/Core/core_cm3.h **** static __INLINE void __disable_fault_irq()        { __ASM ("cpsid f"); }
1057:./.driver/CMSIS/Core/core_cm3.h **** 
1058:./.driver/CMSIS/Core/core_cm3.h **** #define __NOP                                     __no_operation            /*!< no operation intri
1059:./.driver/CMSIS/Core/core_cm3.h **** static __INLINE  void __WFI()                     { __ASM ("wfi"); }
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s 			page 20


1060:./.driver/CMSIS/Core/core_cm3.h **** static __INLINE  void __WFE()                     { __ASM ("wfe"); }
1061:./.driver/CMSIS/Core/core_cm3.h **** static __INLINE  void __SEV()                     { __ASM ("sev"); }
1062:./.driver/CMSIS/Core/core_cm3.h **** static __INLINE  void __CLREX()                   { __ASM ("clrex"); }
1063:./.driver/CMSIS/Core/core_cm3.h **** 
1064:./.driver/CMSIS/Core/core_cm3.h **** /* intrinsic void __ISB(void)                                     */
1065:./.driver/CMSIS/Core/core_cm3.h **** /* intrinsic void __DSB(void)                                     */
1066:./.driver/CMSIS/Core/core_cm3.h **** /* intrinsic void __DMB(void)                                     */
1067:./.driver/CMSIS/Core/core_cm3.h **** /* intrinsic void __set_PRIMASK();                                */
1068:./.driver/CMSIS/Core/core_cm3.h **** /* intrinsic void __get_PRIMASK();                                */
1069:./.driver/CMSIS/Core/core_cm3.h **** /* intrinsic void __set_FAULTMASK();                              */
1070:./.driver/CMSIS/Core/core_cm3.h **** /* intrinsic void __get_FAULTMASK();                              */
1071:./.driver/CMSIS/Core/core_cm3.h **** /* intrinsic uint32_t __REV(uint32_t value);                      */
1072:./.driver/CMSIS/Core/core_cm3.h **** /* intrinsic uint32_t __REVSH(uint32_t value);                    */
1073:./.driver/CMSIS/Core/core_cm3.h **** /* intrinsic unsigned long __STREX(unsigned long, unsigned long); */
1074:./.driver/CMSIS/Core/core_cm3.h **** /* intrinsic unsigned long __LDREX(unsigned long *);              */
1075:./.driver/CMSIS/Core/core_cm3.h **** 
1076:./.driver/CMSIS/Core/core_cm3.h **** 
1077:./.driver/CMSIS/Core/core_cm3.h **** /**
1078:./.driver/CMSIS/Core/core_cm3.h ****  * @brief  Return the Process Stack Pointer
1079:./.driver/CMSIS/Core/core_cm3.h ****  *
1080:./.driver/CMSIS/Core/core_cm3.h ****  * @return ProcessStackPointer
1081:./.driver/CMSIS/Core/core_cm3.h ****  *
1082:./.driver/CMSIS/Core/core_cm3.h ****  * Return the actual process stack pointer
1083:./.driver/CMSIS/Core/core_cm3.h ****  */
1084:./.driver/CMSIS/Core/core_cm3.h **** extern uint32_t __get_PSP(void);
1085:./.driver/CMSIS/Core/core_cm3.h **** 
1086:./.driver/CMSIS/Core/core_cm3.h **** /**
1087:./.driver/CMSIS/Core/core_cm3.h ****  * @brief  Set the Process Stack Pointer
1088:./.driver/CMSIS/Core/core_cm3.h ****  *
1089:./.driver/CMSIS/Core/core_cm3.h ****  * @param  topOfProcStack  Process Stack Pointer
1090:./.driver/CMSIS/Core/core_cm3.h ****  *
1091:./.driver/CMSIS/Core/core_cm3.h ****  * Assign the value ProcessStackPointer to the MSP 
1092:./.driver/CMSIS/Core/core_cm3.h ****  * (process stack pointer) Cortex processor register
1093:./.driver/CMSIS/Core/core_cm3.h ****  */
1094:./.driver/CMSIS/Core/core_cm3.h **** extern void __set_PSP(uint32_t topOfProcStack);
1095:./.driver/CMSIS/Core/core_cm3.h **** 
1096:./.driver/CMSIS/Core/core_cm3.h **** /**
1097:./.driver/CMSIS/Core/core_cm3.h ****  * @brief  Return the Main Stack Pointer
1098:./.driver/CMSIS/Core/core_cm3.h ****  *
1099:./.driver/CMSIS/Core/core_cm3.h ****  * @return Main Stack Pointer
1100:./.driver/CMSIS/Core/core_cm3.h ****  *
1101:./.driver/CMSIS/Core/core_cm3.h ****  * Return the current value of the MSP (main stack pointer)
1102:./.driver/CMSIS/Core/core_cm3.h ****  * Cortex processor register
1103:./.driver/CMSIS/Core/core_cm3.h ****  */
1104:./.driver/CMSIS/Core/core_cm3.h **** extern uint32_t __get_MSP(void);
1105:./.driver/CMSIS/Core/core_cm3.h **** 
1106:./.driver/CMSIS/Core/core_cm3.h **** /**
1107:./.driver/CMSIS/Core/core_cm3.h ****  * @brief  Set the Main Stack Pointer
1108:./.driver/CMSIS/Core/core_cm3.h ****  *
1109:./.driver/CMSIS/Core/core_cm3.h ****  * @param  topOfMainStack  Main Stack Pointer
1110:./.driver/CMSIS/Core/core_cm3.h ****  *
1111:./.driver/CMSIS/Core/core_cm3.h ****  * Assign the value mainStackPointer to the MSP 
1112:./.driver/CMSIS/Core/core_cm3.h ****  * (main stack pointer) Cortex processor register
1113:./.driver/CMSIS/Core/core_cm3.h ****  */
1114:./.driver/CMSIS/Core/core_cm3.h **** extern void __set_MSP(uint32_t topOfMainStack);
1115:./.driver/CMSIS/Core/core_cm3.h **** 
1116:./.driver/CMSIS/Core/core_cm3.h **** /**
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s 			page 21


1117:./.driver/CMSIS/Core/core_cm3.h ****  * @brief  Reverse byte order in unsigned short value
1118:./.driver/CMSIS/Core/core_cm3.h ****  *
1119:./.driver/CMSIS/Core/core_cm3.h ****  * @param  value  value to reverse
1120:./.driver/CMSIS/Core/core_cm3.h ****  * @return        reversed value
1121:./.driver/CMSIS/Core/core_cm3.h ****  *
1122:./.driver/CMSIS/Core/core_cm3.h ****  * Reverse byte order in unsigned short value
1123:./.driver/CMSIS/Core/core_cm3.h ****  */
1124:./.driver/CMSIS/Core/core_cm3.h **** extern uint32_t __REV16(uint16_t value);
1125:./.driver/CMSIS/Core/core_cm3.h **** 
1126:./.driver/CMSIS/Core/core_cm3.h **** /**
1127:./.driver/CMSIS/Core/core_cm3.h ****  * @brief  Reverse bit order of value
1128:./.driver/CMSIS/Core/core_cm3.h ****  *
1129:./.driver/CMSIS/Core/core_cm3.h ****  * @param  value  value to reverse
1130:./.driver/CMSIS/Core/core_cm3.h ****  * @return        reversed value
1131:./.driver/CMSIS/Core/core_cm3.h ****  *
1132:./.driver/CMSIS/Core/core_cm3.h ****  * Reverse bit order of value
1133:./.driver/CMSIS/Core/core_cm3.h ****  */
1134:./.driver/CMSIS/Core/core_cm3.h **** extern uint32_t __RBIT(uint32_t value);
1135:./.driver/CMSIS/Core/core_cm3.h **** 
1136:./.driver/CMSIS/Core/core_cm3.h **** /**
1137:./.driver/CMSIS/Core/core_cm3.h ****  * @brief  LDR Exclusive (8 bit)
1138:./.driver/CMSIS/Core/core_cm3.h ****  *
1139:./.driver/CMSIS/Core/core_cm3.h ****  * @param  *addr  address pointer
1140:./.driver/CMSIS/Core/core_cm3.h ****  * @return        value of (*address)
1141:./.driver/CMSIS/Core/core_cm3.h ****  *
1142:./.driver/CMSIS/Core/core_cm3.h ****  * Exclusive LDR command for 8 bit values)
1143:./.driver/CMSIS/Core/core_cm3.h ****  */
1144:./.driver/CMSIS/Core/core_cm3.h **** extern uint8_t __LDREXB(uint8_t *addr);
1145:./.driver/CMSIS/Core/core_cm3.h **** 
1146:./.driver/CMSIS/Core/core_cm3.h **** /**
1147:./.driver/CMSIS/Core/core_cm3.h ****  * @brief  LDR Exclusive (16 bit)
1148:./.driver/CMSIS/Core/core_cm3.h ****  *
1149:./.driver/CMSIS/Core/core_cm3.h ****  * @param  *addr  address pointer
1150:./.driver/CMSIS/Core/core_cm3.h ****  * @return        value of (*address)
1151:./.driver/CMSIS/Core/core_cm3.h ****  *
1152:./.driver/CMSIS/Core/core_cm3.h ****  * Exclusive LDR command for 16 bit values
1153:./.driver/CMSIS/Core/core_cm3.h ****  */
1154:./.driver/CMSIS/Core/core_cm3.h **** extern uint16_t __LDREXH(uint16_t *addr);
1155:./.driver/CMSIS/Core/core_cm3.h **** 
1156:./.driver/CMSIS/Core/core_cm3.h **** /**
1157:./.driver/CMSIS/Core/core_cm3.h ****  * @brief  LDR Exclusive (32 bit)
1158:./.driver/CMSIS/Core/core_cm3.h ****  *
1159:./.driver/CMSIS/Core/core_cm3.h ****  * @param  *addr  address pointer
1160:./.driver/CMSIS/Core/core_cm3.h ****  * @return        value of (*address)
1161:./.driver/CMSIS/Core/core_cm3.h ****  *
1162:./.driver/CMSIS/Core/core_cm3.h ****  * Exclusive LDR command for 32 bit values
1163:./.driver/CMSIS/Core/core_cm3.h ****  */
1164:./.driver/CMSIS/Core/core_cm3.h **** extern uint32_t __LDREXW(uint32_t *addr);
1165:./.driver/CMSIS/Core/core_cm3.h **** 
1166:./.driver/CMSIS/Core/core_cm3.h **** /**
1167:./.driver/CMSIS/Core/core_cm3.h ****  * @brief  STR Exclusive (8 bit)
1168:./.driver/CMSIS/Core/core_cm3.h ****  *
1169:./.driver/CMSIS/Core/core_cm3.h ****  * @param  value  value to store
1170:./.driver/CMSIS/Core/core_cm3.h ****  * @param  *addr  address pointer
1171:./.driver/CMSIS/Core/core_cm3.h ****  * @return        successful / failed
1172:./.driver/CMSIS/Core/core_cm3.h ****  *
1173:./.driver/CMSIS/Core/core_cm3.h ****  * Exclusive STR command for 8 bit values
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s 			page 22


1174:./.driver/CMSIS/Core/core_cm3.h ****  */
1175:./.driver/CMSIS/Core/core_cm3.h **** extern uint32_t __STREXB(uint8_t value, uint8_t *addr);
1176:./.driver/CMSIS/Core/core_cm3.h **** 
1177:./.driver/CMSIS/Core/core_cm3.h **** /**
1178:./.driver/CMSIS/Core/core_cm3.h ****  * @brief  STR Exclusive (16 bit)
1179:./.driver/CMSIS/Core/core_cm3.h ****  *
1180:./.driver/CMSIS/Core/core_cm3.h ****  * @param  value  value to store
1181:./.driver/CMSIS/Core/core_cm3.h ****  * @param  *addr  address pointer
1182:./.driver/CMSIS/Core/core_cm3.h ****  * @return        successful / failed
1183:./.driver/CMSIS/Core/core_cm3.h ****  *
1184:./.driver/CMSIS/Core/core_cm3.h ****  * Exclusive STR command for 16 bit values
1185:./.driver/CMSIS/Core/core_cm3.h ****  */
1186:./.driver/CMSIS/Core/core_cm3.h **** extern uint32_t __STREXH(uint16_t value, uint16_t *addr);
1187:./.driver/CMSIS/Core/core_cm3.h **** 
1188:./.driver/CMSIS/Core/core_cm3.h **** /**
1189:./.driver/CMSIS/Core/core_cm3.h ****  * @brief  STR Exclusive (32 bit)
1190:./.driver/CMSIS/Core/core_cm3.h ****  *
1191:./.driver/CMSIS/Core/core_cm3.h ****  * @param  value  value to store
1192:./.driver/CMSIS/Core/core_cm3.h ****  * @param  *addr  address pointer
1193:./.driver/CMSIS/Core/core_cm3.h ****  * @return        successful / failed
1194:./.driver/CMSIS/Core/core_cm3.h ****  *
1195:./.driver/CMSIS/Core/core_cm3.h ****  * Exclusive STR command for 32 bit values
1196:./.driver/CMSIS/Core/core_cm3.h ****  */
1197:./.driver/CMSIS/Core/core_cm3.h **** extern uint32_t __STREXW(uint32_t value, uint32_t *addr);
1198:./.driver/CMSIS/Core/core_cm3.h **** 
1199:./.driver/CMSIS/Core/core_cm3.h **** 
1200:./.driver/CMSIS/Core/core_cm3.h **** 
1201:./.driver/CMSIS/Core/core_cm3.h **** #elif (defined (__GNUC__)) /*------------------ GNU Compiler ---------------------*/
1202:./.driver/CMSIS/Core/core_cm3.h **** /* GNU gcc specific functions */
1203:./.driver/CMSIS/Core/core_cm3.h **** 
1204:./.driver/CMSIS/Core/core_cm3.h **** static __INLINE void __enable_irq()               { __ASM volatile ("cpsie i"); }
  26              		.loc 1 1204 51
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 1, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31 0000 80B4     		push	{r7}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 4
  34              		.cfi_offset 7, -4
  35 0002 00AF     		add	r7, sp, #0
  36              	.LCFI1:
  37              		.cfi_def_cfa_register 7
  38              		.loc 1 1204 53
  39              		.syntax unified
  40              	@ 1204 "./.driver/CMSIS/Core/core_cm3.h" 1
  41 0004 62B6     		cpsie i
  42              	@ 0 "" 2
  43              		.loc 1 1204 81
  44              		.thumb
  45              		.syntax unified
  46 0006 00BF     		nop
  47 0008 BD46     		mov	sp, r7
  48              	.LCFI2:
  49              		.cfi_def_cfa_register 13
  50              		@ sp needed
  51 000a 80BC     		pop	{r7}
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s 			page 23


  52              	.LCFI3:
  53              		.cfi_restore 7
  54              		.cfi_def_cfa_offset 0
  55 000c 7047     		bx	lr
  56              		.cfi_endproc
  57              	.LFE0:
  59              		.section	.text.__disable_irq,"ax",%progbits
  60              		.align	1
  61              		.syntax unified
  62              		.thumb
  63              		.thumb_func
  65              	__disable_irq:
  66              	.LFB1:
1205:./.driver/CMSIS/Core/core_cm3.h **** static __INLINE void __disable_irq()              { __ASM volatile ("cpsid i"); }
  67              		.loc 1 1205 51
  68              		.cfi_startproc
  69              		@ args = 0, pretend = 0, frame = 0
  70              		@ frame_needed = 1, uses_anonymous_args = 0
  71              		@ link register save eliminated.
  72 0000 80B4     		push	{r7}
  73              	.LCFI4:
  74              		.cfi_def_cfa_offset 4
  75              		.cfi_offset 7, -4
  76 0002 00AF     		add	r7, sp, #0
  77              	.LCFI5:
  78              		.cfi_def_cfa_register 7
  79              		.loc 1 1205 53
  80              		.syntax unified
  81              	@ 1205 "./.driver/CMSIS/Core/core_cm3.h" 1
  82 0004 72B6     		cpsid i
  83              	@ 0 "" 2
  84              		.loc 1 1205 81
  85              		.thumb
  86              		.syntax unified
  87 0006 00BF     		nop
  88 0008 BD46     		mov	sp, r7
  89              	.LCFI6:
  90              		.cfi_def_cfa_register 13
  91              		@ sp needed
  92 000a 80BC     		pop	{r7}
  93              	.LCFI7:
  94              		.cfi_restore 7
  95              		.cfi_def_cfa_offset 0
  96 000c 7047     		bx	lr
  97              		.cfi_endproc
  98              	.LFE1:
 100              		.global	I2Cx_Timeout
 101              		.section	.data.I2Cx_Timeout,"aw"
 102              		.align	2
 105              	I2Cx_Timeout:
 106 0000 AC0D0000 		.word	3500
 107              		.section	.text.i2c_ready_std,"ax",%progbits
 108              		.align	1
 109              		.syntax unified
 110              		.thumb
 111              		.thumb_func
 113              	i2c_ready_std:
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s 			page 24


 114              	.LFB33:
 115              		.file 2 "./i2c/i2c-std.c"
   1:./i2c/i2c-std.c **** /**
   2:./i2c/i2c-std.c ****  * @brief i2c-std.c
   3:./i2c/i2c-std.c ****  *
   4:./i2c/i2c-std.c ****  * @param student: Sameer Almaldein* @param ID: 679699
   5:./i2c/i2c-std.c ****  * @param University TU-Chemnitz
   6:./i2c/i2c-std.c ****  * @param Master : ASE(Automotive Software Engineering )
   7:./i2c/i2c-std.c ****  */ 
   8:./i2c/i2c-std.c **** 
   9:./i2c/i2c-std.c **** //********************************************************************************************
  10:./i2c/i2c-std.c **** //
  11:./i2c/i2c-std.c **** //  header  files
  12:./i2c/i2c-std.c **** //
  13:./i2c/i2c-std.c **** //********************************************************************************************
  14:./i2c/i2c-std.c **** #include "init.h"
  15:./i2c/i2c-std.c **** //********************************************************************************************
  16:./i2c/i2c-std.c **** //
  17:./i2c/i2c-std.c **** //  static Methods
  18:./i2c/i2c-std.c **** //
  19:./i2c/i2c-std.c **** //********************************************************************************************
  20:./i2c/i2c-std.c **** // Wait event internal methods
  21:./i2c/i2c-std.c **** static uint8_t i2c_ready_std(I2C_TypeDef* I2CX);                         //! wait until I2C bus is 
  22:./i2c/i2c-std.c **** static uint8_t i2c_wait_start_event_std(I2C_TypeDef* I2CX);		           //! wait start condition is
  23:./i2c/i2c-std.c **** static uint8_t i2c_wait_stop_event_std(I2C_TypeDef* I2CX);	             //! wait stop condition  is
  24:./i2c/i2c-std.c **** static uint8_t i2c_wait_7bit_slave_address_wr_std(I2C_TypeDef* I2CX);    //! wait the slave address
  25:./i2c/i2c-std.c **** static uint8_t i2c_wait_7bit_slave_address_rd_std(I2C_TypeDef* I2CX);    //! wait the slave address
  26:./i2c/i2c-std.c **** static uint8_t i2c_wait_write_byte_txe_std(I2C_TypeDef* I2CX);		           //! wait the complete of
  27:./i2c/i2c-std.c **** static uint8_t i2c_wait_write_byte_btf_std(I2C_TypeDef* I2CX);		           //! wait the complete of
  28:./i2c/i2c-std.c **** static uint8_t i2c_wait_read_byte_rxne_std(I2C_TypeDef* I2CX);		       //! wait the complete of cur
  29:./i2c/i2c-std.c **** static uint8_t i2c_wait_read_byte_btf_std(I2C_TypeDef* I2CX);            //! wait the complete of c
  30:./i2c/i2c-std.c **** 
  31:./i2c/i2c-std.c **** // trigger event internal methods
  32:./i2c/i2c-std.c **** static uint8_t i2c_start_std(I2C_TypeDef* I2CX);						              //!initiate start condition
  33:./i2c/i2c-std.c **** static uint8_t i2c_stop_std(I2C_TypeDef* I2CX);						                //! initiate stop condition
  34:./i2c/i2c-std.c **** static uint8_t i2c_send_7bit_slave_address_wr_std(I2C_TypeDef* I2CX,uint8_t slave_address);	//! sen
  35:./i2c/i2c-std.c **** static uint8_t i2c_send_7bit_slave_address_rd_std(I2C_TypeDef* I2CX,uint8_t slave_address);	//! sen
  36:./i2c/i2c-std.c **** 
  37:./i2c/i2c-std.c **** 
  38:./i2c/i2c-std.c **** static uint8_t i2c_write_byte_std(I2C_TypeDef* I2CX,uint8_t data);		         //! send a byte via I2
  39:./i2c/i2c-std.c **** static uint8_t i2c_write_nbyte_std(I2C_TypeDef* I2CX, uint8_t *buf, size_t n); //! send a n bytes v
  40:./i2c/i2c-std.c **** 
  41:./i2c/i2c-std.c **** static uint8_t i2c_read_lastbyte_std(I2C_TypeDef* I2CX,uint8_t *buf);	        // read only the last
  42:./i2c/i2c-std.c **** static uint8_t i2c_read_last2byte_std(I2C_TypeDef* I2CX,uint8_t *buf);	      // read only the last 
  43:./i2c/i2c-std.c **** static uint8_t i2c_read_last3byte_std(I2C_TypeDef* I2CX,uint8_t *buf);
  44:./i2c/i2c-std.c **** static uint8_t i2c_read_nbyte_std(I2C_TypeDef* I2CX,uint8_t *data, uint16_t n);	 
  45:./i2c/i2c-std.c **** 
  46:./i2c/i2c-std.c **** //********************************************************************************************
  47:./i2c/i2c-std.c **** //
  48:./i2c/i2c-std.c **** //  extern variables
  49:./i2c/i2c-std.c **** //
  50:./i2c/i2c-std.c **** //********************************************************************************************
  51:./i2c/i2c-std.c **** volatile uint32_t I2Cx_Timeout =I2C_MAX_BUSY_TIME;
  52:./i2c/i2c-std.c **** 
  53:./i2c/i2c-std.c **** //********************************************************************************************
  54:./i2c/i2c-std.c **** //
  55:./i2c/i2c-std.c **** //  static methods definitions
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s 			page 25


  56:./i2c/i2c-std.c **** //  Wait event methods
  57:./i2c/i2c-std.c **** //
  58:./i2c/i2c-std.c **** //********************************************************************************************
  59:./i2c/i2c-std.c **** /**
  60:./i2c/i2c-std.c ****  * @brief    checks that I2C bus & the module is in Idle state
  61:./i2c/i2c-std.c ****  * @details  when the I2C module is in the idle state that means BUSY Flag is reset (BUSY=0)
  62:./i2c/i2c-std.c ****  *          BUSY: Bus busy
  63:./i2c/i2c-std.c ****                 0: No communication on the bus
  64:./i2c/i2c-std.c ****                 1: Communication ongoing on the bus
  65:./i2c/i2c-std.c ****                 – Set by hardware on detection of SDA or SCL low
  66:./i2c/i2c-std.c ****                 – cleared by hardware on detection of a Stop condition.
  67:./i2c/i2c-std.c ****                It indicates a communication in progress on the bus. This information is still updat
  68:./i2c/i2c-std.c ****                the interface is disabled (PE=0). 
  69:./i2c/i2c-std.c ****  *           
  70:./i2c/i2c-std.c ****              I2C_BUSY_CONDITION_ERROR:
  71:./i2c/i2c-std.c ****               if a timeout is passed without detecting a BUSY=0 then set an error condition 
  72:./i2c/i2c-std.c ****  *           to handle this error after 3 times try then reset the I2C and reconfigure it
  73:./i2c/i2c-std.c ****  *           it could be the system is halt and need reset.  
  74:./i2c/i2c-std.c ****  * @param I2CX 
  75:./i2c/i2c-std.c ****  * @return uint8_t 
  76:./i2c/i2c-std.c ****  */
  77:./i2c/i2c-std.c **** uint8_t i2c_ready_std(I2C_TypeDef* I2CX)
  78:./i2c/i2c-std.c **** {
 116              		.loc 2 78 1
 117              		.cfi_startproc
 118              		@ args = 0, pretend = 0, frame = 8
 119              		@ frame_needed = 1, uses_anonymous_args = 0
 120              		@ link register save eliminated.
 121 0000 80B4     		push	{r7}
 122              	.LCFI8:
 123              		.cfi_def_cfa_offset 4
 124              		.cfi_offset 7, -4
 125 0002 83B0     		sub	sp, sp, #12
 126              	.LCFI9:
 127              		.cfi_def_cfa_offset 16
 128 0004 00AF     		add	r7, sp, #0
 129              	.LCFI10:
 130              		.cfi_def_cfa_register 7
 131 0006 7860     		str	r0, [r7, #4]
  79:./i2c/i2c-std.c ****    I2Cx_Timeout=I2C_MAX_BUSY_TIME;    
 132              		.loc 2 79 16
 133 0008 0B4B     		ldr	r3, .L7
 134 000a 40F6AC52 		movw	r2, #3500
 135 000e 1A60     		str	r2, [r3]
  80:./i2c/i2c-std.c ****     //_delay_ms(25);
  81:./i2c/i2c-std.c ****   //wait check that the I2c module is not busy
  82:./i2c/i2c-std.c ****   
  83:./i2c/i2c-std.c ****     while(bits_is_set(I2CX->SR2,I2C_SR2_BUSY))//I2C_GetFlagStatus(I2CX,I2C_FLAG_BUSY))
 136              		.loc 2 83 10
 137 0010 05E0     		b	.L4
 138              	.L6:
  84:./i2c/i2c-std.c ****       if(I2Cx_Timeout==0)  
 139              		.loc 2 84 22
 140 0012 094B     		ldr	r3, .L7
 141 0014 1B68     		ldr	r3, [r3]
 142              		.loc 2 84 9
 143 0016 002B     		cmp	r3, #0
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s 			page 26


 144 0018 01D1     		bne	.L4
  85:./i2c/i2c-std.c ****         return I2C_BUSY_ERROR;         // set the error then exit:: I2C_BUSY_ERROR
 145              		.loc 2 85 16
 146 001a 0123     		movs	r3, #1
 147 001c 07E0     		b	.L5
 148              	.L4:
  83:./i2c/i2c-std.c ****       if(I2Cx_Timeout==0)  
 149              		.loc 2 83 11
 150 001e 7B68     		ldr	r3, [r7, #4]
 151 0020 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 152 0022 9BB2     		uxth	r3, r3
 153 0024 03F00203 		and	r3, r3, #2
  83:./i2c/i2c-std.c ****       if(I2Cx_Timeout==0)  
 154              		.loc 2 83 10
 155 0028 002B     		cmp	r3, #0
 156 002a F2D1     		bne	.L6
  86:./i2c/i2c-std.c **** 
  87:./i2c/i2c-std.c ****    return I2C_OK;   
 157              		.loc 2 87 11
 158 002c 0023     		movs	r3, #0
 159              	.L5:
  88:./i2c/i2c-std.c **** }    
 160              		.loc 2 88 1
 161 002e 1846     		mov	r0, r3
 162 0030 0C37     		adds	r7, r7, #12
 163              	.LCFI11:
 164              		.cfi_def_cfa_offset 4
 165 0032 BD46     		mov	sp, r7
 166              	.LCFI12:
 167              		.cfi_def_cfa_register 13
 168              		@ sp needed
 169 0034 80BC     		pop	{r7}
 170              	.LCFI13:
 171              		.cfi_restore 7
 172              		.cfi_def_cfa_offset 0
 173 0036 7047     		bx	lr
 174              	.L8:
 175              		.align	2
 176              	.L7:
 177 0038 00000000 		.word	I2Cx_Timeout
 178              		.cfi_endproc
 179              	.LFE33:
 181              		.section	.text.i2c_wait_start_event_std,"ax",%progbits
 182              		.align	1
 183              		.syntax unified
 184              		.thumb
 185              		.thumb_func
 187              	i2c_wait_start_event_std:
 188              	.LFB34:
  89:./i2c/i2c-std.c **** //-------------------------------------------------------------------------------------------------
  90:./i2c/i2c-std.c **** /**
  91:./i2c/i2c-std.c ****  * @brief wait the until the start condidtion is completed
  92:./i2c/i2c-std.c ****  * @details  check that the start condition is finished  by checking the following flags 
  93:./i2c/i2c-std.c ****  *            BUSY, MSL and SB flag are all set  
  94:./i2c/i2c-std.c ****  *           EV5: at the  SB=1, cleared by reading SR1 register followed by writing the DR register
  95:./i2c/i2c-std.c ****  *           SB= 1 indicates Start condition generated and finished 
  96:./i2c/i2c-std.c ****  *           BUSY=1 indicates the I2C is busy (no arbitration lost or peripheral) 
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s 			page 27


  97:./i2c/i2c-std.c ****  *           MSL=1  indicates Master mode 
  98:./i2c/i2c-std.c ****  * I2C_SR1 : I2C Status register 1
  99:./i2c/i2c-std.c ****  *            SB: Start bit (Master mode)
 100:./i2c/i2c-std.c ****               0: No Start condition
 101:./i2c/i2c-std.c ****               1: Start condition generated.
 102:./i2c/i2c-std.c ****               – Set when a Start condition generated.
 103:./i2c/i2c-std.c ****               – Cleared by software by reading the SR1 register followed by writing the DR regist
 104:./i2c/i2c-std.c ****    I2C_SR2 : I2C Status register 2          
 105:./i2c/i2c-std.c ****             TRA: Transmitter/receiver
 106:./i2c/i2c-std.c ****               0: Data bytes received
 107:./i2c/i2c-std.c ****               1: Data bytes transmitted
 108:./i2c/i2c-std.c ****             This bit is set depending on the R/W bit of the address byte, at the end of total addre
 109:./i2c/i2c-std.c ****             It is also cleared by hardware after detection of Stop condition (STOPF=1), repeated St
 110:./i2c/i2c-std.c ****             loss of bus arbitration (ARLO=1), or when PE=0.
 111:./i2c/i2c-std.c ****             BUSY: Bus busy
 112:./i2c/i2c-std.c ****              0: No communication on the bus
 113:./i2c/i2c-std.c ****              1: Communication ongoing on the bus
 114:./i2c/i2c-std.c ****              – Set by hardware on detection of SDA or SCL low
 115:./i2c/i2c-std.c ****              – cleared by hardware on detection of a Stop condition.
 116:./i2c/i2c-std.c ****              It indicates a communication in progress on the bus. This information is still updated
 117:./i2c/i2c-std.c ****             MSL: Master/slave
 118:./i2c/i2c-std.c ****               0: Slave Mode
 119:./i2c/i2c-std.c ****               1: Master Mode
 120:./i2c/i2c-std.c ****               – Set by hardware as soon as the interface is in Master mode (SB=1).
 121:./i2c/i2c-std.c ****               – Cleared by hardware after detecting a Stop condition on the bus or a loss of arbi
 122:./i2c/i2c-std.c ****  *           I2C_START_ERROR :
 123:./i2c/i2c-std.c ****  *           if a timeout is passed without detecting a SB=1 then set an error condition 
 124:./i2c/i2c-std.c ****  *           to handle this error then reset the I2C and reconfigure it
 125:./i2c/i2c-std.c ****  *           it could be the system is halt and need reset.  
 126:./i2c/i2c-std.c ****  * @param I2CX 
 127:./i2c/i2c-std.c ****  * @return uint8_t   
 128:./i2c/i2c-std.c **** */
 129:./i2c/i2c-std.c **** uint8_t i2c_wait_start_event_std(I2C_TypeDef* I2CX)
 130:./i2c/i2c-std.c **** {
 189              		.loc 2 130 1
 190              		.cfi_startproc
 191              		@ args = 0, pretend = 0, frame = 8
 192              		@ frame_needed = 1, uses_anonymous_args = 0
 193              		@ link register save eliminated.
 194 0000 80B4     		push	{r7}
 195              	.LCFI14:
 196              		.cfi_def_cfa_offset 4
 197              		.cfi_offset 7, -4
 198 0002 83B0     		sub	sp, sp, #12
 199              	.LCFI15:
 200              		.cfi_def_cfa_offset 16
 201 0004 00AF     		add	r7, sp, #0
 202              	.LCFI16:
 203              		.cfi_def_cfa_register 7
 204 0006 7860     		str	r0, [r7, #4]
 131:./i2c/i2c-std.c ****    I2Cx_Timeout=I2C_MAX_WAIT_TIME;
 205              		.loc 2 131 16
 206 0008 144B     		ldr	r3, .L14
 207 000a 40F6AC52 		movw	r2, #3500
 208 000e 1A60     		str	r2, [r3]
 132:./i2c/i2c-std.c ****     //wait the event I2C_EVENT_MASTER_MODE_SELECT where BUSY, MSL and SB flag are set  (At EV5)
 133:./i2c/i2c-std.c ****     //EV5: at the  SB=1, cleared by reading SR1 register followed by writing the DR register.
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s 			page 28


 134:./i2c/i2c-std.c ****     //!I2C_CheckEvent(I2CX,I2C_EVENT_MASTER_MODE_SELECT))
 135:./i2c/i2c-std.c ****    while(bits_is_clear(I2CX->SR1,I2C_SR1_SB)|| 
 209              		.loc 2 135 9
 210 0010 0FE0     		b	.L10
 211              	.L13:
 136:./i2c/i2c-std.c ****          bits_is_clear(I2CX->SR2,(uint16_t)(I2C_SR2_BUSY | I2C_SR2_MSL)) ) 
 137:./i2c/i2c-std.c ****     {     
 138:./i2c/i2c-std.c ****         //   while(_I2C_GET_FLAG(I2CX,I2C_SR1_SB)==RESET   ||
 139:./i2c/i2c-std.c ****         //         _I2C_GET_FLAG(I2CX,I2C_SR2_BUSY)==RESET ||
 140:./i2c/i2c-std.c ****         //         _I2C_GET_FLAG(I2CX,I2C_SR2_MSL)==RESET  )
 141:./i2c/i2c-std.c ****       if(I2Cx_Timeout==0)  
 212              		.loc 2 141 22
 213 0012 124B     		ldr	r3, .L14
 214 0014 1B68     		ldr	r3, [r3]
 215              		.loc 2 141 9
 216 0016 002B     		cmp	r3, #0
 217 0018 0BD1     		bne	.L10
 142:./i2c/i2c-std.c ****       {
 143:./i2c/i2c-std.c ****         if (READ_BIT(I2CX->CR1, I2C_CR1_START) == I2C_CR1_START)
 218              		.loc 2 143 13
 219 001a 7B68     		ldr	r3, [r7, #4]
 220 001c 1B88     		ldrh	r3, [r3]	@ movhi
 221 001e 9BB2     		uxth	r3, r3
 222 0020 03F48073 		and	r3, r3, #256
 223              		.loc 2 143 12
 224 0024 B3F5807F 		cmp	r3, #256
 225 0028 01D1     		bne	.L11
 144:./i2c/i2c-std.c ****         {
 145:./i2c/i2c-std.c ****           return  I2C_START_ERROR ; // set the error then exit :: I2C_START_CONDITION_ERROR :
 226              		.loc 2 145 19
 227 002a 0223     		movs	r3, #2
 228 002c 10E0     		b	.L12
 229              	.L11:
 146:./i2c/i2c-std.c ****         }
 147:./i2c/i2c-std.c ****         return I2C_TIMEOUT ;        
 230              		.loc 2 147 16
 231 002e 0A23     		movs	r3, #10
 232 0030 0EE0     		b	.L12
 233              	.L10:
 135:./i2c/i2c-std.c ****          bits_is_clear(I2CX->SR2,(uint16_t)(I2C_SR2_BUSY | I2C_SR2_MSL)) ) 
 234              		.loc 2 135 10
 235 0032 7B68     		ldr	r3, [r7, #4]
 236 0034 9B8A     		ldrh	r3, [r3, #20]	@ movhi
 237 0036 9BB2     		uxth	r3, r3
 238 0038 03F00103 		and	r3, r3, #1
 135:./i2c/i2c-std.c ****          bits_is_clear(I2CX->SR2,(uint16_t)(I2C_SR2_BUSY | I2C_SR2_MSL)) ) 
 239              		.loc 2 135 9
 240 003c 002B     		cmp	r3, #0
 241 003e E8D0     		beq	.L13
 136:./i2c/i2c-std.c ****     {     
 242              		.loc 2 136 10 discriminator 1
 243 0040 7B68     		ldr	r3, [r7, #4]
 244 0042 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 245 0044 9BB2     		uxth	r3, r3
 246 0046 03F00303 		and	r3, r3, #3
 135:./i2c/i2c-std.c ****          bits_is_clear(I2CX->SR2,(uint16_t)(I2C_SR2_BUSY | I2C_SR2_MSL)) ) 
 247              		.loc 2 135 45 discriminator 1
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s 			page 29


 248 004a 002B     		cmp	r3, #0
 249 004c E1D0     		beq	.L13
 148:./i2c/i2c-std.c ****       }   
 149:./i2c/i2c-std.c ****     }
 150:./i2c/i2c-std.c ****   return I2C_OK;  
 250              		.loc 2 150 10
 251 004e 0023     		movs	r3, #0
 252              	.L12:
 151:./i2c/i2c-std.c **** }
 253              		.loc 2 151 1
 254 0050 1846     		mov	r0, r3
 255 0052 0C37     		adds	r7, r7, #12
 256              	.LCFI17:
 257              		.cfi_def_cfa_offset 4
 258 0054 BD46     		mov	sp, r7
 259              	.LCFI18:
 260              		.cfi_def_cfa_register 13
 261              		@ sp needed
 262 0056 80BC     		pop	{r7}
 263              	.LCFI19:
 264              		.cfi_restore 7
 265              		.cfi_def_cfa_offset 0
 266 0058 7047     		bx	lr
 267              	.L15:
 268 005a 00BF     		.align	2
 269              	.L14:
 270 005c 00000000 		.word	I2Cx_Timeout
 271              		.cfi_endproc
 272              	.LFE34:
 274              		.section	.text.i2c_wait_stop_event_std,"ax",%progbits
 275              		.align	1
 276              		.syntax unified
 277              		.thumb
 278              		.thumb_func
 280              	i2c_wait_stop_event_std:
 281              	.LFB35:
 152:./i2c/i2c-std.c **** //-------------------------------------------------------------------------------------------------
 153:./i2c/i2c-std.c **** /**
 154:./i2c/i2c-std.c ****  * @brief wait the until the stop condidtion is completed
 155:./i2c/i2c-std.c ****  * @details  check that the stop condition is finished  by checking the flag STOPF=1 
 156:./i2c/i2c-std.c ****  *           Master-Transmitter Mode:
 157:./i2c/i2c-std.c ****  *              EV8_2: TxE=1, BTF = 1, Program Stop request. TxE and BTF are cleared by hardware by
 158:./i2c/i2c-std.c ****  *           Master-receiver Mode:
 159:./i2c/i2c-std.c ****  *            -N> 2
 160:./i2c/i2c-std.c ****  *              EV7: RxNE=1, cleared by reading DR register
 161:./i2c/i2c-std.c ****                 EV7_2: BTF = 1, DataN-2 in DR and DataN-1 in shift register, program ACK = 0, Read 
 162:./i2c/i2c-std.c ****  *           After the Stop condition generation, the interface goes automatically back to slave mo
 163:./i2c/i2c-std.c ****             -N=2 
 164:./i2c/i2c-std.c ****                 EV7_3: BTF = 1, program STOP = 1, read DR twice (Read Data1 and Data2) just after p
 165:./i2c/i2c-std.c ****  *          STOPF:
 166:./i2c/i2c-std.c ****  *            – Set by hardware when a Stop condition is detected on the bus by the slave after a
 167:./i2c/i2c-std.c ****  *            – Cleared by software reading the SR1 register followed by a write in the CR1 regis
 168:./i2c/i2c-std.c ****             Note 1: The STOPF bit is not set after a NACK reception.
 169:./i2c/i2c-std.c ****             Note 2:
 170:./i2c/i2c-std.c ****                 It is recommended to perform the complete clearing sequence (READ SR1 then WRITE CR
 171:./i2c/i2c-std.c ****             Note 3:
 172:./i2c/i2c-std.c ****                 at the end of any I2C bus transaction checking the STOPF --> SR1 is read
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s 			page 30


 173:./i2c/i2c-std.c ****                 as each new start I2C bus transaction will always start (after checking BUSY) by ge
 174:./i2c/i2c-std.c ****                 therefore actually after each startcondition generation the STOPF will be reset by 
 175:./i2c/i2c-std.c **** 
 176:./i2c/i2c-std.c ****  *           I2C_STOP_ERROR:
 177:./i2c/i2c-std.c ****  *           if a timeout is passed without detecting a STOPF=1 then set an error condition 
 178:./i2c/i2c-std.c ****  *           to handle this error then reset the I2C and reconfigure it
 179:./i2c/i2c-std.c ****  *           it could be the system is halt and need reset.  
 180:./i2c/i2c-std.c ****  * @param I2CX 
 181:./i2c/i2c-std.c ****  * @return uint8_t   
 182:./i2c/i2c-std.c **** */
 183:./i2c/i2c-std.c **** uint8_t i2c_wait_stop_event_std(I2C_TypeDef* I2CX)
 184:./i2c/i2c-std.c **** {
 282              		.loc 2 184 1
 283              		.cfi_startproc
 284              		@ args = 0, pretend = 0, frame = 16
 285              		@ frame_needed = 1, uses_anonymous_args = 0
 286              		@ link register save eliminated.
 287 0000 80B4     		push	{r7}
 288              	.LCFI20:
 289              		.cfi_def_cfa_offset 4
 290              		.cfi_offset 7, -4
 291 0002 85B0     		sub	sp, sp, #20
 292              	.LCFI21:
 293              		.cfi_def_cfa_offset 24
 294 0004 00AF     		add	r7, sp, #0
 295              	.LCFI22:
 296              		.cfi_def_cfa_register 7
 297 0006 7860     		str	r0, [r7, #4]
 185:./i2c/i2c-std.c ****   I2Cx_Timeout=I2C_MAX_WAIT_TIME;  
 298              		.loc 2 185 15
 299 0008 174B     		ldr	r3, .L21
 300 000a 40F6AC52 		movw	r2, #3500
 301 000e 1A60     		str	r2, [r3]
 186:./i2c/i2c-std.c ****   // wait until stop condition is complete STOPF is set
 187:./i2c/i2c-std.c ****   while(bits_is_set(I2CX->SR2,I2C_SR2_MSL))//I2Cx_Timeout>0)//bit_is_clear(I2CX->SR1,I2C_SR1_STOPF)
 302              		.loc 2 187 8
 303 0010 1DE0     		b	.L17
 304              	.L20:
 188:./i2c/i2c-std.c ****    {   
 189:./i2c/i2c-std.c ****         /* Generate Stop */
 190:./i2c/i2c-std.c ****         //SET_BIT(I2CX->CR1, I2C_CR1_STOP);
 191:./i2c/i2c-std.c **** 
 192:./i2c/i2c-std.c ****       /* Check if a STOPF is detected */
 193:./i2c/i2c-std.c **** 
 194:./i2c/i2c-std.c ****       if (bits_is_set(I2CX->SR1,I2C_SR1_STOPF) )
 305              		.loc 2 194 11
 306 0012 7B68     		ldr	r3, [r7, #4]
 307 0014 9B8A     		ldrh	r3, [r3, #20]	@ movhi
 308 0016 9BB2     		uxth	r3, r3
 309 0018 03F01003 		and	r3, r3, #16
 310              		.loc 2 194 10
 311 001c 002B     		cmp	r3, #0
 312 001e 10D0     		beq	.L18
 313              	.LBB2:
 195:./i2c/i2c-std.c ****       {
 196:./i2c/i2c-std.c ****           /* Clear STOP Flag */
 197:./i2c/i2c-std.c ****           _I2C_CLEAR_STOPFLAG(I2CX);      
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s 			page 31


 314              		.loc 2 197 11
 315 0020 0023     		movs	r3, #0
 316 0022 FB60     		str	r3, [r7, #12]
 317 0024 7B68     		ldr	r3, [r7, #4]
 318 0026 9B8A     		ldrh	r3, [r3, #20]	@ movhi
 319 0028 9BB2     		uxth	r3, r3
 320 002a FB60     		str	r3, [r7, #12]
 321 002c 7B68     		ldr	r3, [r7, #4]
 322 002e 1B88     		ldrh	r3, [r3]	@ movhi
 323 0030 9BB2     		uxth	r3, r3
 324 0032 43F00103 		orr	r3, r3, #1
 325 0036 9AB2     		uxth	r2, r3
 326 0038 7B68     		ldr	r3, [r7, #4]
 327 003a 1A80     		strh	r2, [r3]	@ movhi
 328 003c FB68     		ldr	r3, [r7, #12]
 329              	.LBE2:
 198:./i2c/i2c-std.c ****           return 0x40;//I2C_OK;
 330              		.loc 2 198 18
 331 003e 4023     		movs	r3, #64
 332 0040 0DE0     		b	.L19
 333              	.L18:
 199:./i2c/i2c-std.c ****       }
 200:./i2c/i2c-std.c ****       if(I2Cx_Timeout==0)  
 334              		.loc 2 200 22
 335 0042 094B     		ldr	r3, .L21
 336 0044 1B68     		ldr	r3, [r3]
 337              		.loc 2 200 9
 338 0046 002B     		cmp	r3, #0
 339 0048 01D1     		bne	.L17
 201:./i2c/i2c-std.c ****         return I2C_STOP_ERROR;
 340              		.loc 2 201 16
 341 004a 0323     		movs	r3, #3
 342 004c 07E0     		b	.L19
 343              	.L17:
 187:./i2c/i2c-std.c ****    {   
 344              		.loc 2 187 9
 345 004e 7B68     		ldr	r3, [r7, #4]
 346 0050 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 347 0052 9BB2     		uxth	r3, r3
 348 0054 03F00103 		and	r3, r3, #1
 187:./i2c/i2c-std.c ****    {   
 349              		.loc 2 187 8
 350 0058 002B     		cmp	r3, #0
 351 005a DAD1     		bne	.L20
 202:./i2c/i2c-std.c **** 
 203:./i2c/i2c-std.c ****    }  
 204:./i2c/i2c-std.c ****    //if(I2Cx_Timeout==0)  
 205:./i2c/i2c-std.c ****     //return I2C_STOP_ERROR;
 206:./i2c/i2c-std.c ****     // CLEAR_BIT(I2CX->CR1,I2C_CR1_PE);   //cbits(I2CX->CR1,I2C_CR1_PE);
 207:./i2c/i2c-std.c ****     // asm("nop");
 208:./i2c/i2c-std.c ****     // asm("nop");
 209:./i2c/i2c-std.c ****     // asm("nop");
 210:./i2c/i2c-std.c ****     // SET_BIT(I2CX->CR1,I2C_CR1_PE);
 211:./i2c/i2c-std.c **** 
 212:./i2c/i2c-std.c ****       //return I2C_STOP_ERROR;
 213:./i2c/i2c-std.c **** 
 214:./i2c/i2c-std.c ****     //sbits(I2CX->CR1,I2C_CR1_PE);
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s 			page 32


 215:./i2c/i2c-std.c ****   return I2C_OK;
 352              		.loc 2 215 10
 353 005c 0023     		movs	r3, #0
 354              	.L19:
 216:./i2c/i2c-std.c **** }
 355              		.loc 2 216 1
 356 005e 1846     		mov	r0, r3
 357 0060 1437     		adds	r7, r7, #20
 358              	.LCFI23:
 359              		.cfi_def_cfa_offset 4
 360 0062 BD46     		mov	sp, r7
 361              	.LCFI24:
 362              		.cfi_def_cfa_register 13
 363              		@ sp needed
 364 0064 80BC     		pop	{r7}
 365              	.LCFI25:
 366              		.cfi_restore 7
 367              		.cfi_def_cfa_offset 0
 368 0066 7047     		bx	lr
 369              	.L22:
 370              		.align	2
 371              	.L21:
 372 0068 00000000 		.word	I2Cx_Timeout
 373              		.cfi_endproc
 374              	.LFE35:
 376              		.section	.text.i2c_wait_7bit_slave_address_wr_std,"ax",%progbits
 377              		.align	1
 378              		.syntax unified
 379              		.thumb
 380              		.thumb_func
 382              	i2c_wait_7bit_slave_address_wr_std:
 383              	.LFB36:
 217:./i2c/i2c-std.c **** //-------------------------------------------------------------------------------------------------
 218:./i2c/i2c-std.c **** /**
 219:./i2c/i2c-std.c ****  * @brief    Waits until the slave acknowledges back to the reception of its address in write mode 
 220:./i2c/i2c-std.c ****  * @details  check that the slave aknowledges back as it receives its address  the flags
 221:./i2c/i2c-std.c ****  *           BUSY, MSL, ADDR, TXE and TRA which all set during EV6
 222:./i2c/i2c-std.c ****  *            EV6: ADDR=1, cleared by reading SR1 register followed by reading SR2.
 223:./i2c/i2c-std.c ****  *           TXE= 1 indicates that Data register empty that means th address is sent to shift-regis
 224:./i2c/i2c-std.c ****  *                 and transmission is either on process or even done 
 225:./i2c/i2c-std.c ****  *           ADDR=1 indicates End of address transmission which is defined by the slave acknowledgm
 226:./i2c/i2c-std.c ****  *           TRA=1  indicates Transmitter mode set depending on the R/W bit of the address byte
 227:./i2c/i2c-std.c ****  *           BUSY=1 indicates the I2C is busy (no arbitration lost or peripheral) 
 228:./i2c/i2c-std.c ****  *           MSL=1  indicates Master mode 
 229:./i2c/i2c-std.c ****     I2C_SR1 : I2C Status register 1
 230:./i2c/i2c-std.c ****             TXE: Data register empty (transmitters)
 231:./i2c/i2c-std.c ****                 0: Data register not empty
 232:./i2c/i2c-std.c ****                 1: Data register empty
 233:./i2c/i2c-std.c ****               – Set when DR is empty in transmission. TxE is not set during address phase.
 234:./i2c/i2c-std.c ****               – Cleared by software writing to the DR register or by hardware after a start or a 
 235:./i2c/i2c-std.c ****               TxE is not set if either a NACK is received, or if next byte to be transmitted is PEC
 236:./i2c/i2c-std.c ****               Note: TxE is not cleared by writing the first data being transmitted, or by writing d
 237:./i2c/i2c-std.c ****               BTF is set, as in both cases the data register is still empty.
 238:./i2c/i2c-std.c ****  *         ADDR: 
 239:./i2c/i2c-std.c ****  *          This bit is cleared by software reading SR1 register followed reading SR2, or by hardwa
 240:./i2c/i2c-std.c ****  *           1.Slave :: Address matched (Slave)
 241:./i2c/i2c-std.c ****               0: Address mismatched or not received.
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s 			page 33


 242:./i2c/i2c-std.c ****               1: Received address matched
 243:./i2c/i2c-std.c ****  *          
 244:./i2c/i2c-std.c ****             2. Master : Address sent (Master)
 245:./i2c/i2c-std.c ****               0: No end of address transmission
 246:./i2c/i2c-std.c ****               1: End of address transmission
 247:./i2c/i2c-std.c ****             – For 10-bit addressing, the bit is set after the ACK of the 2nd byte.
 248:./i2c/i2c-std.c ****             – For 7-bit addressing, the bit is set after the ACK
 249:./i2c/i2c-std.c ****  *          Note: 
 250:./i2c/i2c-std.c ****                ADDR is not set after a NACK reception
 251:./i2c/i2c-std.c ****  
 252:./i2c/i2c-std.c ****    I2C_SR2 : I2C Status register 2          
 253:./i2c/i2c-std.c ****             TRA: Transmitter/receiver
 254:./i2c/i2c-std.c ****               0: Data bytes received
 255:./i2c/i2c-std.c ****               1: Data bytes transmitted
 256:./i2c/i2c-std.c ****             This bit is set depending on the R/W bit of the address byte, at the end of total addre
 257:./i2c/i2c-std.c ****             It is also cleared by hardware after detection of Stop condition (STOPF=1), repeated St
 258:./i2c/i2c-std.c ****             loss of bus arbitration (ARLO=1), or when PE=0.
 259:./i2c/i2c-std.c ****             BUSY: Bus busy
 260:./i2c/i2c-std.c ****              0: No communication on the bus
 261:./i2c/i2c-std.c ****              1: Communication ongoing on the bus
 262:./i2c/i2c-std.c ****              – Set by hardware on detection of SDA or SCL low
 263:./i2c/i2c-std.c ****              – cleared by hardware on detection of a Stop condition.
 264:./i2c/i2c-std.c ****              It indicates a communication in progress on the bus. This information is still updated
 265:./i2c/i2c-std.c ****             MSL: Master/slave
 266:./i2c/i2c-std.c ****               0: Slave Mode
 267:./i2c/i2c-std.c ****               1: Master Mode
 268:./i2c/i2c-std.c ****               – Set by hardware as soon as the interface is in Master mode (SB=1).
 269:./i2c/i2c-std.c ****               – Cleared by hardware after detecting a Stop condition on the bus or a loss of arbi
 270:./i2c/i2c-std.c **** 
 271:./i2c/i2c-std.c ****             I2C_SLAVE_ADDRESS_NACK_ERROR:
 272:./i2c/i2c-std.c ****  *           if a timeout is passed without detecting a ADDR=1 then set an error condition  
 273:./i2c/i2c-std.c ****  *           which indicates that no slave has acknowledged on the I2C bus either no one has
 274:./i2c/i2c-std.c ****  *           this address or that slave has an issue to check 
 275:./i2c/i2c-std.c ****  * @param I2CX 
 276:./i2c/i2c-std.c ****  * @return uint8_t   
 277:./i2c/i2c-std.c **** */
 278:./i2c/i2c-std.c **** uint8_t i2c_wait_7bit_slave_address_wr_std(I2C_TypeDef* I2CX)
 279:./i2c/i2c-std.c **** {
 384              		.loc 2 279 1
 385              		.cfi_startproc
 386              		@ args = 0, pretend = 0, frame = 8
 387              		@ frame_needed = 1, uses_anonymous_args = 0
 388              		@ link register save eliminated.
 389 0000 80B4     		push	{r7}
 390              	.LCFI26:
 391              		.cfi_def_cfa_offset 4
 392              		.cfi_offset 7, -4
 393 0002 83B0     		sub	sp, sp, #12
 394              	.LCFI27:
 395              		.cfi_def_cfa_offset 16
 396 0004 00AF     		add	r7, sp, #0
 397              	.LCFI28:
 398              		.cfi_def_cfa_register 7
 399 0006 7860     		str	r0, [r7, #4]
 280:./i2c/i2c-std.c ****   //! wait the slave address acknowledge Master_Write
 281:./i2c/i2c-std.c ****     I2Cx_Timeout=I2C_MAX_WAIT_TIME;  
 400              		.loc 2 281 17
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s 			page 34


 401 0008 184B     		ldr	r3, .L28
 402 000a 40F6AC52 		movw	r2, #3500
 403 000e 1A60     		str	r2, [r3]
 282:./i2c/i2c-std.c ****   // wait until the slave acknowledge  BUSY, MSL, ADDR, TXE and TRA flags are all set during Ev6
 283:./i2c/i2c-std.c ****   //  EV6: ADDR=1, cleared by reading SR1 register followed by reading SR2. 
 284:./i2c/i2c-std.c ****     while(bits_is_clear(I2CX->SR1,I2C_SR1_ADDR))
 404              		.loc 2 284 10
 405 0010 1EE0     		b	.L24
 406              	.L27:
 285:./i2c/i2c-std.c ****           //bits_is_clear(I2CX->SR2,(uint16_t)(I2C_SR2_BUSY|I2C_SR2_MSL|I2C_SR2_TRA)))   //!I2C_Che
 286:./i2c/i2c-std.c ****     {
 287:./i2c/i2c-std.c ****       if(bits_is_set(I2CX->SR1,I2C_SR1_AF))  
 407              		.loc 2 287 10
 408 0012 7B68     		ldr	r3, [r7, #4]
 409 0014 9B8A     		ldrh	r3, [r3, #20]	@ movhi
 410 0016 9BB2     		uxth	r3, r3
 411 0018 03F48063 		and	r3, r3, #1024
 412              		.loc 2 287 9
 413 001c 002B     		cmp	r3, #0
 414 001e 11D0     		beq	.L25
 288:./i2c/i2c-std.c ****       {
 289:./i2c/i2c-std.c ****         /* Generate Stop */
 290:./i2c/i2c-std.c ****         SET_BIT(I2CX->CR1, I2C_CR1_STOP);
 415              		.loc 2 290 9
 416 0020 7B68     		ldr	r3, [r7, #4]
 417 0022 1B88     		ldrh	r3, [r3]	@ movhi
 418 0024 9BB2     		uxth	r3, r3
 419 0026 43F40073 		orr	r3, r3, #512
 420 002a 9AB2     		uxth	r2, r3
 421 002c 7B68     		ldr	r3, [r7, #4]
 422 002e 1A80     		strh	r2, [r3]	@ movhi
 291:./i2c/i2c-std.c ****         /* Clear AF Flag */
 292:./i2c/i2c-std.c ****         CLEAR_BIT(I2CX->SR1,I2C_FLAG_AF);  //_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 423              		.loc 2 292 9
 424 0030 7B68     		ldr	r3, [r7, #4]
 425 0032 9B8A     		ldrh	r3, [r3, #20]	@ movhi
 426 0034 9BB2     		uxth	r3, r3
 427 0036 23F48063 		bic	r3, r3, #1024
 428 003a 9AB2     		uxth	r2, r3
 429 003c 7B68     		ldr	r3, [r7, #4]
 430 003e 9A82     		strh	r2, [r3, #20]	@ movhi
 293:./i2c/i2c-std.c ****         
 294:./i2c/i2c-std.c ****       // I2C_NACK Acknowledge no slave with this address at the bus
 295:./i2c/i2c-std.c ****         return I2C_NACK_ERROR;
 431              		.loc 2 295 16
 432 0040 0423     		movs	r3, #4
 433 0042 0DE0     		b	.L26
 434              	.L25:
 296:./i2c/i2c-std.c ****      }
 297:./i2c/i2c-std.c ****      if(I2Cx_Timeout==0)
 435              		.loc 2 297 21
 436 0044 094B     		ldr	r3, .L28
 437 0046 1B68     		ldr	r3, [r3]
 438              		.loc 2 297 8
 439 0048 002B     		cmp	r3, #0
 440 004a 01D1     		bne	.L24
 298:./i2c/i2c-std.c ****         return I2C_TIMEOUT; //I2C_ERROR
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s 			page 35


 441              		.loc 2 298 16
 442 004c 0A23     		movs	r3, #10
 443 004e 07E0     		b	.L26
 444              	.L24:
 284:./i2c/i2c-std.c ****           //bits_is_clear(I2CX->SR2,(uint16_t)(I2C_SR2_BUSY|I2C_SR2_MSL|I2C_SR2_TRA)))   //!I2C_Che
 445              		.loc 2 284 11
 446 0050 7B68     		ldr	r3, [r7, #4]
 447 0052 9B8A     		ldrh	r3, [r3, #20]	@ movhi
 448 0054 9BB2     		uxth	r3, r3
 449 0056 03F00203 		and	r3, r3, #2
 284:./i2c/i2c-std.c ****           //bits_is_clear(I2CX->SR2,(uint16_t)(I2C_SR2_BUSY|I2C_SR2_MSL|I2C_SR2_TRA)))   //!I2C_Che
 450              		.loc 2 284 10
 451 005a 002B     		cmp	r3, #0
 452 005c D9D0     		beq	.L27
 299:./i2c/i2c-std.c ****     }
 300:./i2c/i2c-std.c ****    return I2C_OK; 
 453              		.loc 2 300 11
 454 005e 0023     		movs	r3, #0
 455              	.L26:
 301:./i2c/i2c-std.c **** }
 456              		.loc 2 301 1
 457 0060 1846     		mov	r0, r3
 458 0062 0C37     		adds	r7, r7, #12
 459              	.LCFI29:
 460              		.cfi_def_cfa_offset 4
 461 0064 BD46     		mov	sp, r7
 462              	.LCFI30:
 463              		.cfi_def_cfa_register 13
 464              		@ sp needed
 465 0066 80BC     		pop	{r7}
 466              	.LCFI31:
 467              		.cfi_restore 7
 468              		.cfi_def_cfa_offset 0
 469 0068 7047     		bx	lr
 470              	.L29:
 471 006a 00BF     		.align	2
 472              	.L28:
 473 006c 00000000 		.word	I2Cx_Timeout
 474              		.cfi_endproc
 475              	.LFE36:
 477              		.section	.text.i2c_wait_7bit_slave_address_rd_std,"ax",%progbits
 478              		.align	1
 479              		.syntax unified
 480              		.thumb
 481              		.thumb_func
 483              	i2c_wait_7bit_slave_address_rd_std:
 484              	.LFB37:
 302:./i2c/i2c-std.c **** //-------------------------------------------------------------------------------------------------
 303:./i2c/i2c-std.c **** /**
 304:./i2c/i2c-std.c ****  * @brief    Waits the until the slave acknowledges back to the reception of its address in read mo
 305:./i2c/i2c-std.c ****  * @details  check that the slave aknowledges back as it receives its address  the flags
 306:./i2c/i2c-std.c ****  *            BUSY, MSL and ADDR flags which all set  TRA=0
 307:./i2c/i2c-std.c ****  *           TXE= 1 no need to check it as the master will go to receiver mode after 
 308:./i2c/i2c-std.c ****  *           ADDR=1 indicates End of address transmission which is defined by the slave acknowledgm
 309:./i2c/i2c-std.c ****  *           TRA=0  indicates Receiver mode set depending on the R/W bit of the address byte
 310:./i2c/i2c-std.c ****  *           BUSY=1 indicates the I2C is busy (no arbitration lost or peripheral) 
 311:./i2c/i2c-std.c ****  *           MSL=1  indicates Master mode 
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s 			page 36


 312:./i2c/i2c-std.c ****     I2C_SR1 : I2C Status register 1
 313:./i2c/i2c-std.c ****  *         ADDR: 
 314:./i2c/i2c-std.c ****  *          This bit is cleared by software reading SR1 register followed reading SR2, or by hardwa
 315:./i2c/i2c-std.c ****  *           1.Slave :: Address matched (Slave)
 316:./i2c/i2c-std.c ****               0: Address mismatched or not received.
 317:./i2c/i2c-std.c ****               1: Received address matched
 318:./i2c/i2c-std.c ****  *          
 319:./i2c/i2c-std.c ****             2. Master : Address sent (Master)
 320:./i2c/i2c-std.c ****               0: No end of address transmission
 321:./i2c/i2c-std.c ****               1: End of address transmission
 322:./i2c/i2c-std.c ****             – For 10-bit addressing, the bit is set after the ACK of the 2nd byte.
 323:./i2c/i2c-std.c ****             – For 7-bit addressing, the bit is set after the ACK
 324:./i2c/i2c-std.c ****  *          Note: 
 325:./i2c/i2c-std.c ****                ADDR is not set after a NACK reception
 326:./i2c/i2c-std.c ****  
 327:./i2c/i2c-std.c ****    I2C_SR2 : I2C Status register 2          
 328:./i2c/i2c-std.c ****             TRA: Transmitter/receiver
 329:./i2c/i2c-std.c ****               0: Data bytes received
 330:./i2c/i2c-std.c ****               1: Data bytes transmitted
 331:./i2c/i2c-std.c ****             This bit is set depending on the R/W bit of the address byte, at the end of total addre
 332:./i2c/i2c-std.c ****             It is also cleared by hardware after detection of Stop condition (STOPF=1), repeated St
 333:./i2c/i2c-std.c ****             loss of bus arbitration (ARLO=1), or when PE=0.
 334:./i2c/i2c-std.c ****             BUSY: Bus busy
 335:./i2c/i2c-std.c ****              0: No communication on the bus
 336:./i2c/i2c-std.c ****              1: Communication ongoing on the bus
 337:./i2c/i2c-std.c ****              – Set by hardware on detection of SDA or SCL low
 338:./i2c/i2c-std.c ****              – cleared by hardware on detection of a Stop condition.
 339:./i2c/i2c-std.c ****              It indicates a communication in progress on the bus. This information is still updated
 340:./i2c/i2c-std.c ****             MSL: Master/slave
 341:./i2c/i2c-std.c ****               0: Slave Mode
 342:./i2c/i2c-std.c ****               1: Master Mode
 343:./i2c/i2c-std.c ****               – Set by hardware as soon as the interface is in Master mode (SB=1).
 344:./i2c/i2c-std.c ****               – Cleared by hardware after detecting a Stop condition on the bus or a loss of arbi
 345:./i2c/i2c-std.c ****                
 346:./i2c/i2c-std.c ****             I2C_SLAVE_ADDRESS_NACK_ERROR:
 347:./i2c/i2c-std.c ****  *           if a timeout is passed without detecting a ADDR=1 then set an error condition  
 348:./i2c/i2c-std.c ****  *           which indicates that no slave has acknowledged on the I2C bus either no one has
 349:./i2c/i2c-std.c ****  *           this address or that slave has an issue to check 
 350:./i2c/i2c-std.c ****  * @param I2CX 
 351:./i2c/i2c-std.c ****  * @return uint8_t   
 352:./i2c/i2c-std.c **** */
 353:./i2c/i2c-std.c **** uint8_t i2c_wait_7bit_slave_address_rd_std(I2C_TypeDef* I2CX)
 354:./i2c/i2c-std.c **** {
 485              		.loc 2 354 1
 486              		.cfi_startproc
 487              		@ args = 0, pretend = 0, frame = 8
 488              		@ frame_needed = 1, uses_anonymous_args = 0
 489              		@ link register save eliminated.
 490 0000 80B4     		push	{r7}
 491              	.LCFI32:
 492              		.cfi_def_cfa_offset 4
 493              		.cfi_offset 7, -4
 494 0002 83B0     		sub	sp, sp, #12
 495              	.LCFI33:
 496              		.cfi_def_cfa_offset 16
 497 0004 00AF     		add	r7, sp, #0
 498              	.LCFI34:
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s 			page 37


 499              		.cfi_def_cfa_register 7
 500 0006 7860     		str	r0, [r7, #4]
 355:./i2c/i2c-std.c ****   //! wait the slave address acknowledge Master_Read
 356:./i2c/i2c-std.c ****      I2Cx_Timeout=I2C_MAX_WAIT_TIME;  
 501              		.loc 2 356 18
 502 0008 1B4B     		ldr	r3, .L35
 503 000a 40F6AC52 		movw	r2, #3500
 504 000e 1A60     		str	r2, [r3]
 357:./i2c/i2c-std.c ****     // wait until the slave acknowledge  BUSY, MSL, ADDR flags are all set 
 358:./i2c/i2c-std.c ****     while(bits_is_clear(I2CX->SR1,I2C_SR1_ADDR) || bits_is_clear(I2CX->SR2,(uint16_t)(I2C_SR2_BUSY|
 505              		.loc 2 358 10
 506 0010 1EE0     		b	.L31
 507              	.L34:
 359:./i2c/i2c-std.c ****      {
 360:./i2c/i2c-std.c ****       if(bits_is_set(I2CX->SR1,I2C_SR1_AF))  
 508              		.loc 2 360 10
 509 0012 7B68     		ldr	r3, [r7, #4]
 510 0014 9B8A     		ldrh	r3, [r3, #20]	@ movhi
 511 0016 9BB2     		uxth	r3, r3
 512 0018 03F48063 		and	r3, r3, #1024
 513              		.loc 2 360 9
 514 001c 002B     		cmp	r3, #0
 515 001e 11D0     		beq	.L32
 361:./i2c/i2c-std.c ****       {
 362:./i2c/i2c-std.c ****         /* Generate Stop */
 363:./i2c/i2c-std.c ****         SET_BIT(I2CX->CR1, I2C_CR1_STOP);
 516              		.loc 2 363 9
 517 0020 7B68     		ldr	r3, [r7, #4]
 518 0022 1B88     		ldrh	r3, [r3]	@ movhi
 519 0024 9BB2     		uxth	r3, r3
 520 0026 43F40073 		orr	r3, r3, #512
 521 002a 9AB2     		uxth	r2, r3
 522 002c 7B68     		ldr	r3, [r7, #4]
 523 002e 1A80     		strh	r2, [r3]	@ movhi
 364:./i2c/i2c-std.c ****         /* Clear AF Flag */
 365:./i2c/i2c-std.c ****         CLEAR_BIT(I2CX->SR1,I2C_FLAG_AF);  //_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 524              		.loc 2 365 9
 525 0030 7B68     		ldr	r3, [r7, #4]
 526 0032 9B8A     		ldrh	r3, [r3, #20]	@ movhi
 527 0034 9BB2     		uxth	r3, r3
 528 0036 23F48063 		bic	r3, r3, #1024
 529 003a 9AB2     		uxth	r2, r3
 530 003c 7B68     		ldr	r3, [r7, #4]
 531 003e 9A82     		strh	r2, [r3, #20]	@ movhi
 366:./i2c/i2c-std.c ****         
 367:./i2c/i2c-std.c ****       // I2C_SLAVE_ADDRESS_NACK Acknowledge no slave with this address at the bus
 368:./i2c/i2c-std.c ****         return I2C_NACK_ERROR;
 532              		.loc 2 368 16
 533 0040 0423     		movs	r3, #4
 534 0042 14E0     		b	.L33
 535              	.L32:
 369:./i2c/i2c-std.c ****       }        
 370:./i2c/i2c-std.c ****      if(I2Cx_Timeout==0)
 536              		.loc 2 370 21
 537 0044 0C4B     		ldr	r3, .L35
 538 0046 1B68     		ldr	r3, [r3]
 539              		.loc 2 370 8
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s 			page 38


 540 0048 002B     		cmp	r3, #0
 541 004a 01D1     		bne	.L31
 371:./i2c/i2c-std.c ****       return I2C_TIMEOUT; //I2C_ERROR
 542              		.loc 2 371 14
 543 004c 0A23     		movs	r3, #10
 544 004e 0EE0     		b	.L33
 545              	.L31:
 358:./i2c/i2c-std.c ****      {
 546              		.loc 2 358 11
 547 0050 7B68     		ldr	r3, [r7, #4]
 548 0052 9B8A     		ldrh	r3, [r3, #20]	@ movhi
 549 0054 9BB2     		uxth	r3, r3
 550 0056 03F00203 		and	r3, r3, #2
 358:./i2c/i2c-std.c ****      {
 551              		.loc 2 358 10
 552 005a 002B     		cmp	r3, #0
 553 005c D9D0     		beq	.L34
 358:./i2c/i2c-std.c ****      {
 554              		.loc 2 358 52 discriminator 1
 555 005e 7B68     		ldr	r3, [r7, #4]
 556 0060 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 557 0062 9BB2     		uxth	r3, r3
 558 0064 03F00303 		and	r3, r3, #3
 358:./i2c/i2c-std.c ****      {
 559              		.loc 2 358 49 discriminator 1
 560 0068 002B     		cmp	r3, #0
 561 006a D2D0     		beq	.L34
 372:./i2c/i2c-std.c ****     }
 373:./i2c/i2c-std.c **** 
 374:./i2c/i2c-std.c ****   return I2C_OK; 
 562              		.loc 2 374 10
 563 006c 0023     		movs	r3, #0
 564              	.L33:
 375:./i2c/i2c-std.c **** }
 565              		.loc 2 375 1
 566 006e 1846     		mov	r0, r3
 567 0070 0C37     		adds	r7, r7, #12
 568              	.LCFI35:
 569              		.cfi_def_cfa_offset 4
 570 0072 BD46     		mov	sp, r7
 571              	.LCFI36:
 572              		.cfi_def_cfa_register 13
 573              		@ sp needed
 574 0074 80BC     		pop	{r7}
 575              	.LCFI37:
 576              		.cfi_restore 7
 577              		.cfi_def_cfa_offset 0
 578 0076 7047     		bx	lr
 579              	.L36:
 580              		.align	2
 581              	.L35:
 582 0078 00000000 		.word	I2Cx_Timeout
 583              		.cfi_endproc
 584              	.LFE37:
 586              		.section	.text.i2c_wait_write_byte_btf_std,"ax",%progbits
 587              		.align	1
 588              		.syntax unified
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s 			page 39


 589              		.thumb
 590              		.thumb_func
 592              	i2c_wait_write_byte_btf_std:
 593              	.LFB38:
 376:./i2c/i2c-std.c **** //-------------------------------------------------------------------------------------------------
 377:./i2c/i2c-std.c **** /**
 378:./i2c/i2c-std.c ****  * @brief    Waits the until the complete transmistion of the current data byte 
 379:./i2c/i2c-std.c ****  * @details  check that  the complete transmistion of the current data byte has completed 
 380:./i2c/i2c-std.c ****  *            by checking the flag BTF 
 381:./i2c/i2c-std.c ****  *           EV8_1: TxE=1,BTF=1, shift register empty, data register empty, write Data1 in DR.
 382:./i2c/i2c-std.c ****              EV8 :  TxE=1,BTF=0, shift register not empty, .data register empty, cleared by writing
 383:./i2c/i2c-std.c ****  *           BTF: Byte transfer finished
 384:./i2c/i2c-std.c ****                 0: Data byte transfer not done
 385:./i2c/i2c-std.c ****                 1: Data byte transfer succeeded
 386:./i2c/i2c-std.c ****               – Set by hardware when NOSTRETCH=0 and:
 387:./i2c/i2c-std.c ****               – In reception when a new byte is received (including ACK pulse) and DR has not bee
 388:./i2c/i2c-std.c ****               – In transmission when a new byte should be sent and DR has not been written yet (T
 389:./i2c/i2c-std.c ****               – Cleared by software reading SR1 followed by either a read or write in the DR regi
 390:./i2c/i2c-std.c ****               - Cleared by hardware after a start or a stop condition in transmission or when PE=0.
 391:./i2c/i2c-std.c ****               Note: The BTF bit is not set after a NACK reception
 392:./i2c/i2c-std.c **** 
 393:./i2c/i2c-std.c ****             I2C_TX_BYTE_ERROR:
 394:./i2c/i2c-std.c ****  *           if a timeout is passed without detecting a BTF=1 then set an error condition  
 395:./i2c/i2c-std.c ****  * @param I2CX 
 396:./i2c/i2c-std.c ****  * @return uint8_t   
 397:./i2c/i2c-std.c **** */
 398:./i2c/i2c-std.c **** uint8_t i2c_wait_write_byte_btf_std(I2C_TypeDef* I2CX)		           
 399:./i2c/i2c-std.c **** {
 594              		.loc 2 399 1
 595              		.cfi_startproc
 596              		@ args = 0, pretend = 0, frame = 8
 597              		@ frame_needed = 1, uses_anonymous_args = 0
 598              		@ link register save eliminated.
 599 0000 80B4     		push	{r7}
 600              	.LCFI38:
 601              		.cfi_def_cfa_offset 4
 602              		.cfi_offset 7, -4
 603 0002 83B0     		sub	sp, sp, #12
 604              	.LCFI39:
 605              		.cfi_def_cfa_offset 16
 606 0004 00AF     		add	r7, sp, #0
 607              	.LCFI40:
 608              		.cfi_def_cfa_register 7
 609 0006 7860     		str	r0, [r7, #4]
 400:./i2c/i2c-std.c ****     //! wait the complete of current byte transmition (MASTER-write)
 401:./i2c/i2c-std.c ****     I2Cx_Timeout=I2C_MAX_WAIT_TIME; 
 610              		.loc 2 401 17
 611 0008 184B     		ldr	r3, .L42
 612 000a 40F6AC52 		movw	r2, #3500
 613 000e 1A60     		str	r2, [r3]
 402:./i2c/i2c-std.c ****     //volatile uint32_t Timeout=0xffff;
 403:./i2c/i2c-std.c ****     //Wait until BTF is set
 404:./i2c/i2c-std.c ****     // each time just repeat Ev8_1 & Ev8 : shift register empty, data register empty, and need to w
 405:./i2c/i2c-std.c ****     while(bits_is_clear(I2CX->SR1,I2C_SR1_BTF)) //!I2C_GetFlagStatus(I2CX,I2C_FLAG_TXE))
 614              		.loc 2 405 10
 615 0010 1EE0     		b	.L38
 616              	.L41:
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s 			page 40


 406:./i2c/i2c-std.c ****     {
 407:./i2c/i2c-std.c ****         if(bits_is_set(I2CX->SR1,I2C_SR1_AF))  
 617              		.loc 2 407 12
 618 0012 7B68     		ldr	r3, [r7, #4]
 619 0014 9B8A     		ldrh	r3, [r3, #20]	@ movhi
 620 0016 9BB2     		uxth	r3, r3
 621 0018 03F48063 		and	r3, r3, #1024
 622              		.loc 2 407 11
 623 001c 002B     		cmp	r3, #0
 624 001e 11D0     		beq	.L39
 408:./i2c/i2c-std.c ****         {
 409:./i2c/i2c-std.c ****          /* Generate Stop */
 410:./i2c/i2c-std.c ****          SET_BIT(I2CX->CR1, I2C_CR1_STOP);
 625              		.loc 2 410 10
 626 0020 7B68     		ldr	r3, [r7, #4]
 627 0022 1B88     		ldrh	r3, [r3]	@ movhi
 628 0024 9BB2     		uxth	r3, r3
 629 0026 43F40073 		orr	r3, r3, #512
 630 002a 9AB2     		uxth	r2, r3
 631 002c 7B68     		ldr	r3, [r7, #4]
 632 002e 1A80     		strh	r2, [r3]	@ movhi
 411:./i2c/i2c-std.c ****         /* Clear AF Flag */
 412:./i2c/i2c-std.c ****          CLEAR_BIT(I2CX->SR1,I2C_FLAG_AF);  //_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 633              		.loc 2 412 10
 634 0030 7B68     		ldr	r3, [r7, #4]
 635 0032 9B8A     		ldrh	r3, [r3, #20]	@ movhi
 636 0034 9BB2     		uxth	r3, r3
 637 0036 23F48063 		bic	r3, r3, #1024
 638 003a 9AB2     		uxth	r2, r3
 639 003c 7B68     		ldr	r3, [r7, #4]
 640 003e 9A82     		strh	r2, [r3, #20]	@ movhi
 413:./i2c/i2c-std.c ****         
 414:./i2c/i2c-std.c ****         // I2C_SLAVE_ADDRESS_NACK Acknowledge no slave with this address at the bus
 415:./i2c/i2c-std.c ****         return I2C_NACK_ERROR;
 641              		.loc 2 415 16
 642 0040 0423     		movs	r3, #4
 643 0042 0DE0     		b	.L40
 644              	.L39:
 416:./i2c/i2c-std.c ****        }
 417:./i2c/i2c-std.c ****       if(I2Cx_Timeout==0)
 645              		.loc 2 417 22
 646 0044 094B     		ldr	r3, .L42
 647 0046 1B68     		ldr	r3, [r3]
 648              		.loc 2 417 9
 649 0048 002B     		cmp	r3, #0
 650 004a 01D1     		bne	.L38
 418:./i2c/i2c-std.c ****         return  I2C_TX_BTF_ERROR;// set the error then exit ::I2C_TX_BTF_ERROR
 651              		.loc 2 418 17
 652 004c 0523     		movs	r3, #5
 653 004e 07E0     		b	.L40
 654              	.L38:
 405:./i2c/i2c-std.c ****     {
 655              		.loc 2 405 11
 656 0050 7B68     		ldr	r3, [r7, #4]
 657 0052 9B8A     		ldrh	r3, [r3, #20]	@ movhi
 658 0054 9BB2     		uxth	r3, r3
 659 0056 03F00403 		and	r3, r3, #4
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s 			page 41


 405:./i2c/i2c-std.c ****     {
 660              		.loc 2 405 10
 661 005a 002B     		cmp	r3, #0
 662 005c D9D0     		beq	.L41
 419:./i2c/i2c-std.c ****    }
 420:./i2c/i2c-std.c ****     return I2C_OK;
 663              		.loc 2 420 12
 664 005e 0023     		movs	r3, #0
 665              	.L40:
 421:./i2c/i2c-std.c **** }
 666              		.loc 2 421 1
 667 0060 1846     		mov	r0, r3
 668 0062 0C37     		adds	r7, r7, #12
 669              	.LCFI41:
 670              		.cfi_def_cfa_offset 4
 671 0064 BD46     		mov	sp, r7
 672              	.LCFI42:
 673              		.cfi_def_cfa_register 13
 674              		@ sp needed
 675 0066 80BC     		pop	{r7}
 676              	.LCFI43:
 677              		.cfi_restore 7
 678              		.cfi_def_cfa_offset 0
 679 0068 7047     		bx	lr
 680              	.L43:
 681 006a 00BF     		.align	2
 682              	.L42:
 683 006c 00000000 		.word	I2Cx_Timeout
 684              		.cfi_endproc
 685              	.LFE38:
 687              		.section	.text.i2c_wait_write_byte_txe_std,"ax",%progbits
 688              		.align	1
 689              		.syntax unified
 690              		.thumb
 691              		.thumb_func
 693              	i2c_wait_write_byte_txe_std:
 694              	.LFB39:
 422:./i2c/i2c-std.c **** //-------------------------------------------------------------------------------------------------
 423:./i2c/i2c-std.c **** /**
 424:./i2c/i2c-std.c ****  * @brief    Waits the until the complete transmistion of the current data byte 
 425:./i2c/i2c-std.c ****  * @details  check that  the complete transmistion of the current data byte has completed 
 426:./i2c/i2c-std.c ****  *            by checking the flag BTF 
 427:./i2c/i2c-std.c ****  *           EV8_1: TxE=1,BTF=1, shift register empty, data register empty, write Data1 in DR.
 428:./i2c/i2c-std.c ****              EV8 :  TxE=1,BTF=0, shift register not empty, .data register empty, cleared by writing
 429:./i2c/i2c-std.c ****  *           BTF: Byte transfer finished
 430:./i2c/i2c-std.c ****                 0: Data byte transfer not done
 431:./i2c/i2c-std.c ****                 1: Data byte transfer succeeded
 432:./i2c/i2c-std.c ****               – Set by hardware when NOSTRETCH=0 and:
 433:./i2c/i2c-std.c ****               – In reception when a new byte is received (including ACK pulse) and DR has not bee
 434:./i2c/i2c-std.c ****               – In transmission when a new byte should be sent and DR has not been written yet (T
 435:./i2c/i2c-std.c ****               – Cleared by software reading SR1 followed by either a read or write in the DR regi
 436:./i2c/i2c-std.c ****               - Cleared by hardware after a start or a stop condition in transmission or when PE=0.
 437:./i2c/i2c-std.c ****               Note: The BTF bit is not set after a NACK reception
 438:./i2c/i2c-std.c **** 
 439:./i2c/i2c-std.c ****             I2C_TX_BYTE_ERROR:
 440:./i2c/i2c-std.c ****  *           if a timeout is passed without detecting a BTF=1 then set an error condition  
 441:./i2c/i2c-std.c ****  * @param I2CX 
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s 			page 42


 442:./i2c/i2c-std.c ****  * @return uint8_t   
 443:./i2c/i2c-std.c **** */
 444:./i2c/i2c-std.c **** uint8_t i2c_wait_write_byte_txe_std(I2C_TypeDef* I2CX)		           
 445:./i2c/i2c-std.c **** {
 695              		.loc 2 445 1
 696              		.cfi_startproc
 697              		@ args = 0, pretend = 0, frame = 8
 698              		@ frame_needed = 1, uses_anonymous_args = 0
 699              		@ link register save eliminated.
 700 0000 80B4     		push	{r7}
 701              	.LCFI44:
 702              		.cfi_def_cfa_offset 4
 703              		.cfi_offset 7, -4
 704 0002 83B0     		sub	sp, sp, #12
 705              	.LCFI45:
 706              		.cfi_def_cfa_offset 16
 707 0004 00AF     		add	r7, sp, #0
 708              	.LCFI46:
 709              		.cfi_def_cfa_register 7
 710 0006 7860     		str	r0, [r7, #4]
 446:./i2c/i2c-std.c ****     //! wait the complete of current byte transmition (MASTER-write)
 447:./i2c/i2c-std.c ****     I2Cx_Timeout=I2C_MAX_WAIT_TIME; 
 711              		.loc 2 447 17
 712 0008 184B     		ldr	r3, .L49
 713 000a 40F6AC52 		movw	r2, #3500
 714 000e 1A60     		str	r2, [r3]
 448:./i2c/i2c-std.c ****     //volatile uint32_t Timeout=0xffff;
 449:./i2c/i2c-std.c ****     //Wait until BTF is set
 450:./i2c/i2c-std.c ****     // each time just repeat Ev8_1 & Ev8 : shift register empty, data register empty, and need to w
 451:./i2c/i2c-std.c ****     while(bits_is_clear(I2CX->SR1,I2C_SR1_TXE)) //!I2C_GetFlagStatus(I2CX,I2C_FLAG_TXE))
 715              		.loc 2 451 10
 716 0010 1EE0     		b	.L45
 717              	.L48:
 452:./i2c/i2c-std.c ****     {
 453:./i2c/i2c-std.c ****         if(bits_is_set(I2CX->SR1,I2C_SR1_AF))  
 718              		.loc 2 453 12
 719 0012 7B68     		ldr	r3, [r7, #4]
 720 0014 9B8A     		ldrh	r3, [r3, #20]	@ movhi
 721 0016 9BB2     		uxth	r3, r3
 722 0018 03F48063 		and	r3, r3, #1024
 723              		.loc 2 453 11
 724 001c 002B     		cmp	r3, #0
 725 001e 11D0     		beq	.L46
 454:./i2c/i2c-std.c ****         {
 455:./i2c/i2c-std.c ****            /* Generate Stop */
 456:./i2c/i2c-std.c ****             SET_BIT(I2CX->CR1, I2C_CR1_STOP);
 726              		.loc 2 456 13
 727 0020 7B68     		ldr	r3, [r7, #4]
 728 0022 1B88     		ldrh	r3, [r3]	@ movhi
 729 0024 9BB2     		uxth	r3, r3
 730 0026 43F40073 		orr	r3, r3, #512
 731 002a 9AB2     		uxth	r2, r3
 732 002c 7B68     		ldr	r3, [r7, #4]
 733 002e 1A80     		strh	r2, [r3]	@ movhi
 457:./i2c/i2c-std.c ****           /* Clear AF Flag */
 458:./i2c/i2c-std.c ****             CLEAR_BIT(I2CX->SR1,I2C_FLAG_AF);  //_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 734              		.loc 2 458 13
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s 			page 43


 735 0030 7B68     		ldr	r3, [r7, #4]
 736 0032 9B8A     		ldrh	r3, [r3, #20]	@ movhi
 737 0034 9BB2     		uxth	r3, r3
 738 0036 23F48063 		bic	r3, r3, #1024
 739 003a 9AB2     		uxth	r2, r3
 740 003c 7B68     		ldr	r3, [r7, #4]
 741 003e 9A82     		strh	r2, [r3, #20]	@ movhi
 459:./i2c/i2c-std.c ****           // I2C_SLAVE_ADDRESS_NACK Acknowledge no slave with this address at the bus
 460:./i2c/i2c-std.c ****             return I2C_NACK_ERROR;
 742              		.loc 2 460 20
 743 0040 0423     		movs	r3, #4
 744 0042 0DE0     		b	.L47
 745              	.L46:
 461:./i2c/i2c-std.c ****         }
 462:./i2c/i2c-std.c ****         if(I2Cx_Timeout==0)
 746              		.loc 2 462 24
 747 0044 094B     		ldr	r3, .L49
 748 0046 1B68     		ldr	r3, [r3]
 749              		.loc 2 462 11
 750 0048 002B     		cmp	r3, #0
 751 004a 01D1     		bne	.L45
 463:./i2c/i2c-std.c ****           return  I2C_TX_TXE_ERROR; // set the error then exit ::I2C_TX_BTF_ERROR
 752              		.loc 2 463 19
 753 004c 0623     		movs	r3, #6
 754 004e 07E0     		b	.L47
 755              	.L45:
 451:./i2c/i2c-std.c ****     {
 756              		.loc 2 451 11
 757 0050 7B68     		ldr	r3, [r7, #4]
 758 0052 9B8A     		ldrh	r3, [r3, #20]	@ movhi
 759 0054 9BB2     		uxth	r3, r3
 760 0056 03F08003 		and	r3, r3, #128
 451:./i2c/i2c-std.c ****     {
 761              		.loc 2 451 10
 762 005a 002B     		cmp	r3, #0
 763 005c D9D0     		beq	.L48
 464:./i2c/i2c-std.c ****     }
 465:./i2c/i2c-std.c ****     return I2C_OK;
 764              		.loc 2 465 12
 765 005e 0023     		movs	r3, #0
 766              	.L47:
 466:./i2c/i2c-std.c **** }
 767              		.loc 2 466 1
 768 0060 1846     		mov	r0, r3
 769 0062 0C37     		adds	r7, r7, #12
 770              	.LCFI47:
 771              		.cfi_def_cfa_offset 4
 772 0064 BD46     		mov	sp, r7
 773              	.LCFI48:
 774              		.cfi_def_cfa_register 13
 775              		@ sp needed
 776 0066 80BC     		pop	{r7}
 777              	.LCFI49:
 778              		.cfi_restore 7
 779              		.cfi_def_cfa_offset 0
 780 0068 7047     		bx	lr
 781              	.L50:
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s 			page 44


 782 006a 00BF     		.align	2
 783              	.L49:
 784 006c 00000000 		.word	I2Cx_Timeout
 785              		.cfi_endproc
 786              	.LFE39:
 788              		.section	.text.i2c_wait_read_byte_rxne_std,"ax",%progbits
 789              		.align	1
 790              		.syntax unified
 791              		.thumb
 792              		.thumb_func
 794              	i2c_wait_read_byte_rxne_std:
 795              	.LFB40:
 467:./i2c/i2c-std.c **** //-------------------------------------------------------------------------------------------------
 468:./i2c/i2c-std.c **** /**
 469:./i2c/i2c-std.c ****  * @brief    Waits the until the complete receiption of the current data byte 
 470:./i2c/i2c-std.c ****  * @details  check that  the complete receiption  of the current data byte has completed 
 471:./i2c/i2c-std.c ****  *            by checking the flag I2C_FLAG_RXNE
 472:./i2c/i2c-std.c ****  * 
 473:./i2c/i2c-std.c ****  *      RXNE: Data register not empty (receivers)
 474:./i2c/i2c-std.c ****  *            0: Data register empty
 475:./i2c/i2c-std.c ****               1: Data register not empty
 476:./i2c/i2c-std.c ****               – Set when data register is not empty in receiver mode. RxNE is not set during addr
 477:./i2c/i2c-std.c ****               – Cleared by software reading or writing the DR register or by hardware when PE=0.
 478:./i2c/i2c-std.c ****             RxNE is not set in case of ARLO event.
 479:./i2c/i2c-std.c ****             RxNE is not cleared by reading data when BTF is set, as the data register is still full
 480:./i2c/i2c-std.c **** 
 481:./i2c/i2c-std.c ****  *           BTF: Byte transfer finished
 482:./i2c/i2c-std.c ****                 0: Data byte transfer not done
 483:./i2c/i2c-std.c ****                 1: Data byte transfer succeeded
 484:./i2c/i2c-std.c ****               – Set by hardware when NOSTRETCH=0 and:
 485:./i2c/i2c-std.c ****               – In reception when a new byte is received (including ACK pulse) and DR has not bee
 486:./i2c/i2c-std.c ****               – In transmission when a new byte should be sent and DR has not been written yet (T
 487:./i2c/i2c-std.c ****               – Cleared by software reading SR1 followed by either a read or write in the DR regi
 488:./i2c/i2c-std.c ****               - Cleared by hardware after a start or a stop condition in transmission or when PE=0.
 489:./i2c/i2c-std.c ****           Note: The BTF bit is not set after a NACK reception
 490:./i2c/i2c-std.c **** 
 491:./i2c/i2c-std.c ****             I2C_RX_RXNE_ERROR:
 492:./i2c/i2c-std.c ****  *           if a timeout is passed without detecting a RNXE=1 then set an error condition  
 493:./i2c/i2c-std.c ****  * @param I2CX 
 494:./i2c/i2c-std.c ****  * @return uint8_t   
 495:./i2c/i2c-std.c **** */
 496:./i2c/i2c-std.c **** //#define  I2C_EVENT_MASTER_BYTE_RECEIVED                    ((uint32_t)0x00030040)  /* BUSY, MSL a
 497:./i2c/i2c-std.c **** uint8_t i2c_wait_read_byte_rxne_std(I2C_TypeDef* I2CX)		             
 498:./i2c/i2c-std.c **** {
 796              		.loc 2 498 1
 797              		.cfi_startproc
 798              		@ args = 0, pretend = 0, frame = 16
 799              		@ frame_needed = 1, uses_anonymous_args = 0
 800              		@ link register save eliminated.
 801 0000 80B4     		push	{r7}
 802              	.LCFI50:
 803              		.cfi_def_cfa_offset 4
 804              		.cfi_offset 7, -4
 805 0002 85B0     		sub	sp, sp, #20
 806              	.LCFI51:
 807              		.cfi_def_cfa_offset 24
 808 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s 			page 45


 809              	.LCFI52:
 810              		.cfi_def_cfa_register 7
 811 0006 7860     		str	r0, [r7, #4]
 499:./i2c/i2c-std.c ****  //! wait the complete of current byte receiption (MASTER-read)
 500:./i2c/i2c-std.c ****      //Wait until RXNE is set
 501:./i2c/i2c-std.c ****     I2Cx_Timeout=I2C_MAX_WAIT_TIME; 
 812              		.loc 2 501 17
 813 0008 174B     		ldr	r3, .L56
 814 000a 40F6AC52 		movw	r2, #3500
 815 000e 1A60     		str	r2, [r3]
 502:./i2c/i2c-std.c ****     while(bits_is_clear(I2CX->SR1,I2C_SR1_RXNE))//I2C_GetFlagStatus(I2CX,I2C_FLAG_RXNE))
 816              		.loc 2 502 10
 817 0010 1DE0     		b	.L52
 818              	.L55:
 503:./i2c/i2c-std.c ****     {
 504:./i2c/i2c-std.c ****       /* Check if a STOPF is detected */
 505:./i2c/i2c-std.c ****       if (bits_is_set(I2CX->SR1,I2C_SR1_STOPF) )
 819              		.loc 2 505 11
 820 0012 7B68     		ldr	r3, [r7, #4]
 821 0014 9B8A     		ldrh	r3, [r3, #20]	@ movhi
 822 0016 9BB2     		uxth	r3, r3
 823 0018 03F01003 		and	r3, r3, #16
 824              		.loc 2 505 10
 825 001c 002B     		cmp	r3, #0
 826 001e 10D0     		beq	.L53
 827              	.LBB3:
 506:./i2c/i2c-std.c ****       {
 507:./i2c/i2c-std.c ****           /* Clear STOP Flag */
 508:./i2c/i2c-std.c ****            _I2C_CLEAR_STOPFLAG(I2CX);      
 828              		.loc 2 508 12
 829 0020 0023     		movs	r3, #0
 830 0022 FB60     		str	r3, [r7, #12]
 831 0024 7B68     		ldr	r3, [r7, #4]
 832 0026 9B8A     		ldrh	r3, [r3, #20]	@ movhi
 833 0028 9BB2     		uxth	r3, r3
 834 002a FB60     		str	r3, [r7, #12]
 835 002c 7B68     		ldr	r3, [r7, #4]
 836 002e 1B88     		ldrh	r3, [r3]	@ movhi
 837 0030 9BB2     		uxth	r3, r3
 838 0032 43F00103 		orr	r3, r3, #1
 839 0036 9AB2     		uxth	r2, r3
 840 0038 7B68     		ldr	r3, [r7, #4]
 841 003a 1A80     		strh	r2, [r3]	@ movhi
 842 003c FB68     		ldr	r3, [r7, #12]
 843              	.LBE3:
 509:./i2c/i2c-std.c ****          return I2C_ERROR;
 844              		.loc 2 509 17
 845 003e 0923     		movs	r3, #9
 846 0040 0DE0     		b	.L54
 847              	.L53:
 510:./i2c/i2c-std.c ****       }
 511:./i2c/i2c-std.c ****       if(I2Cx_Timeout==0)  
 848              		.loc 2 511 22
 849 0042 094B     		ldr	r3, .L56
 850 0044 1B68     		ldr	r3, [r3]
 851              		.loc 2 511 9
 852 0046 002B     		cmp	r3, #0
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s 			page 46


 853 0048 01D1     		bne	.L52
 512:./i2c/i2c-std.c ****            return I2C_RX_RXNE_ERROR;// set the error then exit ::I2C_RX_RXNE_ERROR
 854              		.loc 2 512 19
 855 004a 0723     		movs	r3, #7
 856 004c 07E0     		b	.L54
 857              	.L52:
 502:./i2c/i2c-std.c ****     {
 858              		.loc 2 502 11
 859 004e 7B68     		ldr	r3, [r7, #4]
 860 0050 9B8A     		ldrh	r3, [r3, #20]	@ movhi
 861 0052 9BB2     		uxth	r3, r3
 862 0054 03F04003 		and	r3, r3, #64
 502:./i2c/i2c-std.c ****     {
 863              		.loc 2 502 10
 864 0058 002B     		cmp	r3, #0
 865 005a DAD0     		beq	.L55
 513:./i2c/i2c-std.c ****      }
 514:./i2c/i2c-std.c ****     return I2C_OK;
 866              		.loc 2 514 12
 867 005c 0023     		movs	r3, #0
 868              	.L54:
 515:./i2c/i2c-std.c **** }
 869              		.loc 2 515 1
 870 005e 1846     		mov	r0, r3
 871 0060 1437     		adds	r7, r7, #20
 872              	.LCFI53:
 873              		.cfi_def_cfa_offset 4
 874 0062 BD46     		mov	sp, r7
 875              	.LCFI54:
 876              		.cfi_def_cfa_register 13
 877              		@ sp needed
 878 0064 80BC     		pop	{r7}
 879              	.LCFI55:
 880              		.cfi_restore 7
 881              		.cfi_def_cfa_offset 0
 882 0066 7047     		bx	lr
 883              	.L57:
 884              		.align	2
 885              	.L56:
 886 0068 00000000 		.word	I2Cx_Timeout
 887              		.cfi_endproc
 888              	.LFE40:
 890              		.section	.text.i2c_wait_read_byte_btf_std,"ax",%progbits
 891              		.align	1
 892              		.syntax unified
 893              		.thumb
 894              		.thumb_func
 896              	i2c_wait_read_byte_btf_std:
 897              	.LFB41:
 516:./i2c/i2c-std.c **** //-------------------------------------------------------------------------------------------------
 517:./i2c/i2c-std.c **** /**
 518:./i2c/i2c-std.c ****  * @brief    Waits the until the complete receiption of the current data byte 
 519:./i2c/i2c-std.c ****  * @details  check that  the complete receiption  of the current data byte has completed 
 520:./i2c/i2c-std.c ****  *            by checking the flag I2C_FLAG_BTF
 521:./i2c/i2c-std.c ****  
 522:./i2c/i2c-std.c ****  *           BTF: Byte transfer finished
 523:./i2c/i2c-std.c ****                 0: Data byte transfer not done
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s 			page 47


 524:./i2c/i2c-std.c ****                 1: Data byte transfer succeeded
 525:./i2c/i2c-std.c ****               – Set by hardware when NOSTRETCH=0 and:
 526:./i2c/i2c-std.c ****               – In reception when a new byte is received (including ACK pulse) and DR has not bee
 527:./i2c/i2c-std.c ****               – In transmission when a new byte should be sent and DR has not been written yet (T
 528:./i2c/i2c-std.c ****               – Cleared by software reading SR1 followed by either a read or write in the DR regi
 529:./i2c/i2c-std.c ****               - Cleared by hardware after a start or a stop condition in transmission or when PE=0.
 530:./i2c/i2c-std.c ****           Note: The BTF bit is not set after a NACK reception
 531:./i2c/i2c-std.c **** 
 532:./i2c/i2c-std.c ****             I2C_RX_BTF_ERROR:
 533:./i2c/i2c-std.c ****  *           if a timeout is passed without detecting a RNXE=1 then set an error condition  
 534:./i2c/i2c-std.c ****  * @param I2CX 
 535:./i2c/i2c-std.c ****  * @return uint8_t   
 536:./i2c/i2c-std.c **** */ 
 537:./i2c/i2c-std.c **** uint8_t i2c_wait_read_byte_btf_std(I2C_TypeDef* I2CX)          
 538:./i2c/i2c-std.c **** {
 898              		.loc 2 538 1
 899              		.cfi_startproc
 900              		@ args = 0, pretend = 0, frame = 8
 901              		@ frame_needed = 1, uses_anonymous_args = 0
 902              		@ link register save eliminated.
 903 0000 80B4     		push	{r7}
 904              	.LCFI56:
 905              		.cfi_def_cfa_offset 4
 906              		.cfi_offset 7, -4
 907 0002 83B0     		sub	sp, sp, #12
 908              	.LCFI57:
 909              		.cfi_def_cfa_offset 16
 910 0004 00AF     		add	r7, sp, #0
 911              	.LCFI58:
 912              		.cfi_def_cfa_register 7
 913 0006 7860     		str	r0, [r7, #4]
 539:./i2c/i2c-std.c ****   //! wait the complete of current byte receiption (MASTER-read) using BTF
 540:./i2c/i2c-std.c ****   // EV7_3 -- Wait for BTF , program stop , read data twice
 541:./i2c/i2c-std.c ****     I2Cx_Timeout=I2C_MAX_WAIT_TIME; 
 914              		.loc 2 541 17
 915 0008 0B4B     		ldr	r3, .L62
 916 000a 40F6AC52 		movw	r2, #3500
 917 000e 1A60     		str	r2, [r3]
 542:./i2c/i2c-std.c ****     while(bits_is_clear(I2CX->SR1,I2C_SR1_BTF)) //I2C_GetFlagStatus(I2CX,I2C_FLAG_BTF))
 918              		.loc 2 542 10
 919 0010 05E0     		b	.L59
 920              	.L61:
 543:./i2c/i2c-std.c ****     {
 544:./i2c/i2c-std.c ****       if(I2Cx_Timeout==0)  
 921              		.loc 2 544 22
 922 0012 094B     		ldr	r3, .L62
 923 0014 1B68     		ldr	r3, [r3]
 924              		.loc 2 544 9
 925 0016 002B     		cmp	r3, #0
 926 0018 01D1     		bne	.L59
 545:./i2c/i2c-std.c ****           return I2C_RX_BTF_ERROR;// set the error then exit ::I2C_RX_RXNE_ERROR
 927              		.loc 2 545 18
 928 001a 0823     		movs	r3, #8
 929 001c 07E0     		b	.L60
 930              	.L59:
 542:./i2c/i2c-std.c ****     while(bits_is_clear(I2CX->SR1,I2C_SR1_BTF)) //I2C_GetFlagStatus(I2CX,I2C_FLAG_BTF))
 931              		.loc 2 542 11
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s 			page 48


 932 001e 7B68     		ldr	r3, [r7, #4]
 933 0020 9B8A     		ldrh	r3, [r3, #20]	@ movhi
 934 0022 9BB2     		uxth	r3, r3
 935 0024 03F00403 		and	r3, r3, #4
 542:./i2c/i2c-std.c ****     while(bits_is_clear(I2CX->SR1,I2C_SR1_BTF)) //I2C_GetFlagStatus(I2CX,I2C_FLAG_BTF))
 936              		.loc 2 542 10
 937 0028 002B     		cmp	r3, #0
 938 002a F2D0     		beq	.L61
 546:./i2c/i2c-std.c ****      }
 547:./i2c/i2c-std.c **** 
 548:./i2c/i2c-std.c ****     return I2C_OK;
 939              		.loc 2 548 12
 940 002c 0023     		movs	r3, #0
 941              	.L60:
 549:./i2c/i2c-std.c **** }
 942              		.loc 2 549 1
 943 002e 1846     		mov	r0, r3
 944 0030 0C37     		adds	r7, r7, #12
 945              	.LCFI59:
 946              		.cfi_def_cfa_offset 4
 947 0032 BD46     		mov	sp, r7
 948              	.LCFI60:
 949              		.cfi_def_cfa_register 13
 950              		@ sp needed
 951 0034 80BC     		pop	{r7}
 952              	.LCFI61:
 953              		.cfi_restore 7
 954              		.cfi_def_cfa_offset 0
 955 0036 7047     		bx	lr
 956              	.L63:
 957              		.align	2
 958              	.L62:
 959 0038 00000000 		.word	I2Cx_Timeout
 960              		.cfi_endproc
 961              	.LFE41:
 963              		.section	.text.i2c_start_std,"ax",%progbits
 964              		.align	1
 965              		.syntax unified
 966              		.thumb
 967              		.thumb_func
 969              	i2c_start_std:
 970              	.LFB42:
 550:./i2c/i2c-std.c **** //-------------------------------------------------------------------------------------------------
 551:./i2c/i2c-std.c **** 
 552:./i2c/i2c-std.c **** //********************************************************************************************
 553:./i2c/i2c-std.c **** //
 554:./i2c/i2c-std.c **** //  static methods definitions
 555:./i2c/i2c-std.c **** //  trigger event methods
 556:./i2c/i2c-std.c **** //
 557:./i2c/i2c-std.c **** //********************************************************************************************
 558:./i2c/i2c-std.c **** /**
 559:./i2c/i2c-std.c ****  * @brief initiate start condition
 560:./i2c/i2c-std.c ****  * 
 561:./i2c/i2c-std.c ****  * @param I2CX 
 562:./i2c/i2c-std.c ****  * @return uint8_t 
 563:./i2c/i2c-std.c ****  */
 564:./i2c/i2c-std.c **** uint8_t i2c_start_std(I2C_TypeDef* I2CX)
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s 			page 49


 565:./i2c/i2c-std.c **** { 
 971              		.loc 2 565 1
 972              		.cfi_startproc
 973              		@ args = 0, pretend = 0, frame = 8
 974              		@ frame_needed = 1, uses_anonymous_args = 0
 975 0000 80B5     		push	{r7, lr}
 976              	.LCFI62:
 977              		.cfi_def_cfa_offset 8
 978              		.cfi_offset 7, -8
 979              		.cfi_offset 14, -4
 980 0002 82B0     		sub	sp, sp, #8
 981              	.LCFI63:
 982              		.cfi_def_cfa_offset 16
 983 0004 00AF     		add	r7, sp, #0
 984              	.LCFI64:
 985              		.cfi_def_cfa_register 7
 986 0006 7860     		str	r0, [r7, #4]
 566:./i2c/i2c-std.c ****    // activate PE
 567:./i2c/i2c-std.c ****     //CLEAR_BIT(I2CX->CR1,I2C_CR1_PE);
 568:./i2c/i2c-std.c ****     SET_BIT(I2CX->CR1,I2C_CR1_PE);
 987              		.loc 2 568 5
 988 0008 7B68     		ldr	r3, [r7, #4]
 989 000a 1B88     		ldrh	r3, [r3]	@ movhi
 990 000c 9BB2     		uxth	r3, r3
 991 000e 43F00103 		orr	r3, r3, #1
 992 0012 9AB2     		uxth	r2, r3
 993 0014 7B68     		ldr	r3, [r7, #4]
 994 0016 1A80     		strh	r2, [r3]	@ movhi
 569:./i2c/i2c-std.c ****    // clear all error flags
 570:./i2c/i2c-std.c ****     CLEAR_BIT(I2CX->SR1,I2C_SR1_BERR|I2C_SR1_ARLO|I2C_SR1_AF|I2C_SR1_OVR);
 995              		.loc 2 570 5
 996 0018 7B68     		ldr	r3, [r7, #4]
 997 001a 9B8A     		ldrh	r3, [r3, #20]	@ movhi
 998 001c 9BB2     		uxth	r3, r3
 999 001e 23F47063 		bic	r3, r3, #3840
 1000 0022 9AB2     		uxth	r2, r3
 1001 0024 7B68     		ldr	r3, [r7, #4]
 1002 0026 9A82     		strh	r2, [r3, #20]	@ movhi
 571:./i2c/i2c-std.c ****    // Disable Pos
 572:./i2c/i2c-std.c ****    CLEAR_BIT(I2CX->CR1, I2C_CR1_POS);
 1003              		.loc 2 572 4
 1004 0028 7B68     		ldr	r3, [r7, #4]
 1005 002a 1B88     		ldrh	r3, [r3]	@ movhi
 1006 002c 9BB2     		uxth	r3, r3
 1007 002e 23F40063 		bic	r3, r3, #2048
 1008 0032 9AB2     		uxth	r2, r3
 1009 0034 7B68     		ldr	r3, [r7, #4]
 1010 0036 1A80     		strh	r2, [r3]	@ movhi
 573:./i2c/i2c-std.c ****    // Enable acknowledgment
 574:./i2c/i2c-std.c ****    SET_BIT(I2CX->CR1,I2C_CR1_ACK);
 1011              		.loc 2 574 4
 1012 0038 7B68     		ldr	r3, [r7, #4]
 1013 003a 1B88     		ldrh	r3, [r3]	@ movhi
 1014 003c 9BB2     		uxth	r3, r3
 1015 003e 43F48063 		orr	r3, r3, #1024
 1016 0042 9AB2     		uxth	r2, r3
 1017 0044 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s 			page 50


 1018 0046 1A80     		strh	r2, [r3]	@ movhi
 575:./i2c/i2c-std.c ****    // send the start condition 
 576:./i2c/i2c-std.c ****    SET_BIT(I2CX->CR1,I2C_CR1_START); //I2C_GenerateSTART(I2CX,ENABLE);
 1019              		.loc 2 576 4
 1020 0048 7B68     		ldr	r3, [r7, #4]
 1021 004a 1B88     		ldrh	r3, [r3]	@ movhi
 1022 004c 9BB2     		uxth	r3, r3
 1023 004e 43F48073 		orr	r3, r3, #256
 1024 0052 9AB2     		uxth	r2, r3
 1025 0054 7B68     		ldr	r3, [r7, #4]
 1026 0056 1A80     		strh	r2, [r3]	@ movhi
 577:./i2c/i2c-std.c ****   //wait the event I2C_EVENT_MASTER_MODE_SELECT where BUSY, MSL and SB flag are set  
 578:./i2c/i2c-std.c ****   return i2c_wait_start_event_std(I2CX);
 1027              		.loc 2 578 10
 1028 0058 7868     		ldr	r0, [r7, #4]
 1029 005a FFF7FEFF 		bl	i2c_wait_start_event_std
 1030 005e 0346     		mov	r3, r0
 579:./i2c/i2c-std.c **** }					        
 1031              		.loc 2 579 1
 1032 0060 1846     		mov	r0, r3
 1033 0062 0837     		adds	r7, r7, #8
 1034              	.LCFI65:
 1035              		.cfi_def_cfa_offset 8
 1036 0064 BD46     		mov	sp, r7
 1037              	.LCFI66:
 1038              		.cfi_def_cfa_register 13
 1039              		@ sp needed
 1040 0066 80BD     		pop	{r7, pc}
 1041              		.cfi_endproc
 1042              	.LFE42:
 1044              		.section	.text.i2c_stop_std,"ax",%progbits
 1045              		.align	1
 1046              		.syntax unified
 1047              		.thumb
 1048              		.thumb_func
 1050              	i2c_stop_std:
 1051              	.LFB43:
 580:./i2c/i2c-std.c **** //-------------------------------------------------------------------------------------------------
 581:./i2c/i2c-std.c **** /**
 582:./i2c/i2c-std.c ****  * @brief  initiate stop condition
 583:./i2c/i2c-std.c ****  * 
 584:./i2c/i2c-std.c ****  * @param I2CX 
 585:./i2c/i2c-std.c ****  * @return uint8_t 
 586:./i2c/i2c-std.c ****  */
 587:./i2c/i2c-std.c **** uint8_t i2c_stop_std(I2C_TypeDef* I2CX)
 588:./i2c/i2c-std.c **** {
 1052              		.loc 2 588 1
 1053              		.cfi_startproc
 1054              		@ args = 0, pretend = 0, frame = 8
 1055              		@ frame_needed = 1, uses_anonymous_args = 0
 1056 0000 80B5     		push	{r7, lr}
 1057              	.LCFI67:
 1058              		.cfi_def_cfa_offset 8
 1059              		.cfi_offset 7, -8
 1060              		.cfi_offset 14, -4
 1061 0002 82B0     		sub	sp, sp, #8
 1062              	.LCFI68:
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s 			page 51


 1063              		.cfi_def_cfa_offset 16
 1064 0004 00AF     		add	r7, sp, #0
 1065              	.LCFI69:
 1066              		.cfi_def_cfa_register 7
 1067 0006 7860     		str	r0, [r7, #4]
 589:./i2c/i2c-std.c ****     // generate the stop condition 
 590:./i2c/i2c-std.c ****       SET_BIT(I2CX->CR1,I2C_CR1_STOP); //I2C_GenerateSTOP(I2CX,ENABLE);
 1068              		.loc 2 590 7
 1069 0008 7B68     		ldr	r3, [r7, #4]
 1070 000a 1B88     		ldrh	r3, [r3]	@ movhi
 1071 000c 9BB2     		uxth	r3, r3
 1072 000e 43F40073 		orr	r3, r3, #512
 1073 0012 9AB2     		uxth	r2, r3
 1074 0014 7B68     		ldr	r3, [r7, #4]
 1075 0016 1A80     		strh	r2, [r3]	@ movhi
 591:./i2c/i2c-std.c ****     // wait until stop condition is complete STOPF is set
 592:./i2c/i2c-std.c ****      return i2c_wait_stop_event_std(I2CX);
 1076              		.loc 2 592 13
 1077 0018 7868     		ldr	r0, [r7, #4]
 1078 001a FFF7FEFF 		bl	i2c_wait_stop_event_std
 1079 001e 0346     		mov	r3, r0
 593:./i2c/i2c-std.c **** }				
 1080              		.loc 2 593 1
 1081 0020 1846     		mov	r0, r3
 1082 0022 0837     		adds	r7, r7, #8
 1083              	.LCFI70:
 1084              		.cfi_def_cfa_offset 8
 1085 0024 BD46     		mov	sp, r7
 1086              	.LCFI71:
 1087              		.cfi_def_cfa_register 13
 1088              		@ sp needed
 1089 0026 80BD     		pop	{r7, pc}
 1090              		.cfi_endproc
 1091              	.LFE43:
 1093              		.section	.text.i2c_send_7bit_slave_address_wr_std,"ax",%progbits
 1094              		.align	1
 1095              		.syntax unified
 1096              		.thumb
 1097              		.thumb_func
 1099              	i2c_send_7bit_slave_address_wr_std:
 1100              	.LFB44:
 594:./i2c/i2c-std.c **** //-------------------------------------------------------------------------------------------------
 595:./i2c/i2c-std.c **** /**
 596:./i2c/i2c-std.c ****  * @brief send a slave with write operation via I2C bus
 597:./i2c/i2c-std.c ****  * 
 598:./i2c/i2c-std.c ****  * @param I2CX 
 599:./i2c/i2c-std.c ****  * @param  slave_address
 600:./i2c/i2c-std.c ****  * @return * uint8_t 
 601:./i2c/i2c-std.c ****  */
 602:./i2c/i2c-std.c **** uint8_t i2c_send_7bit_slave_address_wr_std(I2C_TypeDef* I2CX,uint8_t slave_address)
 603:./i2c/i2c-std.c **** {
 1101              		.loc 2 603 1
 1102              		.cfi_startproc
 1103              		@ args = 0, pretend = 0, frame = 16
 1104              		@ frame_needed = 1, uses_anonymous_args = 0
 1105 0000 80B5     		push	{r7, lr}
 1106              	.LCFI72:
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s 			page 52


 1107              		.cfi_def_cfa_offset 8
 1108              		.cfi_offset 7, -8
 1109              		.cfi_offset 14, -4
 1110 0002 84B0     		sub	sp, sp, #16
 1111              	.LCFI73:
 1112              		.cfi_def_cfa_offset 24
 1113 0004 00AF     		add	r7, sp, #0
 1114              	.LCFI74:
 1115              		.cfi_def_cfa_register 7
 1116 0006 7860     		str	r0, [r7, #4]
 1117 0008 0B46     		mov	r3, r1
 1118 000a FB70     		strb	r3, [r7, #3]
 604:./i2c/i2c-std.c ****       //(void)I2CX->SR1;
 605:./i2c/i2c-std.c ****     uint8_t error=0;
 1119              		.loc 2 605 13
 1120 000c 0023     		movs	r3, #0
 1121 000e FB73     		strb	r3, [r7, #15]
 606:./i2c/i2c-std.c ****     
 607:./i2c/i2c-std.c ****     /* Send slave address */
 608:./i2c/i2c-std.c ****      //I2CX->DR = slave_address & 0xfe;
 609:./i2c/i2c-std.c ****      I2CX->DR = I2C_7BIT_ADD_WRITE(slave_address); //I2C_Send7bitAddress(I2CX,slave_address,I2C_Dir
 1122              		.loc 2 609 17
 1123 0010 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1124 0012 9BB2     		uxth	r3, r3
 1125 0014 03F0FE03 		and	r3, r3, #254
 1126 0018 9AB2     		uxth	r2, r3
 1127              		.loc 2 609 15
 1128 001a 7B68     		ldr	r3, [r7, #4]
 1129 001c 1A82     		strh	r2, [r3, #16]	@ movhi
 610:./i2c/i2c-std.c ****    
 611:./i2c/i2c-std.c ****     // wait until the slave acknowledge  BUSY, MSL, ADDR, TXE and TRA flags are all set 
 612:./i2c/i2c-std.c ****     error=i2c_wait_7bit_slave_address_wr_std(I2CX);
 1130              		.loc 2 612 11
 1131 001e 7868     		ldr	r0, [r7, #4]
 1132 0020 FFF7FEFF 		bl	i2c_wait_7bit_slave_address_wr_std
 1133 0024 0346     		mov	r3, r0
 1134 0026 FB73     		strb	r3, [r7, #15]
 613:./i2c/i2c-std.c ****     
 614:./i2c/i2c-std.c ****     if(error==I2C_OK)
 1135              		.loc 2 614 7
 1136 0028 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1137 002a 002B     		cmp	r3, #0
 1138 002c 0FD1     		bne	.L69
 1139              	.LBB4:
 615:./i2c/i2c-std.c ****     {
 616:./i2c/i2c-std.c ****       /* Clear ADDR flag */
 617:./i2c/i2c-std.c ****        _I2C_CLEAR_ADDRFLAG(I2CX);
 1140              		.loc 2 617 8
 1141 002e 0023     		movs	r3, #0
 1142 0030 BB60     		str	r3, [r7, #8]
 1143 0032 7B68     		ldr	r3, [r7, #4]
 1144 0034 9B8A     		ldrh	r3, [r3, #20]	@ movhi
 1145 0036 9BB2     		uxth	r3, r3
 1146 0038 BB60     		str	r3, [r7, #8]
 1147 003a 7B68     		ldr	r3, [r7, #4]
 1148 003c 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 1149 003e 9BB2     		uxth	r3, r3
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s 			page 53


 1150 0040 BB60     		str	r3, [r7, #8]
 1151 0042 BB68     		ldr	r3, [r7, #8]
 1152              	.LBE4:
 618:./i2c/i2c-std.c **** 
 619:./i2c/i2c-std.c ****         /* Wait until TXE flag is set */
 620:./i2c/i2c-std.c ****       error=i2c_wait_write_byte_txe_std(I2CX);
 1153              		.loc 2 620 13
 1154 0044 7868     		ldr	r0, [r7, #4]
 1155 0046 FFF7FEFF 		bl	i2c_wait_write_byte_txe_std
 1156 004a 0346     		mov	r3, r0
 1157 004c FB73     		strb	r3, [r7, #15]
 1158              	.L69:
 621:./i2c/i2c-std.c ****  
 622:./i2c/i2c-std.c ****     }
 623:./i2c/i2c-std.c **** 
 624:./i2c/i2c-std.c ****     return error;    
 1159              		.loc 2 624 12
 1160 004e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 625:./i2c/i2c-std.c **** }
 1161              		.loc 2 625 1
 1162 0050 1846     		mov	r0, r3
 1163 0052 1037     		adds	r7, r7, #16
 1164              	.LCFI75:
 1165              		.cfi_def_cfa_offset 8
 1166 0054 BD46     		mov	sp, r7
 1167              	.LCFI76:
 1168              		.cfi_def_cfa_register 13
 1169              		@ sp needed
 1170 0056 80BD     		pop	{r7, pc}
 1171              		.cfi_endproc
 1172              	.LFE44:
 1174              		.section	.text.i2c_send_7bit_slave_address_rd_std,"ax",%progbits
 1175              		.align	1
 1176              		.syntax unified
 1177              		.thumb
 1178              		.thumb_func
 1180              	i2c_send_7bit_slave_address_rd_std:
 1181              	.LFB45:
 626:./i2c/i2c-std.c **** //-------------------------------------------------------------------------------------------------
 627:./i2c/i2c-std.c **** /**
 628:./i2c/i2c-std.c ****  * @brief send a slave with read operation via I2C bus
 629:./i2c/i2c-std.c ****  * 
 630:./i2c/i2c-std.c ****  * @param I2CX 
 631:./i2c/i2c-std.c ****  * @param  slave_address
 632:./i2c/i2c-std.c ****  * @return uint8_t 
 633:./i2c/i2c-std.c ****  */
 634:./i2c/i2c-std.c **** uint8_t i2c_send_7bit_slave_address_rd_std(I2C_TypeDef* I2CX,uint8_t slave_address)	
 635:./i2c/i2c-std.c **** { 
 1182              		.loc 2 635 1
 1183              		.cfi_startproc
 1184              		@ args = 0, pretend = 0, frame = 16
 1185              		@ frame_needed = 1, uses_anonymous_args = 0
 1186 0000 80B5     		push	{r7, lr}
 1187              	.LCFI77:
 1188              		.cfi_def_cfa_offset 8
 1189              		.cfi_offset 7, -8
 1190              		.cfi_offset 14, -4
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s 			page 54


 1191 0002 84B0     		sub	sp, sp, #16
 1192              	.LCFI78:
 1193              		.cfi_def_cfa_offset 24
 1194 0004 00AF     		add	r7, sp, #0
 1195              	.LCFI79:
 1196              		.cfi_def_cfa_register 7
 1197 0006 7860     		str	r0, [r7, #4]
 1198 0008 0B46     		mov	r3, r1
 1199 000a FB70     		strb	r3, [r7, #3]
 636:./i2c/i2c-std.c ****     uint8_t error=I2C_OK;
 1200              		.loc 2 636 13
 1201 000c 0023     		movs	r3, #0
 1202 000e FB73     		strb	r3, [r7, #15]
 637:./i2c/i2c-std.c ****     //(void)I2CX->SR1;
 638:./i2c/i2c-std.c ****        //I2CX->DR = slave_address | 0x01;
 639:./i2c/i2c-std.c ****      I2CX->DR = I2C_7BIT_ADD_READ(slave_address); //I2C_Send7bitAddress(I2CX,slave_address,I2C_Dire
 1203              		.loc 2 639 17
 1204 0010 FB78     		ldrb	r3, [r7, #3]
 1205 0012 43F00103 		orr	r3, r3, #1
 1206 0016 DBB2     		uxtb	r3, r3
 1207 0018 9AB2     		uxth	r2, r3
 1208              		.loc 2 639 15
 1209 001a 7B68     		ldr	r3, [r7, #4]
 1210 001c 1A82     		strh	r2, [r3, #16]	@ movhi
 640:./i2c/i2c-std.c ****      
 641:./i2c/i2c-std.c ****      // wait until the slave acknowledge  BUSY, MSL, ADDR flags are all set 
 642:./i2c/i2c-std.c ****      error=i2c_wait_7bit_slave_address_rd_std(I2CX);
 1211              		.loc 2 642 12
 1212 001e 7868     		ldr	r0, [r7, #4]
 1213 0020 FFF7FEFF 		bl	i2c_wait_7bit_slave_address_rd_std
 1214 0024 0346     		mov	r3, r0
 1215 0026 FB73     		strb	r3, [r7, #15]
 643:./i2c/i2c-std.c ****      return error;
 1216              		.loc 2 643 13
 1217 0028 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 644:./i2c/i2c-std.c **** }
 1218              		.loc 2 644 1
 1219 002a 1846     		mov	r0, r3
 1220 002c 1037     		adds	r7, r7, #16
 1221              	.LCFI80:
 1222              		.cfi_def_cfa_offset 8
 1223 002e BD46     		mov	sp, r7
 1224              	.LCFI81:
 1225              		.cfi_def_cfa_register 13
 1226              		@ sp needed
 1227 0030 80BD     		pop	{r7, pc}
 1228              		.cfi_endproc
 1229              	.LFE45:
 1231              		.section	.text.i2c_write_byte_std,"ax",%progbits
 1232              		.align	1
 1233              		.syntax unified
 1234              		.thumb
 1235              		.thumb_func
 1237              	i2c_write_byte_std:
 1238              	.LFB46:
 645:./i2c/i2c-std.c **** //-------------------------------------------------------------------------------------------------
 646:./i2c/i2c-std.c **** /**
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s 			page 55


 647:./i2c/i2c-std.c ****  * @brief write a byte via TWI/I2C bus to the slave
 648:./i2c/i2c-std.c ****  * 
 649:./i2c/i2c-std.c ****  * @param I2CX 
 650:./i2c/i2c-std.c ****  * @param data 
 651:./i2c/i2c-std.c ****  * @return uint8_t 
 652:./i2c/i2c-std.c ****  */
 653:./i2c/i2c-std.c **** uint8_t i2c_write_byte_std(I2C_TypeDef* I2CX,uint8_t data)		        
 654:./i2c/i2c-std.c **** {
 1239              		.loc 2 654 1
 1240              		.cfi_startproc
 1241              		@ args = 0, pretend = 0, frame = 16
 1242              		@ frame_needed = 1, uses_anonymous_args = 0
 1243 0000 80B5     		push	{r7, lr}
 1244              	.LCFI82:
 1245              		.cfi_def_cfa_offset 8
 1246              		.cfi_offset 7, -8
 1247              		.cfi_offset 14, -4
 1248 0002 84B0     		sub	sp, sp, #16
 1249              	.LCFI83:
 1250              		.cfi_def_cfa_offset 24
 1251 0004 00AF     		add	r7, sp, #0
 1252              	.LCFI84:
 1253              		.cfi_def_cfa_register 7
 1254 0006 7860     		str	r0, [r7, #4]
 1255 0008 0B46     		mov	r3, r1
 1256 000a FB70     		strb	r3, [r7, #3]
 655:./i2c/i2c-std.c ****     uint8_t error=0;
 1257              		.loc 2 655 13
 1258 000c 0023     		movs	r3, #0
 1259 000e FB73     		strb	r3, [r7, #15]
 656:./i2c/i2c-std.c ****     //Ev6: send the byte
 657:./i2c/i2c-std.c ****       I2CX->DR=data;///I2C_SendData(I2CX,data);    
 1260              		.loc 2 657 15
 1261 0010 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1262 0012 9AB2     		uxth	r2, r3
 1263 0014 7B68     		ldr	r3, [r7, #4]
 1264 0016 1A82     		strh	r2, [r3, #16]	@ movhi
 658:./i2c/i2c-std.c ****     //Wait until txe is set
 659:./i2c/i2c-std.c ****     error=i2c_wait_write_byte_txe_std(I2CX);
 1265              		.loc 2 659 11
 1266 0018 7868     		ldr	r0, [r7, #4]
 1267 001a FFF7FEFF 		bl	i2c_wait_write_byte_txe_std
 1268 001e 0346     		mov	r3, r0
 1269 0020 FB73     		strb	r3, [r7, #15]
 660:./i2c/i2c-std.c ****     return error;
 1270              		.loc 2 660 12
 1271 0022 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 661:./i2c/i2c-std.c **** }
 1272              		.loc 2 661 1
 1273 0024 1846     		mov	r0, r3
 1274 0026 1037     		adds	r7, r7, #16
 1275              	.LCFI85:
 1276              		.cfi_def_cfa_offset 8
 1277 0028 BD46     		mov	sp, r7
 1278              	.LCFI86:
 1279              		.cfi_def_cfa_register 13
 1280              		@ sp needed
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s 			page 56


 1281 002a 80BD     		pop	{r7, pc}
 1282              		.cfi_endproc
 1283              	.LFE46:
 1285              		.section	.text.i2c_write_nbyte_std,"ax",%progbits
 1286              		.align	1
 1287              		.syntax unified
 1288              		.thumb
 1289              		.thumb_func
 1291              	i2c_write_nbyte_std:
 1292              	.LFB47:
 662:./i2c/i2c-std.c **** //-------------------------------------------------------------------------------------------------
 663:./i2c/i2c-std.c **** /**
 664:./i2c/i2c-std.c ****  * @brief write an array of n byte via TWI/I2C bus to the slave
 665:./i2c/i2c-std.c ****  * 
 666:./i2c/i2c-std.c ****  * @param I2CX 
 667:./i2c/i2c-std.c ****  * @param data 
 668:./i2c/i2c-std.c ****  * @return uint8_t 
 669:./i2c/i2c-std.c ****  */
 670:./i2c/i2c-std.c **** uint8_t i2c_write_nbyte_std(I2C_TypeDef* I2CX, uint8_t *buf, size_t n)		        
 671:./i2c/i2c-std.c **** {
 1293              		.loc 2 671 1
 1294              		.cfi_startproc
 1295              		@ args = 0, pretend = 0, frame = 24
 1296              		@ frame_needed = 1, uses_anonymous_args = 0
 1297 0000 80B5     		push	{r7, lr}
 1298              	.LCFI87:
 1299              		.cfi_def_cfa_offset 8
 1300              		.cfi_offset 7, -8
 1301              		.cfi_offset 14, -4
 1302 0002 86B0     		sub	sp, sp, #24
 1303              	.LCFI88:
 1304              		.cfi_def_cfa_offset 32
 1305 0004 00AF     		add	r7, sp, #0
 1306              	.LCFI89:
 1307              		.cfi_def_cfa_register 7
 1308 0006 F860     		str	r0, [r7, #12]
 1309 0008 B960     		str	r1, [r7, #8]
 1310 000a 7A60     		str	r2, [r7, #4]
 672:./i2c/i2c-std.c ****     uint16_t i=0;
 1311              		.loc 2 672 14
 1312 000c 0023     		movs	r3, #0
 1313 000e FB82     		strh	r3, [r7, #22]	@ movhi
 673:./i2c/i2c-std.c ****     uint8_t error=0;
 1314              		.loc 2 673 13
 1315 0010 0023     		movs	r3, #0
 1316 0012 7B75     		strb	r3, [r7, #21]
 674:./i2c/i2c-std.c ****     //Ev6: send the byte
 675:./i2c/i2c-std.c ****     for(i=0;i<n;i++)
 1317              		.loc 2 675 10
 1318 0014 0023     		movs	r3, #0
 1319 0016 FB82     		strh	r3, [r7, #22]	@ movhi
 1320              		.loc 2 675 5
 1321 0018 11E0     		b	.L76
 1322              	.L79:
 676:./i2c/i2c-std.c ****     {
 677:./i2c/i2c-std.c ****         error=i2c_write_byte_std(I2CX,buf[i]);
 1323              		.loc 2 677 42
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s 			page 57


 1324 001a FB8A     		ldrh	r3, [r7, #22]
 1325 001c BA68     		ldr	r2, [r7, #8]
 1326 001e 1344     		add	r3, r3, r2
 1327              		.loc 2 677 15
 1328 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1329 0022 1946     		mov	r1, r3
 1330 0024 F868     		ldr	r0, [r7, #12]
 1331 0026 FFF7FEFF 		bl	i2c_write_byte_std
 1332 002a 0346     		mov	r3, r0
 1333 002c 7B75     		strb	r3, [r7, #21]
 678:./i2c/i2c-std.c ****         if(error) 
 1334              		.loc 2 678 11
 1335 002e 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 1336 0030 002B     		cmp	r3, #0
 1337 0032 01D0     		beq	.L77
 679:./i2c/i2c-std.c ****           return error;
 1338              		.loc 2 679 18
 1339 0034 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 1340 0036 07E0     		b	.L78
 1341              	.L77:
 675:./i2c/i2c-std.c ****     {
 1342              		.loc 2 675 18 discriminator 2
 1343 0038 FB8A     		ldrh	r3, [r7, #22]
 1344 003a 0133     		adds	r3, r3, #1
 1345 003c FB82     		strh	r3, [r7, #22]	@ movhi
 1346              	.L76:
 675:./i2c/i2c-std.c ****     {
 1347              		.loc 2 675 14 discriminator 1
 1348 003e FB8A     		ldrh	r3, [r7, #22]
 675:./i2c/i2c-std.c ****     {
 1349              		.loc 2 675 5 discriminator 1
 1350 0040 7A68     		ldr	r2, [r7, #4]
 1351 0042 9A42     		cmp	r2, r3
 1352 0044 E9D8     		bhi	.L79
 680:./i2c/i2c-std.c ****     }
 681:./i2c/i2c-std.c ****     // no error detected just return 0
 682:./i2c/i2c-std.c ****     return I2C_OK;
 1353              		.loc 2 682 12
 1354 0046 0023     		movs	r3, #0
 1355              	.L78:
 683:./i2c/i2c-std.c **** }
 1356              		.loc 2 683 1
 1357 0048 1846     		mov	r0, r3
 1358 004a 1837     		adds	r7, r7, #24
 1359              	.LCFI90:
 1360              		.cfi_def_cfa_offset 8
 1361 004c BD46     		mov	sp, r7
 1362              	.LCFI91:
 1363              		.cfi_def_cfa_register 13
 1364              		@ sp needed
 1365 004e 80BD     		pop	{r7, pc}
 1366              		.cfi_endproc
 1367              	.LFE47:
 1369              		.section	.text.i2c_read_lastbyte_std,"ax",%progbits
 1370              		.align	1
 1371              		.syntax unified
 1372              		.thumb
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s 			page 58


 1373              		.thumb_func
 1375              	i2c_read_lastbyte_std:
 1376              	.LFB48:
 684:./i2c/i2c-std.c **** //-------------------------------------------------------------------------------------------------
 685:./i2c/i2c-std.c **** /**
 686:./i2c/i2c-std.c ****  * @brief 
 687:./i2c/i2c-std.c ****  *      EV7_3: BTF = 1, program STOP = 1, read DR twice (Read Data1 and Data2) just after programmi
 688:./i2c/i2c-std.c ****  * @param I2CX 
 689:./i2c/i2c-std.c ****  * @param data 
 690:./i2c/i2c-std.c ****  * @param ack 
 691:./i2c/i2c-std.c ****  * @return uint8_t 
 692:./i2c/i2c-std.c ****  */
 693:./i2c/i2c-std.c **** uint8_t i2c_read_lastbyte_std(I2C_TypeDef* I2CX,uint8_t *data)
 694:./i2c/i2c-std.c **** {
 1377              		.loc 2 694 1
 1378              		.cfi_startproc
 1379              		@ args = 0, pretend = 0, frame = 16
 1380              		@ frame_needed = 1, uses_anonymous_args = 0
 1381 0000 80B5     		push	{r7, lr}
 1382              	.LCFI92:
 1383              		.cfi_def_cfa_offset 8
 1384              		.cfi_offset 7, -8
 1385              		.cfi_offset 14, -4
 1386 0002 84B0     		sub	sp, sp, #16
 1387              	.LCFI93:
 1388              		.cfi_def_cfa_offset 24
 1389 0004 00AF     		add	r7, sp, #0
 1390              	.LCFI94:
 1391              		.cfi_def_cfa_register 7
 1392 0006 7860     		str	r0, [r7, #4]
 1393 0008 3960     		str	r1, [r7]
 695:./i2c/i2c-std.c ****    uint8_t error=I2C_OK;
 1394              		.loc 2 695 12
 1395 000a 0023     		movs	r3, #0
 1396 000c FB73     		strb	r3, [r7, #15]
 696:./i2c/i2c-std.c ****    // clear POS flag
 697:./i2c/i2c-std.c ****      CLEAR_BIT(I2CX->CR1,I2C_CR1_POS); //I2C_NACKPositionConfig(I2CX , I2C_NACKPosition_Current);
 1397              		.loc 2 697 6
 1398 000e 7B68     		ldr	r3, [r7, #4]
 1399 0010 1B88     		ldrh	r3, [r3]	@ movhi
 1400 0012 9BB2     		uxth	r3, r3
 1401 0014 23F40063 		bic	r3, r3, #2048
 1402 0018 9AB2     		uxth	r2, r3
 1403 001a 7B68     		ldr	r3, [r7, #4]
 1404 001c 1A80     		strh	r2, [r3]	@ movhi
 698:./i2c/i2c-std.c **** 
 699:./i2c/i2c-std.c ****     /* Disable Acknowledge */
 700:./i2c/i2c-std.c ****      CLEAR_BIT(I2CX->CR1,I2C_CR1_ACK); //I2C_AcknowledgeConfig(I2CX , DISABLE);
 1405              		.loc 2 700 6
 1406 001e 7B68     		ldr	r3, [r7, #4]
 1407 0020 1B88     		ldrh	r3, [r3]	@ movhi
 1408 0022 9BB2     		uxth	r3, r3
 1409 0024 23F48063 		bic	r3, r3, #1024
 1410 0028 9AB2     		uxth	r2, r3
 1411 002a 7B68     		ldr	r3, [r7, #4]
 1412 002c 1A80     		strh	r2, [r3]	@ movhi
 701:./i2c/i2c-std.c **** 
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s 			page 59


 702:./i2c/i2c-std.c **** // EV6_3 -- must be atomic -- Clear ADDR (by reading SR1 then SR2), generate STOP  
 703:./i2c/i2c-std.c ****   /* Disable all active IRQs around ADDR clearing and STOP programming because the EV6_3
 704:./i2c/i2c-std.c ****     software sequence must complete before the current byte end of transfer */
 705:./i2c/i2c-std.c ****   __disable_irq ();
 1413              		.loc 2 705 3
 1414 002e FFF7FEFF 		bl	__disable_irq
 1415              	.LBB5:
 706:./i2c/i2c-std.c ****     _I2C_CLEAR_ADDRFLAG(I2CX);                /* Clear ADDR flag */ // (void) I2CX->SR1; (void) I2C
 1416              		.loc 2 706 5
 1417 0032 0023     		movs	r3, #0
 1418 0034 BB60     		str	r3, [r7, #8]
 1419 0036 7B68     		ldr	r3, [r7, #4]
 1420 0038 9B8A     		ldrh	r3, [r3, #20]	@ movhi
 1421 003a 9BB2     		uxth	r3, r3
 1422 003c BB60     		str	r3, [r7, #8]
 1423 003e 7B68     		ldr	r3, [r7, #4]
 1424 0040 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 1425 0042 9BB2     		uxth	r3, r3
 1426 0044 BB60     		str	r3, [r7, #8]
 1427 0046 BB68     		ldr	r3, [r7, #8]
 1428              	.LBE5:
 707:./i2c/i2c-std.c ****      SET_BIT(I2CX->CR1,I2C_CR1_STOP);        /* Generate Stop */  //I2C_GenerateSTOP(I2CX ,ENABLE);
 1429              		.loc 2 707 6
 1430 0048 7B68     		ldr	r3, [r7, #4]
 1431 004a 1B88     		ldrh	r3, [r3]	@ movhi
 1432 004c 9BB2     		uxth	r3, r3
 1433 004e 43F40073 		orr	r3, r3, #512
 1434 0052 9AB2     		uxth	r2, r3
 1435 0054 7B68     		ldr	r3, [r7, #4]
 1436 0056 1A80     		strh	r2, [r3]	@ movhi
 708:./i2c/i2c-std.c ****  __enable_irq ();
 1437              		.loc 2 708 2
 1438 0058 FFF7FEFF 		bl	__enable_irq
 709:./i2c/i2c-std.c **** 
 710:./i2c/i2c-std.c ****   // Receive data EV7
 711:./i2c/i2c-std.c ****   error=i2c_wait_read_byte_rxne_std(I2CX);
 1439              		.loc 2 711 9
 1440 005c 7868     		ldr	r0, [r7, #4]
 1441 005e FFF7FEFF 		bl	i2c_wait_read_byte_rxne_std
 1442 0062 0346     		mov	r3, r0
 1443 0064 FB73     		strb	r3, [r7, #15]
 712:./i2c/i2c-std.c ****   if(error!=I2C_OK)
 1444              		.loc 2 712 5
 1445 0066 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1446 0068 002B     		cmp	r3, #0
 1447 006a 01D0     		beq	.L81
 713:./i2c/i2c-std.c ****     return error;
 1448              		.loc 2 713 12
 1449 006c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1450 006e 06E0     		b	.L82
 1451              	.L81:
 714:./i2c/i2c-std.c **** 
 715:./i2c/i2c-std.c ****    *data = I2CX->DR;
 1452              		.loc 2 715 16
 1453 0070 7B68     		ldr	r3, [r7, #4]
 1454 0072 1B8A     		ldrh	r3, [r3, #16]	@ movhi
 1455 0074 9BB2     		uxth	r3, r3
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s 			page 60


 1456              		.loc 2 715 10
 1457 0076 DAB2     		uxtb	r2, r3
 1458 0078 3B68     		ldr	r3, [r7]
 1459 007a 1A70     		strb	r2, [r3]
 716:./i2c/i2c-std.c ****    //uart_print(USART1,"I2C_DR:");
 717:./i2c/i2c-std.c ****    //uart_print_integer(USART1,*data,16);
 718:./i2c/i2c-std.c ****    //uart_print(USART1,"\r\n");
 719:./i2c/i2c-std.c **** 
 720:./i2c/i2c-std.c ****   return I2C_OK;
 1460              		.loc 2 720 10
 1461 007c 0023     		movs	r3, #0
 1462              	.L82:
 721:./i2c/i2c-std.c **** }
 1463              		.loc 2 721 1
 1464 007e 1846     		mov	r0, r3
 1465 0080 1037     		adds	r7, r7, #16
 1466              	.LCFI95:
 1467              		.cfi_def_cfa_offset 8
 1468 0082 BD46     		mov	sp, r7
 1469              	.LCFI96:
 1470              		.cfi_def_cfa_register 13
 1471              		@ sp needed
 1472 0084 80BD     		pop	{r7, pc}
 1473              		.cfi_endproc
 1474              	.LFE48:
 1476              		.section	.text.i2c_read_last2byte_std,"ax",%progbits
 1477              		.align	1
 1478              		.syntax unified
 1479              		.thumb
 1480              		.thumb_func
 1482              	i2c_read_last2byte_std:
 1483              	.LFB49:
 722:./i2c/i2c-std.c **** //-------------------------------------------------------------------------------------------------
 723:./i2c/i2c-std.c **** /**
 724:./i2c/i2c-std.c ****  * @brief 
 725:./i2c/i2c-std.c ****  * 
 726:./i2c/i2c-std.c ****  * @param I2CX 
 727:./i2c/i2c-std.c ****  * @param data 
 728:./i2c/i2c-std.c ****  * @param ack 
 729:./i2c/i2c-std.c ****  * @return uint8_t 
 730:./i2c/i2c-std.c ****  */
 731:./i2c/i2c-std.c **** uint8_t i2c_read_last2byte_std(I2C_TypeDef* I2CX,uint8_t * buf)
 732:./i2c/i2c-std.c **** {
 1484              		.loc 2 732 1
 1485              		.cfi_startproc
 1486              		@ args = 0, pretend = 0, frame = 16
 1487              		@ frame_needed = 1, uses_anonymous_args = 0
 1488 0000 80B5     		push	{r7, lr}
 1489              	.LCFI97:
 1490              		.cfi_def_cfa_offset 8
 1491              		.cfi_offset 7, -8
 1492              		.cfi_offset 14, -4
 1493 0002 84B0     		sub	sp, sp, #16
 1494              	.LCFI98:
 1495              		.cfi_def_cfa_offset 24
 1496 0004 00AF     		add	r7, sp, #0
 1497              	.LCFI99:
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s 			page 61


 1498              		.cfi_def_cfa_register 7
 1499 0006 7860     		str	r0, [r7, #4]
 1500 0008 3960     		str	r1, [r7]
 733:./i2c/i2c-std.c ****   uint8_t error=I2C_OK;
 1501              		.loc 2 733 11
 1502 000a 0023     		movs	r3, #0
 1503 000c FB73     		strb	r3, [r7, #15]
 734:./i2c/i2c-std.c ****   /* Enable Pos */
 735:./i2c/i2c-std.c ****   SET_BIT(I2CX->CR1, I2C_CR1_POS); //I2CX->CR1|=I2C_CR1_POS;   //I2C_NACKPositionConfig(I2CX , I2C_
 1504              		.loc 2 735 3
 1505 000e 7B68     		ldr	r3, [r7, #4]
 1506 0010 1B88     		ldrh	r3, [r3]	@ movhi
 1507 0012 9BB2     		uxth	r3, r3
 1508 0014 43F40063 		orr	r3, r3, #2048
 1509 0018 9AB2     		uxth	r2, r3
 1510 001a 7B68     		ldr	r3, [r7, #4]
 1511 001c 1A80     		strh	r2, [r3]	@ movhi
 736:./i2c/i2c-std.c **** 
 737:./i2c/i2c-std.c ****   /* Disable all active IRQs around ADDR clearing and STOP programming because the EV6_3
 738:./i2c/i2c-std.c ****       software sequence must complete before the current byte end of transfer */
 739:./i2c/i2c-std.c **** __disable_irq ();
 1512              		.loc 2 739 1
 1513 001e FFF7FEFF 		bl	__disable_irq
 1514              	.LBB6:
 740:./i2c/i2c-std.c **** // Clear ADDR flag
 741:./i2c/i2c-std.c ****   _I2C_CLEAR_ADDRFLAG(I2CX);    //(void) I2CX->SR1;(void) I2CX->SR2; 
 1515              		.loc 2 741 3
 1516 0022 0023     		movs	r3, #0
 1517 0024 BB60     		str	r3, [r7, #8]
 1518 0026 7B68     		ldr	r3, [r7, #4]
 1519 0028 9B8A     		ldrh	r3, [r3, #20]	@ movhi
 1520 002a 9BB2     		uxth	r3, r3
 1521 002c BB60     		str	r3, [r7, #8]
 1522 002e 7B68     		ldr	r3, [r7, #4]
 1523 0030 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 1524 0032 9BB2     		uxth	r3, r3
 1525 0034 BB60     		str	r3, [r7, #8]
 1526 0036 BB68     		ldr	r3, [r7, #8]
 1527              	.LBE6:
 742:./i2c/i2c-std.c ****   /* Disable Acknowledge */
 743:./i2c/i2c-std.c ****   CLEAR_BIT(I2CX->CR1,I2C_CR1_ACK); //I2CX->CR1&=~I2C_CR1_ACK;//I2C_AcknowledgeConfig(I2CX , DISABL
 1528              		.loc 2 743 3
 1529 0038 7B68     		ldr	r3, [r7, #4]
 1530 003a 1B88     		ldrh	r3, [r3]	@ movhi
 1531 003c 9BB2     		uxth	r3, r3
 1532 003e 23F48063 		bic	r3, r3, #1024
 1533 0042 9AB2     		uxth	r2, r3
 1534 0044 7B68     		ldr	r3, [r7, #4]
 1535 0046 1A80     		strh	r2, [r3]	@ movhi
 744:./i2c/i2c-std.c **** __enable_irq ();
 1536              		.loc 2 744 1
 1537 0048 FFF7FEFF 		bl	__enable_irq
 745:./i2c/i2c-std.c **** 
 746:./i2c/i2c-std.c **** // EV7_3 -- Wait for BTF , program stop , read data twice
 747:./i2c/i2c-std.c ****   error=i2c_wait_read_byte_btf_std(I2CX);
 1538              		.loc 2 747 9
 1539 004c 7868     		ldr	r0, [r7, #4]
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s 			page 62


 1540 004e FFF7FEFF 		bl	i2c_wait_read_byte_btf_std
 1541 0052 0346     		mov	r3, r0
 1542 0054 FB73     		strb	r3, [r7, #15]
 748:./i2c/i2c-std.c ****   if(error!=I2C_OK)
 1543              		.loc 2 748 5
 1544 0056 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1545 0058 002B     		cmp	r3, #0
 1546 005a 01D0     		beq	.L84
 749:./i2c/i2c-std.c ****   return error;
 1547              		.loc 2 749 10
 1548 005c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1549 005e 1BE0     		b	.L85
 1550              	.L84:
 750:./i2c/i2c-std.c **** 
 751:./i2c/i2c-std.c **** __disable_irq ();
 1551              		.loc 2 751 1
 1552 0060 FFF7FEFF 		bl	__disable_irq
 752:./i2c/i2c-std.c ****   /* Generate Stop */
 753:./i2c/i2c-std.c ****   SET_BIT(I2CX->CR1,I2C_CR1_STOP); //I2C_GenerateSTOP(I2CX ,ENABLE);
 1553              		.loc 2 753 3
 1554 0064 7B68     		ldr	r3, [r7, #4]
 1555 0066 1B88     		ldrh	r3, [r3]	@ movhi
 1556 0068 9BB2     		uxth	r3, r3
 1557 006a 43F40073 		orr	r3, r3, #512
 1558 006e 9AB2     		uxth	r2, r3
 1559 0070 7B68     		ldr	r3, [r7, #4]
 1560 0072 1A80     		strh	r2, [r3]	@ movhi
 754:./i2c/i2c-std.c ****   //*buf++ = I2CX->DR;  
 755:./i2c/i2c-std.c ****   /* Read data from DR */
 756:./i2c/i2c-std.c ****   *buf = I2CX->DR;
 1561              		.loc 2 756 14
 1562 0074 7B68     		ldr	r3, [r7, #4]
 1563 0076 1B8A     		ldrh	r3, [r3, #16]	@ movhi
 1564 0078 9BB2     		uxth	r3, r3
 1565              		.loc 2 756 8
 1566 007a DAB2     		uxtb	r2, r3
 1567 007c 3B68     		ldr	r3, [r7]
 1568 007e 1A70     		strb	r2, [r3]
 757:./i2c/i2c-std.c ****   /* Increment Buffer pointer */
 758:./i2c/i2c-std.c ****   buf++;
 1569              		.loc 2 758 6
 1570 0080 3B68     		ldr	r3, [r7]
 1571 0082 0133     		adds	r3, r3, #1
 1572 0084 3B60     		str	r3, [r7]
 759:./i2c/i2c-std.c ****  __enable_irq ();
 1573              		.loc 2 759 2
 1574 0086 FFF7FEFF 		bl	__enable_irq
 760:./i2c/i2c-std.c ****  /* Read data from DR */
 761:./i2c/i2c-std.c ****   *buf= I2CX->DR;
 1575              		.loc 2 761 13
 1576 008a 7B68     		ldr	r3, [r7, #4]
 1577 008c 1B8A     		ldrh	r3, [r3, #16]	@ movhi
 1578 008e 9BB2     		uxth	r3, r3
 1579              		.loc 2 761 7
 1580 0090 DAB2     		uxtb	r2, r3
 1581 0092 3B68     		ldr	r3, [r7]
 1582 0094 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s 			page 63


 762:./i2c/i2c-std.c **** 
 763:./i2c/i2c-std.c ****  return I2C_OK;
 1583              		.loc 2 763 9
 1584 0096 0023     		movs	r3, #0
 1585              	.L85:
 764:./i2c/i2c-std.c **** }
 1586              		.loc 2 764 1
 1587 0098 1846     		mov	r0, r3
 1588 009a 1037     		adds	r7, r7, #16
 1589              	.LCFI100:
 1590              		.cfi_def_cfa_offset 8
 1591 009c BD46     		mov	sp, r7
 1592              	.LCFI101:
 1593              		.cfi_def_cfa_register 13
 1594              		@ sp needed
 1595 009e 80BD     		pop	{r7, pc}
 1596              		.cfi_endproc
 1597              	.LFE49:
 1599              		.section	.text.i2c_read_last3byte_std,"ax",%progbits
 1600              		.align	1
 1601              		.syntax unified
 1602              		.thumb
 1603              		.thumb_func
 1605              	i2c_read_last3byte_std:
 1606              	.LFB50:
 765:./i2c/i2c-std.c **** //-------------------------------------------------------------------------------------------------
 766:./i2c/i2c-std.c ****  uint8_t i2c_read_last3byte_std(I2C_TypeDef* I2CX,uint8_t *buf)
 767:./i2c/i2c-std.c ****  {
 1607              		.loc 2 767 2
 1608              		.cfi_startproc
 1609              		@ args = 0, pretend = 0, frame = 16
 1610              		@ frame_needed = 1, uses_anonymous_args = 0
 1611 0000 80B5     		push	{r7, lr}
 1612              	.LCFI102:
 1613              		.cfi_def_cfa_offset 8
 1614              		.cfi_offset 7, -8
 1615              		.cfi_offset 14, -4
 1616 0002 84B0     		sub	sp, sp, #16
 1617              	.LCFI103:
 1618              		.cfi_def_cfa_offset 24
 1619 0004 00AF     		add	r7, sp, #0
 1620              	.LCFI104:
 1621              		.cfi_def_cfa_register 7
 1622 0006 7860     		str	r0, [r7, #4]
 1623 0008 3960     		str	r1, [r7]
 768:./i2c/i2c-std.c ****   uint8_t error=0;
 1624              		.loc 2 768 11
 1625 000a 0023     		movs	r3, #0
 1626 000c FB73     		strb	r3, [r7, #15]
 769:./i2c/i2c-std.c ****   volatile uint32_t Timeout=0xfffff;
 1627              		.loc 2 769 21
 1628 000e 2E4B     		ldr	r3, .L91
 1629 0010 BB60     		str	r3, [r7, #8]
 770:./i2c/i2c-std.c ****   // Clear ADDR flag
 771:./i2c/i2c-std.c ****   // _I2C_CLEAR_ADDRFLAG(I2CX);//(void) I2CX ->SR1;(void) I2CX ->SR2; 
 772:./i2c/i2c-std.c ****    error=i2c_wait_read_byte_btf_std(I2CX);
 1630              		.loc 2 772 10
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s 			page 64


 1631 0012 7868     		ldr	r0, [r7, #4]
 1632 0014 FFF7FEFF 		bl	i2c_wait_read_byte_btf_std
 1633 0018 0346     		mov	r3, r0
 1634 001a FB73     		strb	r3, [r7, #15]
 773:./i2c/i2c-std.c ****    if(error!=I2C_OK)
 1635              		.loc 2 773 6
 1636 001c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1637 001e 002B     		cmp	r3, #0
 1638 0020 01D0     		beq	.L87
 774:./i2c/i2c-std.c ****       return error;
 1639              		.loc 2 774 14
 1640 0022 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1641 0024 4CE0     		b	.L88
 1642              	.L87:
 775:./i2c/i2c-std.c **** // EV7_2 -- Figure 1 has an error , doesn 't read N-2 !
 776:./i2c/i2c-std.c ****     /* Disable Acknowledge */
 777:./i2c/i2c-std.c ****     CLEAR_BIT(I2CX->CR1,I2C_CR1_ACK);  //I2C_AcknowledgeConfig(I2CX , DISABLE); // clear ack bit
 1643              		.loc 2 777 5
 1644 0026 7B68     		ldr	r3, [r7, #4]
 1645 0028 1B88     		ldrh	r3, [r3]	@ movhi
 1646 002a 9BB2     		uxth	r3, r3
 1647 002c 23F48063 		bic	r3, r3, #1024
 1648 0030 9AB2     		uxth	r2, r3
 1649 0032 7B68     		ldr	r3, [r7, #4]
 1650 0034 1A80     		strh	r2, [r3]	@ movhi
 778:./i2c/i2c-std.c **** 
 779:./i2c/i2c-std.c **** /*
 780:./i2c/i2c-std.c **** __disable_irq ();
 781:./i2c/i2c-std.c ****   *buf++=I2CX->DR; // receive byte N-2
 782:./i2c/i2c-std.c ****  // Generate Stop 
 783:./i2c/i2c-std.c ****   SET_BIT(I2CX->CR1,I2C_CR1_STOP); //I2C_GenerateSTOP(I2CX ,ENABLE); // program stop
 784:./i2c/i2c-std.c **** __enable_irq ();
 785:./i2c/i2c-std.c **** 
 786:./i2c/i2c-std.c **** *buf++ = I2CX->DR;  // receive byte N-1
 787:./i2c/i2c-std.c **** // wait for byte N
 788:./i2c/i2c-std.c **** // Receive data EV7
 789:./i2c/i2c-std.c **** error=i2c_wait_read_byte_rxne_std(I2CX);
 790:./i2c/i2c-std.c ****   if(error)  // I2C_EVENT_MASTER_BYTE_RECEIVED:: BUSY, MSL and RXNE flags 
 791:./i2c/i2c-std.c ****     return error;
 792:./i2c/i2c-std.c ****  *buf++ = I2CX->DR;
 793:./i2c/i2c-std.c ****  return I2C_OK; 
 794:./i2c/i2c-std.c ****  */
 795:./i2c/i2c-std.c **** 
 796:./i2c/i2c-std.c **** /* Disable all active IRQs around ADDR clearing and STOP programming because the EV6_3
 797:./i2c/i2c-std.c ****              software sequence must complete before the current byte end of transfer */
 798:./i2c/i2c-std.c **** __disable_irq ();
 1651              		.loc 2 798 1
 1652 0036 FFF7FEFF 		bl	__disable_irq
 799:./i2c/i2c-std.c ****   *buf=I2CX->DR; // receive byte N-2
 1653              		.loc 2 799 12
 1654 003a 7B68     		ldr	r3, [r7, #4]
 1655 003c 1B8A     		ldrh	r3, [r3, #16]	@ movhi
 1656 003e 9BB2     		uxth	r3, r3
 1657              		.loc 2 799 7
 1658 0040 DAB2     		uxtb	r2, r3
 1659 0042 3B68     		ldr	r3, [r7]
 1660 0044 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s 			page 65


 800:./i2c/i2c-std.c ****    buf++;
 1661              		.loc 2 800 7
 1662 0046 3B68     		ldr	r3, [r7]
 1663 0048 0133     		adds	r3, r3, #1
 1664 004a 3B60     		str	r3, [r7]
 801:./i2c/i2c-std.c ****    Timeout=I2C_MAX_WAIT_TIME *(SystemCoreClock / 25U / 1000U);
 1665              		.loc 2 801 54
 1666 004c 1F4B     		ldr	r3, .L91+4
 1667 004e 1B68     		ldr	r3, [r3]
 1668 0050 DB08     		lsrs	r3, r3, #3
 1669 0052 1F4A     		ldr	r2, .L91+8
 1670 0054 A2FB0323 		umull	r2, r3, r2, r3
 1671 0058 1B0A     		lsrs	r3, r3, #8
 1672              		.loc 2 801 30
 1673 005a 40F6AC52 		movw	r2, #3500
 1674 005e 02FB03F3 		mul	r3, r2, r3
 1675              		.loc 2 801 11
 1676 0062 BB60     		str	r3, [r7, #8]
 802:./i2c/i2c-std.c ****     while(bits_is_clear(I2CX->SR1,I2C_SR1_BTF))//bits_is_clear(I2CX->SR1,I2C_SR1_BTF)) //I2C_GetFla
 1677              		.loc 2 802 10
 1678 0064 08E0     		b	.L89
 1679              	.L90:
 803:./i2c/i2c-std.c ****     if(Timeout--==0)  
 1680              		.loc 2 803 15
 1681 0066 BB68     		ldr	r3, [r7, #8]
 1682 0068 5A1E     		subs	r2, r3, #1
 1683 006a BA60     		str	r2, [r7, #8]
 1684              		.loc 2 803 7
 1685 006c 002B     		cmp	r3, #0
 1686 006e 03D1     		bne	.L89
 804:./i2c/i2c-std.c ****     {
 805:./i2c/i2c-std.c ****       __enable_irq();
 1687              		.loc 2 805 7
 1688 0070 FFF7FEFF 		bl	__enable_irq
 806:./i2c/i2c-std.c ****       // set the error then exit ::I2C_RX_RXNE_ERROR
 807:./i2c/i2c-std.c ****         return I2C_RX_BTF_ERROR;
 1689              		.loc 2 807 16
 1690 0074 0823     		movs	r3, #8
 1691 0076 23E0     		b	.L88
 1692              	.L89:
 802:./i2c/i2c-std.c ****     if(Timeout--==0)  
 1693              		.loc 2 802 11
 1694 0078 7B68     		ldr	r3, [r7, #4]
 1695 007a 9B8A     		ldrh	r3, [r3, #20]	@ movhi
 1696 007c 9BB2     		uxth	r3, r3
 1697 007e 03F00403 		and	r3, r3, #4
 802:./i2c/i2c-std.c ****     if(Timeout--==0)  
 1698              		.loc 2 802 10
 1699 0082 002B     		cmp	r3, #0
 1700 0084 EFD0     		beq	.L90
 808:./i2c/i2c-std.c ****     }
 809:./i2c/i2c-std.c ****  // Generate Stop 
 810:./i2c/i2c-std.c ****   SET_BIT(I2CX->CR1,I2C_CR1_STOP); 
 1701              		.loc 2 810 3
 1702 0086 7B68     		ldr	r3, [r7, #4]
 1703 0088 1B88     		ldrh	r3, [r3]	@ movhi
 1704 008a 9BB2     		uxth	r3, r3
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s 			page 66


 1705 008c 43F40073 		orr	r3, r3, #512
 1706 0090 9AB2     		uxth	r2, r3
 1707 0092 7B68     		ldr	r3, [r7, #4]
 1708 0094 1A80     		strh	r2, [r3]	@ movhi
 811:./i2c/i2c-std.c ****   *buf=I2CX->DR; // receive byte N-1
 1709              		.loc 2 811 12
 1710 0096 7B68     		ldr	r3, [r7, #4]
 1711 0098 1B8A     		ldrh	r3, [r3, #16]	@ movhi
 1712 009a 9BB2     		uxth	r3, r3
 1713              		.loc 2 811 7
 1714 009c DAB2     		uxtb	r2, r3
 1715 009e 3B68     		ldr	r3, [r7]
 1716 00a0 1A70     		strb	r2, [r3]
 812:./i2c/i2c-std.c ****    buf++;
 1717              		.loc 2 812 7
 1718 00a2 3B68     		ldr	r3, [r7]
 1719 00a4 0133     		adds	r3, r3, #1
 1720 00a6 3B60     		str	r3, [r7]
 813:./i2c/i2c-std.c ****   /* Re-enable IRQs */        
 814:./i2c/i2c-std.c ****   __enable_irq();
 1721              		.loc 2 814 3
 1722 00a8 FFF7FEFF 		bl	__enable_irq
 815:./i2c/i2c-std.c **** 
 816:./i2c/i2c-std.c ****   *buf=I2CX->DR; // receive byte N-1
 1723              		.loc 2 816 12
 1724 00ac 7B68     		ldr	r3, [r7, #4]
 1725 00ae 1B8A     		ldrh	r3, [r3, #16]	@ movhi
 1726 00b0 9BB2     		uxth	r3, r3
 1727              		.loc 2 816 7
 1728 00b2 DAB2     		uxtb	r2, r3
 1729 00b4 3B68     		ldr	r3, [r7]
 1730 00b6 1A70     		strb	r2, [r3]
 817:./i2c/i2c-std.c ****    buf++;
 1731              		.loc 2 817 7
 1732 00b8 3B68     		ldr	r3, [r7]
 1733 00ba 0133     		adds	r3, r3, #1
 1734 00bc 3B60     		str	r3, [r7]
 818:./i2c/i2c-std.c ****    return I2C_OK;
 1735              		.loc 2 818 11
 1736 00be 0023     		movs	r3, #0
 1737              	.L88:
 819:./i2c/i2c-std.c **** }
 1738              		.loc 2 819 1
 1739 00c0 1846     		mov	r0, r3
 1740 00c2 1037     		adds	r7, r7, #16
 1741              	.LCFI105:
 1742              		.cfi_def_cfa_offset 8
 1743 00c4 BD46     		mov	sp, r7
 1744              	.LCFI106:
 1745              		.cfi_def_cfa_register 13
 1746              		@ sp needed
 1747 00c6 80BD     		pop	{r7, pc}
 1748              	.L92:
 1749              		.align	2
 1750              	.L91:
 1751 00c8 FFFF0F00 		.word	1048575
 1752 00cc 00000000 		.word	SystemCoreClock
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s 			page 67


 1753 00d0 89B5F814 		.word	351843721
 1754              		.cfi_endproc
 1755              	.LFE50:
 1757              		.section	.text.i2c_read_nbyte_std,"ax",%progbits
 1758              		.align	1
 1759              		.syntax unified
 1760              		.thumb
 1761              		.thumb_func
 1763              	i2c_read_nbyte_std:
 1764              	.LFB51:
 820:./i2c/i2c-std.c **** //-------------------------------------------------------------------------------------------------
 821:./i2c/i2c-std.c **** /**
 822:./i2c/i2c-std.c ****  * @brief 
 823:./i2c/i2c-std.c ****  * 
 824:./i2c/i2c-std.c ****  * @param I2CX 
 825:./i2c/i2c-std.c ****  * @param data 
 826:./i2c/i2c-std.c ****  * @param ack 
 827:./i2c/i2c-std.c ****  * @return uint8_t 
 828:./i2c/i2c-std.c ****  */
 829:./i2c/i2c-std.c **** uint8_t i2c_read_nbyte_std(I2C_TypeDef* I2CX,uint8_t *buf,uint16_t n)
 830:./i2c/i2c-std.c **** {
 1765              		.loc 2 830 1
 1766              		.cfi_startproc
 1767              		@ args = 0, pretend = 0, frame = 32
 1768              		@ frame_needed = 1, uses_anonymous_args = 0
 1769 0000 80B5     		push	{r7, lr}
 1770              	.LCFI107:
 1771              		.cfi_def_cfa_offset 8
 1772              		.cfi_offset 7, -8
 1773              		.cfi_offset 14, -4
 1774 0002 88B0     		sub	sp, sp, #32
 1775              	.LCFI108:
 1776              		.cfi_def_cfa_offset 40
 1777 0004 00AF     		add	r7, sp, #0
 1778              	.LCFI109:
 1779              		.cfi_def_cfa_register 7
 1780 0006 F860     		str	r0, [r7, #12]
 1781 0008 B960     		str	r1, [r7, #8]
 1782 000a 1346     		mov	r3, r2
 1783 000c FB80     		strh	r3, [r7, #6]	@ movhi
 831:./i2c/i2c-std.c ****     uint8_t error=0;    
 1784              		.loc 2 831 13
 1785 000e 0023     		movs	r3, #0
 1786 0010 7B77     		strb	r3, [r7, #29]
 832:./i2c/i2c-std.c ****     if(n==0) 
 1787              		.loc 2 832 7
 1788 0012 FB88     		ldrh	r3, [r7, #6]
 1789 0014 002B     		cmp	r3, #0
 1790 0016 14D1     		bne	.L94
 1791              	.LBB7:
 833:./i2c/i2c-std.c ****     {      
 834:./i2c/i2c-std.c ****       /* Clear ADDR flag */
 835:./i2c/i2c-std.c ****       _I2C_CLEAR_ADDRFLAG(I2CX);
 1792              		.loc 2 835 7
 1793 0018 0023     		movs	r3, #0
 1794 001a BB61     		str	r3, [r7, #24]
 1795 001c FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s 			page 68


 1796 001e 9B8A     		ldrh	r3, [r3, #20]	@ movhi
 1797 0020 9BB2     		uxth	r3, r3
 1798 0022 BB61     		str	r3, [r7, #24]
 1799 0024 FB68     		ldr	r3, [r7, #12]
 1800 0026 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 1801 0028 9BB2     		uxth	r3, r3
 1802 002a BB61     		str	r3, [r7, #24]
 1803 002c BB69     		ldr	r3, [r7, #24]
 1804              	.LBE7:
 836:./i2c/i2c-std.c **** 
 837:./i2c/i2c-std.c ****       /* Generate Stop */
 838:./i2c/i2c-std.c ****       SET_BIT(I2CX->CR1, I2C_CR1_STOP);
 1805              		.loc 2 838 7
 1806 002e FB68     		ldr	r3, [r7, #12]
 1807 0030 1B88     		ldrh	r3, [r3]	@ movhi
 1808 0032 9BB2     		uxth	r3, r3
 1809 0034 43F40073 		orr	r3, r3, #512
 1810 0038 9AB2     		uxth	r2, r3
 1811 003a FB68     		ldr	r3, [r7, #12]
 1812 003c 1A80     		strh	r2, [r3]	@ movhi
 839:./i2c/i2c-std.c ****       return I2C_OK;
 1813              		.loc 2 839 14
 1814 003e 0023     		movs	r3, #0
 1815 0040 67E0     		b	.L95
 1816              	.L94:
 840:./i2c/i2c-std.c ****     }
 841:./i2c/i2c-std.c **** 
 842:./i2c/i2c-std.c ****     if(n==1) return i2c_read_lastbyte_std(I2CX,buf);
 1817              		.loc 2 842 7
 1818 0042 FB88     		ldrh	r3, [r7, #6]
 1819 0044 012B     		cmp	r3, #1
 1820 0046 05D1     		bne	.L96
 1821              		.loc 2 842 21 discriminator 1
 1822 0048 B968     		ldr	r1, [r7, #8]
 1823 004a F868     		ldr	r0, [r7, #12]
 1824 004c FFF7FEFF 		bl	i2c_read_lastbyte_std
 1825 0050 0346     		mov	r3, r0
 1826 0052 5EE0     		b	.L95
 1827              	.L96:
 843:./i2c/i2c-std.c ****     if(n==2) return i2c_read_last2byte_std(I2CX,buf);
 1828              		.loc 2 843 7
 1829 0054 FB88     		ldrh	r3, [r7, #6]
 1830 0056 022B     		cmp	r3, #2
 1831 0058 05D1     		bne	.L97
 1832              		.loc 2 843 21 discriminator 1
 1833 005a B968     		ldr	r1, [r7, #8]
 1834 005c F868     		ldr	r0, [r7, #12]
 1835 005e FFF7FEFF 		bl	i2c_read_last2byte_std
 1836 0062 0346     		mov	r3, r0
 1837 0064 55E0     		b	.L95
 1838              	.L97:
 844:./i2c/i2c-std.c ****      
 845:./i2c/i2c-std.c ****     // clear POS flag
 846:./i2c/i2c-std.c ****      CLEAR_BIT(I2CX->CR1,I2C_CR1_POS); 
 1839              		.loc 2 846 6
 1840 0066 FB68     		ldr	r3, [r7, #12]
 1841 0068 1B88     		ldrh	r3, [r3]	@ movhi
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s 			page 69


 1842 006a 9BB2     		uxth	r3, r3
 1843 006c 23F40063 		bic	r3, r3, #2048
 1844 0070 9AB2     		uxth	r2, r3
 1845 0072 FB68     		ldr	r3, [r7, #12]
 1846 0074 1A80     		strh	r2, [r3]	@ movhi
 847:./i2c/i2c-std.c ****      /* Enable Acknowledge */
 848:./i2c/i2c-std.c ****       SET_BIT(I2CX->CR1,I2C_CR1_ACK);
 1847              		.loc 2 848 7
 1848 0076 FB68     		ldr	r3, [r7, #12]
 1849 0078 1B88     		ldrh	r3, [r3]	@ movhi
 1850 007a 9BB2     		uxth	r3, r3
 1851 007c 43F48063 		orr	r3, r3, #1024
 1852 0080 9AB2     		uxth	r2, r3
 1853 0082 FB68     		ldr	r3, [r7, #12]
 1854 0084 1A80     		strh	r2, [r3]	@ movhi
 1855              	.LBB8:
 849:./i2c/i2c-std.c ****       /* Clear ADDR flag */
 850:./i2c/i2c-std.c ****       _I2C_CLEAR_ADDRFLAG(I2CX);
 1856              		.loc 2 850 7
 1857 0086 0023     		movs	r3, #0
 1858 0088 7B61     		str	r3, [r7, #20]
 1859 008a FB68     		ldr	r3, [r7, #12]
 1860 008c 9B8A     		ldrh	r3, [r3, #20]	@ movhi
 1861 008e 9BB2     		uxth	r3, r3
 1862 0090 7B61     		str	r3, [r7, #20]
 1863 0092 FB68     		ldr	r3, [r7, #12]
 1864 0094 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 1865 0096 9BB2     		uxth	r3, r3
 1866 0098 7B61     		str	r3, [r7, #20]
 1867 009a 7B69     		ldr	r3, [r7, #20]
 1868              	.LBE8:
 851:./i2c/i2c-std.c **** 
 852:./i2c/i2c-std.c ****     if(n>3)
 1869              		.loc 2 852 7
 1870 009c FB88     		ldrh	r3, [r7, #6]
 1871 009e 032B     		cmp	r3, #3
 1872 00a0 2ED9     		bls	.L98
 1873              	.LBB9:
 853:./i2c/i2c-std.c ****     {
 854:./i2c/i2c-std.c ****       for (uint16_t i = 0; i < n-3; i++) 
 1874              		.loc 2 854 21
 1875 00a2 0023     		movs	r3, #0
 1876 00a4 FB83     		strh	r3, [r7, #30]	@ movhi
 1877              		.loc 2 854 7
 1878 00a6 26E0     		b	.L99
 1879              	.L102:
 855:./i2c/i2c-std.c ****        {
 856:./i2c/i2c-std.c ****             // EV7 -- cannot guarantee 1 transfer completion time ,
 857:./i2c/i2c-std.c ****             // wait for BTF instead of RXNE
 858:./i2c/i2c-std.c ****             error=i2c_wait_read_byte_rxne_std(I2CX);
 1880              		.loc 2 858 19
 1881 00a8 F868     		ldr	r0, [r7, #12]
 1882 00aa FFF7FEFF 		bl	i2c_wait_read_byte_rxne_std
 1883 00ae 0346     		mov	r3, r0
 1884 00b0 7B77     		strb	r3, [r7, #29]
 859:./i2c/i2c-std.c ****             if(error!=I2C_OK)
 1885              		.loc 2 859 15
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s 			page 70


 1886 00b2 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 1887 00b4 002B     		cmp	r3, #0
 1888 00b6 01D0     		beq	.L100
 860:./i2c/i2c-std.c ****                 return error;
 1889              		.loc 2 860 24
 1890 00b8 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 1891 00ba 2AE0     		b	.L95
 1892              	.L100:
 861:./i2c/i2c-std.c ****               buf[i] = I2CX->DR;
 1893              		.loc 2 861 28
 1894 00bc FB68     		ldr	r3, [r7, #12]
 1895 00be 1B8A     		ldrh	r3, [r3, #16]	@ movhi
 1896 00c0 99B2     		uxth	r1, r3
 1897              		.loc 2 861 18
 1898 00c2 FB8B     		ldrh	r3, [r7, #30]
 1899 00c4 BA68     		ldr	r2, [r7, #8]
 1900 00c6 1344     		add	r3, r3, r2
 1901              		.loc 2 861 22
 1902 00c8 CAB2     		uxtb	r2, r1
 1903 00ca 1A70     		strb	r2, [r3]
 862:./i2c/i2c-std.c ****            if(bits_is_set(I2CX->SR1,I2C_SR1_BTF))//__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 1904              		.loc 2 862 15
 1905 00cc FB68     		ldr	r3, [r7, #12]
 1906 00ce 9B8A     		ldrh	r3, [r3, #20]	@ movhi
 1907 00d0 9BB2     		uxth	r3, r3
 1908 00d2 03F00403 		and	r3, r3, #4
 1909              		.loc 2 862 14
 1910 00d6 002B     		cmp	r3, #0
 1911 00d8 0AD0     		beq	.L101
 863:./i2c/i2c-std.c ****             {
 864:./i2c/i2c-std.c ****               /* Read data from DR */
 865:./i2c/i2c-std.c ****               i++;
 1912              		.loc 2 865 16
 1913 00da FB8B     		ldrh	r3, [r7, #30]
 1914 00dc 0133     		adds	r3, r3, #1
 1915 00de FB83     		strh	r3, [r7, #30]	@ movhi
 866:./i2c/i2c-std.c ****               buf[i] = I2CX->DR;
 1916              		.loc 2 866 28
 1917 00e0 FB68     		ldr	r3, [r7, #12]
 1918 00e2 1B8A     		ldrh	r3, [r3, #16]	@ movhi
 1919 00e4 99B2     		uxth	r1, r3
 1920              		.loc 2 866 18
 1921 00e6 FB8B     		ldrh	r3, [r7, #30]
 1922 00e8 BA68     		ldr	r2, [r7, #8]
 1923 00ea 1344     		add	r3, r3, r2
 1924              		.loc 2 866 22
 1925 00ec CAB2     		uxtb	r2, r1
 1926 00ee 1A70     		strb	r2, [r3]
 1927              	.L101:
 854:./i2c/i2c-std.c ****        {
 1928              		.loc 2 854 38 discriminator 2
 1929 00f0 FB8B     		ldrh	r3, [r7, #30]
 1930 00f2 0133     		adds	r3, r3, #1
 1931 00f4 FB83     		strh	r3, [r7, #30]	@ movhi
 1932              	.L99:
 854:./i2c/i2c-std.c ****        {
 1933              		.loc 2 854 30 discriminator 1
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s 			page 71


 1934 00f6 FA8B     		ldrh	r2, [r7, #30]
 854:./i2c/i2c-std.c ****        {
 1935              		.loc 2 854 33 discriminator 1
 1936 00f8 FB88     		ldrh	r3, [r7, #6]
 1937 00fa 033B     		subs	r3, r3, #3
 854:./i2c/i2c-std.c ****        {
 1938              		.loc 2 854 7 discriminator 1
 1939 00fc 9A42     		cmp	r2, r3
 1940 00fe D3DB     		blt	.L102
 1941              	.L98:
 1942              	.LBE9:
 867:./i2c/i2c-std.c ****             }
 868:./i2c/i2c-std.c **** 
 869:./i2c/i2c-std.c ****        }
 870:./i2c/i2c-std.c ****     }
 871:./i2c/i2c-std.c ****   
 872:./i2c/i2c-std.c ****     return i2c_read_last3byte_std(I2CX,(uint8_t *) &buf[n-3]);
 1943              		.loc 2 872 56
 1944 0100 FB88     		ldrh	r3, [r7, #6]
 1945 0102 033B     		subs	r3, r3, #3
 1946              		.loc 2 872 12
 1947 0104 BA68     		ldr	r2, [r7, #8]
 1948 0106 1344     		add	r3, r3, r2
 1949 0108 1946     		mov	r1, r3
 1950 010a F868     		ldr	r0, [r7, #12]
 1951 010c FFF7FEFF 		bl	i2c_read_last3byte_std
 1952 0110 0346     		mov	r3, r0
 1953              	.L95:
 873:./i2c/i2c-std.c **** }
 1954              		.loc 2 873 1
 1955 0112 1846     		mov	r0, r3
 1956 0114 2037     		adds	r7, r7, #32
 1957              	.LCFI110:
 1958              		.cfi_def_cfa_offset 8
 1959 0116 BD46     		mov	sp, r7
 1960              	.LCFI111:
 1961              		.cfi_def_cfa_register 13
 1962              		@ sp needed
 1963 0118 80BD     		pop	{r7, pc}
 1964              		.cfi_endproc
 1965              	.LFE51:
 1967              		.section	.text.i2c_init_std,"ax",%progbits
 1968              		.align	1
 1969              		.global	i2c_init_std
 1970              		.syntax unified
 1971              		.thumb
 1972              		.thumb_func
 1974              	i2c_init_std:
 1975              	.LFB52:
 874:./i2c/i2c-std.c **** //-------------------------------------------------------------------------------------------------
 875:./i2c/i2c-std.c **** 
 876:./i2c/i2c-std.c **** //********************************************************************************************
 877:./i2c/i2c-std.c **** //
 878:./i2c/i2c-std.c **** //  extern i2c Methods defnitions using standard peripheral library
 879:./i2c/i2c-std.c **** //
 880:./i2c/i2c-std.c **** //********************************************************************************************
 881:./i2c/i2c-std.c **** void i2c_init_std(I2C_TypeDef* I2CX, uint32_t clock_speed,uint16_t ownaddress)
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s 			page 72


 882:./i2c/i2c-std.c **** {
 1976              		.loc 2 882 1
 1977              		.cfi_startproc
 1978              		@ args = 0, pretend = 0, frame = 40
 1979              		@ frame_needed = 1, uses_anonymous_args = 0
 1980 0000 80B5     		push	{r7, lr}
 1981              	.LCFI112:
 1982              		.cfi_def_cfa_offset 8
 1983              		.cfi_offset 7, -8
 1984              		.cfi_offset 14, -4
 1985 0002 8AB0     		sub	sp, sp, #40
 1986              	.LCFI113:
 1987              		.cfi_def_cfa_offset 48
 1988 0004 00AF     		add	r7, sp, #0
 1989              	.LCFI114:
 1990              		.cfi_def_cfa_register 7
 1991 0006 F860     		str	r0, [r7, #12]
 1992 0008 B960     		str	r1, [r7, #8]
 1993 000a 1346     		mov	r3, r2
 1994 000c FB80     		strh	r3, [r7, #6]	@ movhi
 883:./i2c/i2c-std.c ****     GPIO_InitTypeDef _gpio_init_struct;
 884:./i2c/i2c-std.c ****     I2C_InitTypeDef _i2c_init_struct;
 885:./i2c/i2c-std.c ****   
 886:./i2c/i2c-std.c ****  /*1. Enable the Clock  the AFIO/GPIO Modules using RCC_APB2PeriphClockCmd*/
 887:./i2c/i2c-std.c ****     RCC_APB2PeriphClockCmd(RCC_APB2Periph_AFIO| RCC_APB2Periph_GPIOB,ENABLE);
 1995              		.loc 2 887 5
 1996 000e 0121     		movs	r1, #1
 1997 0010 0920     		movs	r0, #9
 1998 0012 FFF7FEFF 		bl	RCC_APB2PeriphClockCmd
 888:./i2c/i2c-std.c ****     
 889:./i2c/i2c-std.c **** 
 890:./i2c/i2c-std.c ****  /* 1.,2. Enable the Clock  the I2Cx Modules  and its GPIO pins mode */
 891:./i2c/i2c-std.c ****     if(I2CX==I2C1)  
 1999              		.loc 2 891 7
 2000 0016 FB68     		ldr	r3, [r7, #12]
 2001 0018 404A     		ldr	r2, .L106
 2002 001a 9342     		cmp	r3, r2
 2003 001c 22D1     		bne	.L104
 892:./i2c/i2c-std.c ****     {
 893:./i2c/i2c-std.c ****     /*Enable the Clock  the AFIO/GPIO Modules using RCC_APB2PeriphClockCmd*/
 894:./i2c/i2c-std.c ****      RCC_APB1PeriphClockCmd(RCC_APB1Periph_I2C1,ENABLE);
 2004              		.loc 2 894 6
 2005 001e 0121     		movs	r1, #1
 2006 0020 4FF40010 		mov	r0, #2097152
 2007 0024 FFF7FEFF 		bl	RCC_APB1PeriphClockCmd
 895:./i2c/i2c-std.c ****     /* Configure the pins required by the Module (AFIO_OUT or INPUT, ANALOG...) & remap incase of r
 896:./i2c/i2c-std.c ****       GPIO_StructInit((GPIO_InitTypeDef*)& _gpio_init_struct);      
 2008              		.loc 2 896 7
 2009 0028 07F12403 		add	r3, r7, #36
 2010 002c 1846     		mov	r0, r3
 2011 002e FFF7FEFF 		bl	GPIO_StructInit
 897:./i2c/i2c-std.c ****       // I2C1_SCL=PB6,I2C1_SDA=PB7
 898:./i2c/i2c-std.c ****      _gpio_init_struct.GPIO_Pin=GPIO_Pin_6 | GPIO_Pin_7;
 2012              		.loc 2 898 32
 2013 0032 C023     		movs	r3, #192
 2014 0034 BB84     		strh	r3, [r7, #36]	@ movhi
 899:./i2c/i2c-std.c ****      _gpio_init_struct.GPIO_Speed=GPIO_Speed_50MHz;
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s 			page 73


 2015              		.loc 2 899 34
 2016 0036 0323     		movs	r3, #3
 2017 0038 87F82630 		strb	r3, [r7, #38]
 900:./i2c/i2c-std.c ****      _gpio_init_struct.GPIO_Mode=GPIO_Mode_AF_OD;
 2018              		.loc 2 900 33
 2019 003c 1C23     		movs	r3, #28
 2020 003e 87F82730 		strb	r3, [r7, #39]
 901:./i2c/i2c-std.c ****       GPIO_Init(GPIOB,&_gpio_init_struct);
 2021              		.loc 2 901 7
 2022 0042 07F12403 		add	r3, r7, #36
 2023 0046 1946     		mov	r1, r3
 2024 0048 3548     		ldr	r0, .L106+4
 2025 004a FFF7FEFF 		bl	GPIO_Init
 902:./i2c/i2c-std.c **** 
 903:./i2c/i2c-std.c ****     /* I2C1 Hardware reset/set of the module */
 904:./i2c/i2c-std.c ****      RCC_APB1PeriphResetCmd(RCC_APB1Periph_I2C1,ENABLE);
 2026              		.loc 2 904 6
 2027 004e 0121     		movs	r1, #1
 2028 0050 4FF40010 		mov	r0, #2097152
 2029 0054 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 905:./i2c/i2c-std.c ****      RCC_APB1PeriphResetCmd(RCC_APB1Periph_I2C1,DISABLE);
 2030              		.loc 2 905 6
 2031 0058 0021     		movs	r1, #0
 2032 005a 4FF40010 		mov	r0, #2097152
 2033 005e FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 2034 0062 22E0     		b	.L105
 2035              	.L104:
 906:./i2c/i2c-std.c ****     }
 907:./i2c/i2c-std.c ****     else
 908:./i2c/i2c-std.c ****     { //I2C2
 909:./i2c/i2c-std.c ****             /*Enable the Clock  the AFIO/GPIO Modules using RCC_APB2PeriphClockCmd*/
 910:./i2c/i2c-std.c ****      RCC_APB1PeriphClockCmd(RCC_APB1Periph_I2C2,ENABLE);
 2036              		.loc 2 910 6
 2037 0064 0121     		movs	r1, #1
 2038 0066 4FF48000 		mov	r0, #4194304
 2039 006a FFF7FEFF 		bl	RCC_APB1PeriphClockCmd
 911:./i2c/i2c-std.c ****     /* Configure the pins required by the Module (AFIO_OUT or INPUT, ANALOG...) & remap incase of r
 912:./i2c/i2c-std.c ****       GPIO_StructInit((GPIO_InitTypeDef*)& _gpio_init_struct);      
 2040              		.loc 2 912 7
 2041 006e 07F12403 		add	r3, r7, #36
 2042 0072 1846     		mov	r0, r3
 2043 0074 FFF7FEFF 		bl	GPIO_StructInit
 913:./i2c/i2c-std.c ****       // I2C2_SCL=PB10,I2C2_SDA=PB11
 914:./i2c/i2c-std.c ****      _gpio_init_struct.GPIO_Pin=GPIO_Pin_10 | GPIO_Pin_11;
 2044              		.loc 2 914 32
 2045 0078 4FF44063 		mov	r3, #3072
 2046 007c BB84     		strh	r3, [r7, #36]	@ movhi
 915:./i2c/i2c-std.c ****      _gpio_init_struct.GPIO_Speed=GPIO_Speed_50MHz;
 2047              		.loc 2 915 34
 2048 007e 0323     		movs	r3, #3
 2049 0080 87F82630 		strb	r3, [r7, #38]
 916:./i2c/i2c-std.c ****      _gpio_init_struct.GPIO_Mode=GPIO_Mode_AF_OD;
 2050              		.loc 2 916 33
 2051 0084 1C23     		movs	r3, #28
 2052 0086 87F82730 		strb	r3, [r7, #39]
 917:./i2c/i2c-std.c ****       GPIO_Init(GPIOB,&_gpio_init_struct);
 2053              		.loc 2 917 7
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s 			page 74


 2054 008a 07F12403 		add	r3, r7, #36
 2055 008e 1946     		mov	r1, r3
 2056 0090 2348     		ldr	r0, .L106+4
 2057 0092 FFF7FEFF 		bl	GPIO_Init
 918:./i2c/i2c-std.c **** 
 919:./i2c/i2c-std.c ****     /* I2C2 Hardware reset/set of the module */
 920:./i2c/i2c-std.c ****      RCC_APB1PeriphResetCmd(RCC_APB1Periph_I2C2,ENABLE);
 2058              		.loc 2 920 6
 2059 0096 0121     		movs	r1, #1
 2060 0098 4FF48000 		mov	r0, #4194304
 2061 009c FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 921:./i2c/i2c-std.c ****      RCC_APB1PeriphResetCmd(RCC_APB1Periph_I2C2,DISABLE);
 2062              		.loc 2 921 6
 2063 00a0 0021     		movs	r1, #0
 2064 00a2 4FF48000 		mov	r0, #4194304
 2065 00a6 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 2066              	.L105:
 922:./i2c/i2c-std.c ****     }
 923:./i2c/i2c-std.c ****   /* 3. Configure the peripheral hardware interrupt @ level of  NVIC  link to IRQ and set priority 
 924:./i2c/i2c-std.c ****   /*   NVIC_InitTypeDef NVIC_InitStruct;
 925:./i2c/i2c-std.c ****      NVIC_InitStruct.NVIC_IRQChannel=I2C1_EV_IRQn;
 926:./i2c/i2c-std.c ****      NVIC_InitStruct.NVIC_IRQChannelPreemptionPriority=0;
 927:./i2c/i2c-std.c ****      NVIC_InitStruct.NVIC_IRQChannelSubPriority=9;
 928:./i2c/i2c-std.c ****      NVIC_InitStruct.NVIC_IRQChannelCmd=ENABLE;
 929:./i2c/i2c-std.c ****      NVIC_Init((NVIC_InitTypeDef*) &NVIC_InitStruct);
 930:./i2c/i2c-std.c ****   */
 931:./i2c/i2c-std.c **** /* 4.  the peripheral hardware  of the I2C */
 932:./i2c/i2c-std.c ****     I2C_StructInit((I2C_InitTypeDef *)& _i2c_init_struct);
 2067              		.loc 2 932 5
 2068 00aa 07F11403 		add	r3, r7, #20
 2069 00ae 1846     		mov	r0, r3
 2070 00b0 FFF7FEFF 		bl	I2C_StructInit
 933:./i2c/i2c-std.c ****     _i2c_init_struct.I2C_Mode=I2C_Mode_I2C ;
 2071              		.loc 2 933 30
 2072 00b4 0023     		movs	r3, #0
 2073 00b6 3B83     		strh	r3, [r7, #24]	@ movhi
 934:./i2c/i2c-std.c ****     _i2c_init_struct.I2C_DutyCycle=I2C_DutyCycle_2;
 2074              		.loc 2 934 35
 2075 00b8 4BF6FF73 		movw	r3, #49151
 2076 00bc 7B83     		strh	r3, [r7, #26]	@ movhi
 935:./i2c/i2c-std.c ****     _i2c_init_struct.I2C_Ack=I2C_Ack_Enable;
 2077              		.loc 2 935 29
 2078 00be 4FF48063 		mov	r3, #1024
 2079 00c2 FB83     		strh	r3, [r7, #30]	@ movhi
 936:./i2c/i2c-std.c ****     _i2c_init_struct.I2C_AcknowledgedAddress=I2C_AcknowledgedAddress_7bit ;
 2080              		.loc 2 936 45
 2081 00c4 4FF48043 		mov	r3, #16384
 2082 00c8 3B84     		strh	r3, [r7, #32]	@ movhi
 937:./i2c/i2c-std.c ****     _i2c_init_struct. I2C_OwnAddress1=ownaddress;
 2083              		.loc 2 937 38
 2084 00ca FB88     		ldrh	r3, [r7, #6]	@ movhi
 2085 00cc BB83     		strh	r3, [r7, #28]	@ movhi
 938:./i2c/i2c-std.c ****     _i2c_init_struct.I2C_ClockSpeed=clock_speed;
 2086              		.loc 2 938 36
 2087 00ce BB68     		ldr	r3, [r7, #8]
 2088 00d0 7B61     		str	r3, [r7, #20]
 939:./i2c/i2c-std.c ****     // reset the I2C Module
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s 			page 75


 940:./i2c/i2c-std.c ****     I2CX->CR1|=I2C_CR1_SWRST;
 2089              		.loc 2 940 14
 2090 00d2 FB68     		ldr	r3, [r7, #12]
 2091 00d4 1B88     		ldrh	r3, [r3]	@ movhi
 2092 00d6 9BB2     		uxth	r3, r3
 2093 00d8 6FEA4343 		mvn	r3, r3, lsl #17
 2094 00dc 6FEA5343 		mvn	r3, r3, lsr #17
 2095 00e0 9AB2     		uxth	r2, r3
 2096 00e2 FB68     		ldr	r3, [r7, #12]
 2097 00e4 1A80     		strh	r2, [r3]	@ movhi
 941:./i2c/i2c-std.c ****     I2CX->CR1&=~I2C_CR1_SWRST;
 2098              		.loc 2 941 14
 2099 00e6 FB68     		ldr	r3, [r7, #12]
 2100 00e8 1B88     		ldrh	r3, [r3]	@ movhi
 2101 00ea 9BB2     		uxth	r3, r3
 2102 00ec C3F30E03 		ubfx	r3, r3, #0, #15
 2103 00f0 9AB2     		uxth	r2, r3
 2104 00f2 FB68     		ldr	r3, [r7, #12]
 2105 00f4 1A80     		strh	r2, [r3]	@ movhi
 942:./i2c/i2c-std.c **** 
 943:./i2c/i2c-std.c ****     I2C_Init((I2C_TypeDef*)I2CX,(I2C_InitTypeDef *)& _i2c_init_struct);
 2106              		.loc 2 943 5
 2107 00f6 07F11403 		add	r3, r7, #20
 2108 00fa 1946     		mov	r1, r3
 2109 00fc F868     		ldr	r0, [r7, #12]
 2110 00fe FFF7FEFF 		bl	I2C_Init
 944:./i2c/i2c-std.c ****     //I2CX->TRISE=37;
 945:./i2c/i2c-std.c ****   /* 5. Configure the peripheral interrupt @ level of the peripheral or DMA */
 946:./i2c/i2c-std.c ****     //I2C_ITConfig(I2C1, I2C_IT_EVT| I2C_IT_EVT,ENABLE);
 947:./i2c/i2c-std.c **** 
 948:./i2c/i2c-std.c ****   /* 6. Enable the peripheral Module */
 949:./i2c/i2c-std.c ****     //I2C_Cmd((I2C_TypeDef*)I2CX,ENABLE);
 950:./i2c/i2c-std.c ****     I2CX->CR1|=I2C_CR1_PE;
 2111              		.loc 2 950 14
 2112 0102 FB68     		ldr	r3, [r7, #12]
 2113 0104 1B88     		ldrh	r3, [r3]	@ movhi
 2114 0106 9BB2     		uxth	r3, r3
 2115 0108 43F00103 		orr	r3, r3, #1
 2116 010c 9AB2     		uxth	r2, r3
 2117 010e FB68     		ldr	r3, [r7, #12]
 2118 0110 1A80     		strh	r2, [r3]	@ movhi
 951:./i2c/i2c-std.c **** 
 952:./i2c/i2c-std.c **** }
 2119              		.loc 2 952 1
 2120 0112 00BF     		nop
 2121 0114 2837     		adds	r7, r7, #40
 2122              	.LCFI115:
 2123              		.cfi_def_cfa_offset 8
 2124 0116 BD46     		mov	sp, r7
 2125              	.LCFI116:
 2126              		.cfi_def_cfa_register 13
 2127              		@ sp needed
 2128 0118 80BD     		pop	{r7, pc}
 2129              	.L107:
 2130 011a 00BF     		.align	2
 2131              	.L106:
 2132 011c 00540040 		.word	1073763328
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s 			page 76


 2133 0120 000C0140 		.word	1073810432
 2134              		.cfi_endproc
 2135              	.LFE52:
 2137              		.section	.text.i2c_write_7bit_byte_std,"ax",%progbits
 2138              		.align	1
 2139              		.global	i2c_write_7bit_byte_std
 2140              		.syntax unified
 2141              		.thumb
 2142              		.thumb_func
 2144              	i2c_write_7bit_byte_std:
 2145              	.LFB53:
 953:./i2c/i2c-std.c **** //-------------------------------------------------------------------------------------------------
 954:./i2c/i2c-std.c **** 
 955:./i2c/i2c-std.c **** //********************************************************************************************
 956:./i2c/i2c-std.c **** // GROUP A
 957:./i2c/i2c-std.c **** //  extern i2c Methods defnitions using standard peripheral library
 958:./i2c/i2c-std.c **** // read and write directly without definition of a base register address in the slave
 959:./i2c/i2c-std.c **** //
 960:./i2c/i2c-std.c **** //********************************************************************************************
 961:./i2c/i2c-std.c **** 
 962:./i2c/i2c-std.c **** uint8_t i2c_write_7bit_byte_std(I2C_TypeDef* I2CX, uint8_t  slave_address,uint8_t data)
 963:./i2c/i2c-std.c **** {
 2146              		.loc 2 963 1
 2147              		.cfi_startproc
 2148              		@ args = 0, pretend = 0, frame = 16
 2149              		@ frame_needed = 1, uses_anonymous_args = 0
 2150 0000 80B5     		push	{r7, lr}
 2151              	.LCFI117:
 2152              		.cfi_def_cfa_offset 8
 2153              		.cfi_offset 7, -8
 2154              		.cfi_offset 14, -4
 2155 0002 84B0     		sub	sp, sp, #16
 2156              	.LCFI118:
 2157              		.cfi_def_cfa_offset 24
 2158 0004 00AF     		add	r7, sp, #0
 2159              	.LCFI119:
 2160              		.cfi_def_cfa_register 7
 2161 0006 7860     		str	r0, [r7, #4]
 2162 0008 0B46     		mov	r3, r1
 2163 000a FB70     		strb	r3, [r7, #3]
 2164 000c 1346     		mov	r3, r2
 2165 000e BB70     		strb	r3, [r7, #2]
 964:./i2c/i2c-std.c ****  // get the result of any sub operation where a non-zero value indicates an error condition
 965:./i2c/i2c-std.c ****     uint8_t error=0; 
 2166              		.loc 2 965 13
 2167 0010 0023     		movs	r3, #0
 2168 0012 FB73     		strb	r3, [r7, #15]
 966:./i2c/i2c-std.c **** 
 967:./i2c/i2c-std.c ****   //wait check that the I2c module is not busy
 968:./i2c/i2c-std.c ****     if((error=i2c_ready_std(I2CX)))
 2169              		.loc 2 968 15
 2170 0014 7868     		ldr	r0, [r7, #4]
 2171 0016 FFF7FEFF 		bl	i2c_ready_std
 2172 001a 0346     		mov	r3, r0
 2173 001c FB73     		strb	r3, [r7, #15]
 2174              		.loc 2 968 7
 2175 001e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s 			page 77


 2176 0020 002B     		cmp	r3, #0
 2177 0022 01D0     		beq	.L109
 969:./i2c/i2c-std.c ****         return error;
 2178              		.loc 2 969 16
 2179 0024 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2180 0026 2CE0     		b	.L110
 2181              	.L109:
 970:./i2c/i2c-std.c **** 
 971:./i2c/i2c-std.c ****   // send the start condition 
 972:./i2c/i2c-std.c ****     if((error=i2c_start_std(I2CX)))
 2182              		.loc 2 972 15
 2183 0028 7868     		ldr	r0, [r7, #4]
 2184 002a FFF7FEFF 		bl	i2c_start_std
 2185 002e 0346     		mov	r3, r0
 2186 0030 FB73     		strb	r3, [r7, #15]
 2187              		.loc 2 972 7
 2188 0032 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2189 0034 002B     		cmp	r3, #0
 2190 0036 01D0     		beq	.L111
 973:./i2c/i2c-std.c ****         return error;
 2191              		.loc 2 973 16
 2192 0038 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2193 003a 22E0     		b	.L110
 2194              	.L111:
 974:./i2c/i2c-std.c **** 
 975:./i2c/i2c-std.c ****     //EV5: send the slave address with write operation master transmit 
 976:./i2c/i2c-std.c ****     if((error=i2c_send_7bit_slave_address_wr_std(I2CX,slave_address)))
 2195              		.loc 2 976 15
 2196 003c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2197 003e 1946     		mov	r1, r3
 2198 0040 7868     		ldr	r0, [r7, #4]
 2199 0042 FFF7FEFF 		bl	i2c_send_7bit_slave_address_wr_std
 2200 0046 0346     		mov	r3, r0
 2201 0048 FB73     		strb	r3, [r7, #15]
 2202              		.loc 2 976 7
 2203 004a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2204 004c 002B     		cmp	r3, #0
 2205 004e 01D0     		beq	.L112
 977:./i2c/i2c-std.c ****         return error;
 2206              		.loc 2 977 16
 2207 0050 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2208 0052 16E0     		b	.L110
 2209              	.L112:
 978:./i2c/i2c-std.c **** 
 979:./i2c/i2c-std.c ****     //Ev6: send the byte
 980:./i2c/i2c-std.c ****     if((error=i2c_write_byte_std(I2CX,data)))
 2210              		.loc 2 980 15
 2211 0054 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 2212 0056 1946     		mov	r1, r3
 2213 0058 7868     		ldr	r0, [r7, #4]
 2214 005a FFF7FEFF 		bl	i2c_write_byte_std
 2215 005e 0346     		mov	r3, r0
 2216 0060 FB73     		strb	r3, [r7, #15]
 2217              		.loc 2 980 7
 2218 0062 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2219 0064 002B     		cmp	r3, #0
 2220 0066 01D0     		beq	.L113
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s 			page 78


 981:./i2c/i2c-std.c ****         return error;
 2221              		.loc 2 981 16
 2222 0068 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2223 006a 0AE0     		b	.L110
 2224              	.L113:
 982:./i2c/i2c-std.c **** 
 983:./i2c/i2c-std.c ****     // generate the stop condition 
 984:./i2c/i2c-std.c ****     if((error=i2c_stop_std(I2CX)))
 2225              		.loc 2 984 15
 2226 006c 7868     		ldr	r0, [r7, #4]
 2227 006e FFF7FEFF 		bl	i2c_stop_std
 2228 0072 0346     		mov	r3, r0
 2229 0074 FB73     		strb	r3, [r7, #15]
 2230              		.loc 2 984 7
 2231 0076 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2232 0078 002B     		cmp	r3, #0
 2233 007a 01D0     		beq	.L114
 985:./i2c/i2c-std.c ****         return error;
 2234              		.loc 2 985 16
 2235 007c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2236 007e 00E0     		b	.L110
 2237              	.L114:
 986:./i2c/i2c-std.c **** 
 987:./i2c/i2c-std.c ****     return I2C_OK;
 2238              		.loc 2 987 12
 2239 0080 0023     		movs	r3, #0
 2240              	.L110:
 988:./i2c/i2c-std.c **** }
 2241              		.loc 2 988 1
 2242 0082 1846     		mov	r0, r3
 2243 0084 1037     		adds	r7, r7, #16
 2244              	.LCFI120:
 2245              		.cfi_def_cfa_offset 8
 2246 0086 BD46     		mov	sp, r7
 2247              	.LCFI121:
 2248              		.cfi_def_cfa_register 13
 2249              		@ sp needed
 2250 0088 80BD     		pop	{r7, pc}
 2251              		.cfi_endproc
 2252              	.LFE53:
 2254              		.section	.text.i2c_write_7bit_nbyte_std,"ax",%progbits
 2255              		.align	1
 2256              		.global	i2c_write_7bit_nbyte_std
 2257              		.syntax unified
 2258              		.thumb
 2259              		.thumb_func
 2261              	i2c_write_7bit_nbyte_std:
 2262              	.LFB54:
 989:./i2c/i2c-std.c **** //-------------------------------------------------------------------------------------------------
 990:./i2c/i2c-std.c **** uint8_t i2c_write_7bit_nbyte_std(I2C_TypeDef* I2CX, uint8_t  slave_address, uint8_t *buf, size_t n)
 991:./i2c/i2c-std.c **** {
 2263              		.loc 2 991 1
 2264              		.cfi_startproc
 2265              		@ args = 0, pretend = 0, frame = 24
 2266              		@ frame_needed = 1, uses_anonymous_args = 0
 2267 0000 80B5     		push	{r7, lr}
 2268              	.LCFI122:
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s 			page 79


 2269              		.cfi_def_cfa_offset 8
 2270              		.cfi_offset 7, -8
 2271              		.cfi_offset 14, -4
 2272 0002 86B0     		sub	sp, sp, #24
 2273              	.LCFI123:
 2274              		.cfi_def_cfa_offset 32
 2275 0004 00AF     		add	r7, sp, #0
 2276              	.LCFI124:
 2277              		.cfi_def_cfa_register 7
 2278 0006 F860     		str	r0, [r7, #12]
 2279 0008 7A60     		str	r2, [r7, #4]
 2280 000a 3B60     		str	r3, [r7]
 2281 000c 0B46     		mov	r3, r1
 2282 000e FB72     		strb	r3, [r7, #11]
 992:./i2c/i2c-std.c ****  // get the error of the any sub operation where a non-zero value indicate an error 
 993:./i2c/i2c-std.c ****   uint8_t error=0; 
 2283              		.loc 2 993 11
 2284 0010 0023     		movs	r3, #0
 2285 0012 FB75     		strb	r3, [r7, #23]
 994:./i2c/i2c-std.c **** 
 995:./i2c/i2c-std.c ****   //wait check that the I2c module is not busy
 996:./i2c/i2c-std.c ****     if((error=i2c_ready_std(I2CX)))
 2286              		.loc 2 996 15
 2287 0014 F868     		ldr	r0, [r7, #12]
 2288 0016 FFF7FEFF 		bl	i2c_ready_std
 2289 001a 0346     		mov	r3, r0
 2290 001c FB75     		strb	r3, [r7, #23]
 2291              		.loc 2 996 7
 2292 001e FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2293 0020 002B     		cmp	r3, #0
 2294 0022 01D0     		beq	.L116
 997:./i2c/i2c-std.c ****         return error;
 2295              		.loc 2 997 16
 2296 0024 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2297 0026 2CE0     		b	.L117
 2298              	.L116:
 998:./i2c/i2c-std.c ****   // send the start condition 
 999:./i2c/i2c-std.c ****     if((error=i2c_start_std(I2CX)))
 2299              		.loc 2 999 15
 2300 0028 F868     		ldr	r0, [r7, #12]
 2301 002a FFF7FEFF 		bl	i2c_start_std
 2302 002e 0346     		mov	r3, r0
 2303 0030 FB75     		strb	r3, [r7, #23]
 2304              		.loc 2 999 7
 2305 0032 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2306 0034 002B     		cmp	r3, #0
 2307 0036 01D0     		beq	.L118
1000:./i2c/i2c-std.c ****         return error;
 2308              		.loc 2 1000 16
 2309 0038 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2310 003a 22E0     		b	.L117
 2311              	.L118:
1001:./i2c/i2c-std.c **** 
1002:./i2c/i2c-std.c ****     //EV5: send the slave address with write operation master transmit 
1003:./i2c/i2c-std.c ****     if((error=i2c_send_7bit_slave_address_wr_std(I2CX,slave_address)))
 2312              		.loc 2 1003 15
 2313 003c FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s 			page 80


 2314 003e 1946     		mov	r1, r3
 2315 0040 F868     		ldr	r0, [r7, #12]
 2316 0042 FFF7FEFF 		bl	i2c_send_7bit_slave_address_wr_std
 2317 0046 0346     		mov	r3, r0
 2318 0048 FB75     		strb	r3, [r7, #23]
 2319              		.loc 2 1003 7
 2320 004a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2321 004c 002B     		cmp	r3, #0
 2322 004e 01D0     		beq	.L119
1004:./i2c/i2c-std.c ****         return error;
 2323              		.loc 2 1004 16
 2324 0050 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2325 0052 16E0     		b	.L117
 2326              	.L119:
1005:./i2c/i2c-std.c **** 
1006:./i2c/i2c-std.c ****     //Ev6: send the byte
1007:./i2c/i2c-std.c ****     if((error=i2c_write_nbyte_std(I2CX,buf,n)))
 2327              		.loc 2 1007 15
 2328 0054 3A68     		ldr	r2, [r7]
 2329 0056 7968     		ldr	r1, [r7, #4]
 2330 0058 F868     		ldr	r0, [r7, #12]
 2331 005a FFF7FEFF 		bl	i2c_write_nbyte_std
 2332 005e 0346     		mov	r3, r0
 2333 0060 FB75     		strb	r3, [r7, #23]
 2334              		.loc 2 1007 7
 2335 0062 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2336 0064 002B     		cmp	r3, #0
 2337 0066 01D0     		beq	.L120
1008:./i2c/i2c-std.c ****         return error;
 2338              		.loc 2 1008 16
 2339 0068 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2340 006a 0AE0     		b	.L117
 2341              	.L120:
1009:./i2c/i2c-std.c **** 
1010:./i2c/i2c-std.c ****     // generate the stop condition 
1011:./i2c/i2c-std.c ****     if((error=i2c_stop_std(I2CX)))
 2342              		.loc 2 1011 15
 2343 006c F868     		ldr	r0, [r7, #12]
 2344 006e FFF7FEFF 		bl	i2c_stop_std
 2345 0072 0346     		mov	r3, r0
 2346 0074 FB75     		strb	r3, [r7, #23]
 2347              		.loc 2 1011 7
 2348 0076 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2349 0078 002B     		cmp	r3, #0
 2350 007a 01D0     		beq	.L121
1012:./i2c/i2c-std.c ****         return error;
 2351              		.loc 2 1012 16
 2352 007c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2353 007e 00E0     		b	.L117
 2354              	.L121:
1013:./i2c/i2c-std.c **** 
1014:./i2c/i2c-std.c ****     // all operation has succeeded no error to return 
1015:./i2c/i2c-std.c ****     return 0;
 2355              		.loc 2 1015 12
 2356 0080 0023     		movs	r3, #0
 2357              	.L117:
1016:./i2c/i2c-std.c **** }
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s 			page 81


 2358              		.loc 2 1016 1
 2359 0082 1846     		mov	r0, r3
 2360 0084 1837     		adds	r7, r7, #24
 2361              	.LCFI125:
 2362              		.cfi_def_cfa_offset 8
 2363 0086 BD46     		mov	sp, r7
 2364              	.LCFI126:
 2365              		.cfi_def_cfa_register 13
 2366              		@ sp needed
 2367 0088 80BD     		pop	{r7, pc}
 2368              		.cfi_endproc
 2369              	.LFE54:
 2371              		.section	.text.i2c_read_7bit_byte_std,"ax",%progbits
 2372              		.align	1
 2373              		.global	i2c_read_7bit_byte_std
 2374              		.syntax unified
 2375              		.thumb
 2376              		.thumb_func
 2378              	i2c_read_7bit_byte_std:
 2379              	.LFB55:
1017:./i2c/i2c-std.c **** //-------------------------------------------------------------------------------------------------
1018:./i2c/i2c-std.c **** uint8_t i2c_read_7bit_byte_std(I2C_TypeDef* I2CX, uint8_t  slave_address, uint8_t *data)
1019:./i2c/i2c-std.c **** {
 2380              		.loc 2 1019 1
 2381              		.cfi_startproc
 2382              		@ args = 0, pretend = 0, frame = 24
 2383              		@ frame_needed = 1, uses_anonymous_args = 0
 2384 0000 80B5     		push	{r7, lr}
 2385              	.LCFI127:
 2386              		.cfi_def_cfa_offset 8
 2387              		.cfi_offset 7, -8
 2388              		.cfi_offset 14, -4
 2389 0002 86B0     		sub	sp, sp, #24
 2390              	.LCFI128:
 2391              		.cfi_def_cfa_offset 32
 2392 0004 00AF     		add	r7, sp, #0
 2393              	.LCFI129:
 2394              		.cfi_def_cfa_register 7
 2395 0006 F860     		str	r0, [r7, #12]
 2396 0008 0B46     		mov	r3, r1
 2397 000a 7A60     		str	r2, [r7, #4]
 2398 000c FB72     		strb	r3, [r7, #11]
1020:./i2c/i2c-std.c ****   uint8_t error=0;
 2399              		.loc 2 1020 11
 2400 000e 0023     		movs	r3, #0
 2401 0010 FB75     		strb	r3, [r7, #23]
1021:./i2c/i2c-std.c **** 
1022:./i2c/i2c-std.c ****   if((error=i2c_read_7bit_nbyte_std(I2CX,slave_address, (uint8_t *)data, 1)))
 2402              		.loc 2 1022 13
 2403 0012 F97A     		ldrb	r1, [r7, #11]	@ zero_extendqisi2
 2404 0014 0123     		movs	r3, #1
 2405 0016 7A68     		ldr	r2, [r7, #4]
 2406 0018 F868     		ldr	r0, [r7, #12]
 2407 001a FFF7FEFF 		bl	i2c_read_7bit_nbyte_std
 2408 001e 0346     		mov	r3, r0
 2409 0020 FB75     		strb	r3, [r7, #23]
 2410              		.loc 2 1022 5
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s 			page 82


 2411 0022 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2412 0024 002B     		cmp	r3, #0
 2413 0026 01D0     		beq	.L123
1023:./i2c/i2c-std.c ****    return error;
 2414              		.loc 2 1023 11
 2415 0028 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2416 002a 00E0     		b	.L124
 2417              	.L123:
1024:./i2c/i2c-std.c **** 
1025:./i2c/i2c-std.c ****   return I2C_OK;
 2418              		.loc 2 1025 10
 2419 002c 0023     		movs	r3, #0
 2420              	.L124:
1026:./i2c/i2c-std.c **** }
 2421              		.loc 2 1026 1
 2422 002e 1846     		mov	r0, r3
 2423 0030 1837     		adds	r7, r7, #24
 2424              	.LCFI130:
 2425              		.cfi_def_cfa_offset 8
 2426 0032 BD46     		mov	sp, r7
 2427              	.LCFI131:
 2428              		.cfi_def_cfa_register 13
 2429              		@ sp needed
 2430 0034 80BD     		pop	{r7, pc}
 2431              		.cfi_endproc
 2432              	.LFE55:
 2434              		.section	.text.i2c_read_7bit_word_std,"ax",%progbits
 2435              		.align	1
 2436              		.global	i2c_read_7bit_word_std
 2437              		.syntax unified
 2438              		.thumb
 2439              		.thumb_func
 2441              	i2c_read_7bit_word_std:
 2442              	.LFB56:
1027:./i2c/i2c-std.c **** //-------------------------------------------------------------------------------------------------
1028:./i2c/i2c-std.c **** uint8_t i2c_read_7bit_word_std(I2C_TypeDef* I2CX, uint8_t  slave_address, uint16_t *data)
1029:./i2c/i2c-std.c **** {
 2443              		.loc 2 1029 1
 2444              		.cfi_startproc
 2445              		@ args = 0, pretend = 0, frame = 24
 2446              		@ frame_needed = 1, uses_anonymous_args = 0
 2447 0000 80B5     		push	{r7, lr}
 2448              	.LCFI132:
 2449              		.cfi_def_cfa_offset 8
 2450              		.cfi_offset 7, -8
 2451              		.cfi_offset 14, -4
 2452 0002 86B0     		sub	sp, sp, #24
 2453              	.LCFI133:
 2454              		.cfi_def_cfa_offset 32
 2455 0004 00AF     		add	r7, sp, #0
 2456              	.LCFI134:
 2457              		.cfi_def_cfa_register 7
 2458 0006 F860     		str	r0, [r7, #12]
 2459 0008 0B46     		mov	r3, r1
 2460 000a 7A60     		str	r2, [r7, #4]
 2461 000c FB72     		strb	r3, [r7, #11]
1030:./i2c/i2c-std.c ****   uint8_t error=0;
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s 			page 83


 2462              		.loc 2 1030 11
 2463 000e 0023     		movs	r3, #0
 2464 0010 FB75     		strb	r3, [r7, #23]
1031:./i2c/i2c-std.c ****   WORD_BYTES t;
1032:./i2c/i2c-std.c ****   t.word=0;
 2465              		.loc 2 1032 9
 2466 0012 0023     		movs	r3, #0
 2467 0014 BB82     		strh	r3, [r7, #20]	@ movhi
1033:./i2c/i2c-std.c ****   if((error=i2c_read_7bit_nbyte_std(I2CX,slave_address, (uint8_t *)t.bytes, 2)))
 2468              		.loc 2 1033 13
 2469 0016 07F11402 		add	r2, r7, #20
 2470 001a F97A     		ldrb	r1, [r7, #11]	@ zero_extendqisi2
 2471 001c 0223     		movs	r3, #2
 2472 001e F868     		ldr	r0, [r7, #12]
 2473 0020 FFF7FEFF 		bl	i2c_read_7bit_nbyte_std
 2474 0024 0346     		mov	r3, r0
 2475 0026 FB75     		strb	r3, [r7, #23]
 2476              		.loc 2 1033 5
 2477 0028 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2478 002a 002B     		cmp	r3, #0
 2479 002c 01D0     		beq	.L126
1034:./i2c/i2c-std.c ****    return error;
 2480              		.loc 2 1034 11
 2481 002e FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2482 0030 03E0     		b	.L128
 2483              	.L126:
1035:./i2c/i2c-std.c ****   *data=t.word;
 2484              		.loc 2 1035 10
 2485 0032 BA8A     		ldrh	r2, [r7, #20]
 2486              		.loc 2 1035 8
 2487 0034 7B68     		ldr	r3, [r7, #4]
 2488 0036 1A80     		strh	r2, [r3]	@ movhi
1036:./i2c/i2c-std.c ****   return I2C_OK;
 2489              		.loc 2 1036 10
 2490 0038 0023     		movs	r3, #0
 2491              	.L128:
1037:./i2c/i2c-std.c **** }
 2492              		.loc 2 1037 1 discriminator 1
 2493 003a 1846     		mov	r0, r3
 2494 003c 1837     		adds	r7, r7, #24
 2495              	.LCFI135:
 2496              		.cfi_def_cfa_offset 8
 2497 003e BD46     		mov	sp, r7
 2498              	.LCFI136:
 2499              		.cfi_def_cfa_register 13
 2500              		@ sp needed
 2501 0040 80BD     		pop	{r7, pc}
 2502              		.cfi_endproc
 2503              	.LFE56:
 2505              		.section	.text.i2c_read_7bit_nbyte_std,"ax",%progbits
 2506              		.align	1
 2507              		.global	i2c_read_7bit_nbyte_std
 2508              		.syntax unified
 2509              		.thumb
 2510              		.thumb_func
 2512              	i2c_read_7bit_nbyte_std:
 2513              	.LFB57:
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s 			page 84


1038:./i2c/i2c-std.c **** //-------------------------------------------------------------------------------------------------
1039:./i2c/i2c-std.c **** uint8_t i2c_read_7bit_nbyte_std(I2C_TypeDef* I2CX, uint8_t  slave_address, uint8_t *buf, size_t n)
1040:./i2c/i2c-std.c **** {
 2514              		.loc 2 1040 1
 2515              		.cfi_startproc
 2516              		@ args = 0, pretend = 0, frame = 24
 2517              		@ frame_needed = 1, uses_anonymous_args = 0
 2518 0000 80B5     		push	{r7, lr}
 2519              	.LCFI137:
 2520              		.cfi_def_cfa_offset 8
 2521              		.cfi_offset 7, -8
 2522              		.cfi_offset 14, -4
 2523 0002 86B0     		sub	sp, sp, #24
 2524              	.LCFI138:
 2525              		.cfi_def_cfa_offset 32
 2526 0004 00AF     		add	r7, sp, #0
 2527              	.LCFI139:
 2528              		.cfi_def_cfa_register 7
 2529 0006 F860     		str	r0, [r7, #12]
 2530 0008 7A60     		str	r2, [r7, #4]
 2531 000a 3B60     		str	r3, [r7]
 2532 000c 0B46     		mov	r3, r1
 2533 000e FB72     		strb	r3, [r7, #11]
1041:./i2c/i2c-std.c **** 
1042:./i2c/i2c-std.c ****   // get the error of the any sub operation where a non-zero value indicate an error 
1043:./i2c/i2c-std.c ****   uint8_t error=0; 
 2534              		.loc 2 1043 11
 2535 0010 0023     		movs	r3, #0
 2536 0012 FB75     		strb	r3, [r7, #23]
1044:./i2c/i2c-std.c ****  //wait check that the I2c module is not busy
1045:./i2c/i2c-std.c ****     if((error=i2c_ready_std(I2CX)))
 2537              		.loc 2 1045 15
 2538 0014 F868     		ldr	r0, [r7, #12]
 2539 0016 FFF7FEFF 		bl	i2c_ready_std
 2540 001a 0346     		mov	r3, r0
 2541 001c FB75     		strb	r3, [r7, #23]
 2542              		.loc 2 1045 7
 2543 001e FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2544 0020 002B     		cmp	r3, #0
 2545 0022 01D0     		beq	.L130
1046:./i2c/i2c-std.c ****         return error;
 2546              		.loc 2 1046 16
 2547 0024 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2548 0026 37E0     		b	.L131
 2549              	.L130:
1047:./i2c/i2c-std.c **** 
1048:./i2c/i2c-std.c ****   // send the repeat start condition 
1049:./i2c/i2c-std.c ****     if((error=i2c_start_std(I2CX)))
 2550              		.loc 2 1049 15
 2551 0028 F868     		ldr	r0, [r7, #12]
 2552 002a FFF7FEFF 		bl	i2c_start_std
 2553 002e 0346     		mov	r3, r0
 2554 0030 FB75     		strb	r3, [r7, #23]
 2555              		.loc 2 1049 7
 2556 0032 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2557 0034 002B     		cmp	r3, #0
 2558 0036 01D0     		beq	.L132
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s 			page 85


1050:./i2c/i2c-std.c ****         return error;
 2559              		.loc 2 1050 16
 2560 0038 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2561 003a 2DE0     		b	.L131
 2562              	.L132:
1051:./i2c/i2c-std.c ****  // Enable Acknowledgment , clear POS flag
1052:./i2c/i2c-std.c ****      I2C_AcknowledgeConfig(I2CX , ENABLE);
 2563              		.loc 2 1052 6
 2564 003c 0121     		movs	r1, #1
 2565 003e F868     		ldr	r0, [r7, #12]
 2566 0040 FFF7FEFF 		bl	I2C_AcknowledgeConfig
1053:./i2c/i2c-std.c ****      I2C_NACKPositionConfig(I2CX , I2C_NACKPosition_Current);
 2567              		.loc 2 1053 6
 2568 0044 4FF2FF71 		movw	r1, #63487
 2569 0048 F868     		ldr	r0, [r7, #12]
 2570 004a FFF7FEFF 		bl	I2C_NACKPositionConfig
1054:./i2c/i2c-std.c **** 
1055:./i2c/i2c-std.c **** //EV5: send the slave address with a read operation master transmit 
1056:./i2c/i2c-std.c ****     if((error=i2c_send_7bit_slave_address_rd_std(I2CX,slave_address)))
 2571              		.loc 2 1056 15
 2572 004e FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 2573 0050 1946     		mov	r1, r3
 2574 0052 F868     		ldr	r0, [r7, #12]
 2575 0054 FFF7FEFF 		bl	i2c_send_7bit_slave_address_rd_std
 2576 0058 0346     		mov	r3, r0
 2577 005a FB75     		strb	r3, [r7, #23]
 2578              		.loc 2 1056 7
 2579 005c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2580 005e 002B     		cmp	r3, #0
 2581 0060 01D0     		beq	.L133
1057:./i2c/i2c-std.c ****         return error;
 2582              		.loc 2 1057 16
 2583 0062 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2584 0064 18E0     		b	.L131
 2585              	.L133:
1058:./i2c/i2c-std.c **** //EV7:     
1059:./i2c/i2c-std.c ****    if((error=i2c_read_nbyte_std(I2CX,buf,n)))
 2586              		.loc 2 1059 14
 2587 0066 3B68     		ldr	r3, [r7]
 2588 0068 9BB2     		uxth	r3, r3
 2589 006a 1A46     		mov	r2, r3
 2590 006c 7968     		ldr	r1, [r7, #4]
 2591 006e F868     		ldr	r0, [r7, #12]
 2592 0070 FFF7FEFF 		bl	i2c_read_nbyte_std
 2593 0074 0346     		mov	r3, r0
 2594 0076 FB75     		strb	r3, [r7, #23]
 2595              		.loc 2 1059 6
 2596 0078 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2597 007a 002B     		cmp	r3, #0
 2598 007c 01D0     		beq	.L134
1060:./i2c/i2c-std.c ****     return error;
 2599              		.loc 2 1060 12
 2600 007e FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2601 0080 0AE0     		b	.L131
 2602              	.L134:
1061:./i2c/i2c-std.c **** 
1062:./i2c/i2c-std.c **** // generate the stop condition : note stop generation is done implicitly by the  
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s 			page 86


1063:./i2c/i2c-std.c ****    if((error=i2c_wait_stop_event_std(I2CX)))
 2603              		.loc 2 1063 14
 2604 0082 F868     		ldr	r0, [r7, #12]
 2605 0084 FFF7FEFF 		bl	i2c_wait_stop_event_std
 2606 0088 0346     		mov	r3, r0
 2607 008a FB75     		strb	r3, [r7, #23]
 2608              		.loc 2 1063 6
 2609 008c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2610 008e 002B     		cmp	r3, #0
 2611 0090 01D0     		beq	.L135
1064:./i2c/i2c-std.c ****       return error;
 2612              		.loc 2 1064 14
 2613 0092 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2614 0094 00E0     		b	.L131
 2615              	.L135:
1065:./i2c/i2c-std.c **** 
1066:./i2c/i2c-std.c ****     // all operation has succeeded no error to return 
1067:./i2c/i2c-std.c ****     return I2C_OK;
 2616              		.loc 2 1067 12
 2617 0096 0023     		movs	r3, #0
 2618              	.L131:
1068:./i2c/i2c-std.c **** }
 2619              		.loc 2 1068 1
 2620 0098 1846     		mov	r0, r3
 2621 009a 1837     		adds	r7, r7, #24
 2622              	.LCFI140:
 2623              		.cfi_def_cfa_offset 8
 2624 009c BD46     		mov	sp, r7
 2625              	.LCFI141:
 2626              		.cfi_def_cfa_register 13
 2627              		@ sp needed
 2628 009e 80BD     		pop	{r7, pc}
 2629              		.cfi_endproc
 2630              	.LFE57:
 2632              		.section	.text.i2c_write_7bit_base_byte_std,"ax",%progbits
 2633              		.align	1
 2634              		.global	i2c_write_7bit_base_byte_std
 2635              		.syntax unified
 2636              		.thumb
 2637              		.thumb_func
 2639              	i2c_write_7bit_base_byte_std:
 2640              	.LFB58:
1069:./i2c/i2c-std.c **** //-------------------------------------------------------------------------------------------------
1070:./i2c/i2c-std.c **** 
1071:./i2c/i2c-std.c **** 
1072:./i2c/i2c-std.c **** //********************************************************************************************
1073:./i2c/i2c-std.c **** // GROUP B
1074:./i2c/i2c-std.c **** //  extern i2c Methods defnitions using standard peripheral library
1075:./i2c/i2c-std.c **** // read and write directly without definition of a base register address in the slave
1076:./i2c/i2c-std.c **** //
1077:./i2c/i2c-std.c **** //********************************************************************************************
1078:./i2c/i2c-std.c **** uint8_t i2c_write_7bit_base_byte_std(I2C_TypeDef* I2CX, uint8_t  slave_address,uint8_t base_address
1079:./i2c/i2c-std.c **** {
 2641              		.loc 2 1079 1
 2642              		.cfi_startproc
 2643              		@ args = 0, pretend = 0, frame = 16
 2644              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s 			page 87


 2645 0000 80B5     		push	{r7, lr}
 2646              	.LCFI142:
 2647              		.cfi_def_cfa_offset 8
 2648              		.cfi_offset 7, -8
 2649              		.cfi_offset 14, -4
 2650 0002 84B0     		sub	sp, sp, #16
 2651              	.LCFI143:
 2652              		.cfi_def_cfa_offset 24
 2653 0004 00AF     		add	r7, sp, #0
 2654              	.LCFI144:
 2655              		.cfi_def_cfa_register 7
 2656 0006 7860     		str	r0, [r7, #4]
 2657 0008 0846     		mov	r0, r1
 2658 000a 1146     		mov	r1, r2
 2659 000c 1A46     		mov	r2, r3
 2660 000e 0346     		mov	r3, r0
 2661 0010 FB70     		strb	r3, [r7, #3]
 2662 0012 0B46     		mov	r3, r1
 2663 0014 BB70     		strb	r3, [r7, #2]
 2664 0016 1346     		mov	r3, r2
 2665 0018 7B70     		strb	r3, [r7, #1]
1080:./i2c/i2c-std.c **** 
1081:./i2c/i2c-std.c ****  // get the result of any sub operation where a non-zero value indicates an error condition
1082:./i2c/i2c-std.c ****     uint8_t error=0; 
 2666              		.loc 2 1082 13
 2667 001a 0023     		movs	r3, #0
 2668 001c FB73     		strb	r3, [r7, #15]
1083:./i2c/i2c-std.c ****   //uart_print(USART1,"\nTX_BuSY ...\r\n");
1084:./i2c/i2c-std.c ****   //wait check that the I2c module is not busy
1085:./i2c/i2c-std.c ****     if((error=i2c_ready_std(I2CX)))
 2669              		.loc 2 1085 15
 2670 001e 7868     		ldr	r0, [r7, #4]
 2671 0020 FFF7FEFF 		bl	i2c_ready_std
 2672 0024 0346     		mov	r3, r0
 2673 0026 FB73     		strb	r3, [r7, #15]
 2674              		.loc 2 1085 7
 2675 0028 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2676 002a 002B     		cmp	r3, #0
 2677 002c 01D0     		beq	.L137
1086:./i2c/i2c-std.c ****         return error;
 2678              		.loc 2 1086 16
 2679 002e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2680 0030 2DE0     		b	.L138
 2681              	.L137:
1087:./i2c/i2c-std.c ****     
1088:./i2c/i2c-std.c ****   //uart_print(USART1,"TX_SB ...\r\n");
1089:./i2c/i2c-std.c ****   // send the start condition 
1090:./i2c/i2c-std.c ****     if((error=i2c_start_std(I2CX))) 
 2682              		.loc 2 1090 15
 2683 0032 7868     		ldr	r0, [r7, #4]
 2684 0034 FFF7FEFF 		bl	i2c_start_std
 2685 0038 0346     		mov	r3, r0
 2686 003a FB73     		strb	r3, [r7, #15]
 2687              		.loc 2 1090 7
 2688 003c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2689 003e 002B     		cmp	r3, #0
 2690 0040 01D0     		beq	.L139
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s 			page 88


1091:./i2c/i2c-std.c ****         return error;
 2691              		.loc 2 1091 16
 2692 0042 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2693 0044 23E0     		b	.L138
 2694              	.L139:
1092:./i2c/i2c-std.c **** 
1093:./i2c/i2c-std.c ****    //uart_print(USART1,"TX_SLAVE_ADDR ...\r\n");
1094:./i2c/i2c-std.c ****     //EV5: send the slave address with write operation master transmit 
1095:./i2c/i2c-std.c ****     if((error=i2c_send_7bit_slave_address_wr_std(I2CX,slave_address)))
 2695              		.loc 2 1095 15
 2696 0046 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2697 0048 1946     		mov	r1, r3
 2698 004a 7868     		ldr	r0, [r7, #4]
 2699 004c FFF7FEFF 		bl	i2c_send_7bit_slave_address_wr_std
 2700 0050 0346     		mov	r3, r0
 2701 0052 FB73     		strb	r3, [r7, #15]
 2702              		.loc 2 1095 7
 2703 0054 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2704 0056 002B     		cmp	r3, #0
 2705 0058 01D0     		beq	.L140
1096:./i2c/i2c-std.c ****         return error;
 2706              		.loc 2 1096 16
 2707 005a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2708 005c 17E0     		b	.L138
 2709              	.L140:
1097:./i2c/i2c-std.c **** //      (void) I2CX ->SR1;
1098:./i2c/i2c-std.c **** //      (void) I2CX ->SR2; // Clear ADDR flag
1099:./i2c/i2c-std.c **** 
1100:./i2c/i2c-std.c ****    //uart_print(USART1,"TX_BASE_ADDR ...\r\n");
1101:./i2c/i2c-std.c ****     //Ev6: send the byte :: the base address in the slave Memory/register map to start writing to 
1102:./i2c/i2c-std.c ****     i2c_write_byte_std(I2CX,base_address);
 2710              		.loc 2 1102 5
 2711 005e BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 2712 0060 1946     		mov	r1, r3
 2713 0062 7868     		ldr	r0, [r7, #4]
 2714 0064 FFF7FEFF 		bl	i2c_write_byte_std
1103:./i2c/i2c-std.c ****     //if((error=i2c_write_byte_std(I2CX,base_address)))
1104:./i2c/i2c-std.c ****     //    return error;
1105:./i2c/i2c-std.c **** 
1106:./i2c/i2c-std.c ****       //cbits(I2CX->SR1,I2C_SR1_AF);
1107:./i2c/i2c-std.c **** 
1108:./i2c/i2c-std.c ****    //uart_print(USART1,"TX_REG_DATA ...\r\n");
1109:./i2c/i2c-std.c ****     //Ev6: send the byte
1110:./i2c/i2c-std.c ****     i2c_write_byte_std(I2CX,data);
 2715              		.loc 2 1110 5
 2716 0068 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 2717 006a 1946     		mov	r1, r3
 2718 006c 7868     		ldr	r0, [r7, #4]
 2719 006e FFF7FEFF 		bl	i2c_write_byte_std
1111:./i2c/i2c-std.c ****     //if((error=i2c_write_byte_std(I2CX,data))) 
1112:./i2c/i2c-std.c ****     //    return error;
1113:./i2c/i2c-std.c ****      // cbits(I2CX->SR1,I2C_SR1_AF);
1114:./i2c/i2c-std.c **** 
1115:./i2c/i2c-std.c ****    //uart_print(USART1,"TX_STOP ...\r\n");
1116:./i2c/i2c-std.c ****     // generate the stop condition 
1117:./i2c/i2c-std.c ****     i2c_stop_std(I2CX);
 2720              		.loc 2 1117 5
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s 			page 89


 2721 0072 7868     		ldr	r0, [r7, #4]
 2722 0074 FFF7FEFF 		bl	i2c_stop_std
1118:./i2c/i2c-std.c ****     if((error=i2c_stop_std(I2CX)))
 2723              		.loc 2 1118 15
 2724 0078 7868     		ldr	r0, [r7, #4]
 2725 007a FFF7FEFF 		bl	i2c_stop_std
 2726 007e 0346     		mov	r3, r0
 2727 0080 FB73     		strb	r3, [r7, #15]
 2728              		.loc 2 1118 7
 2729 0082 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2730 0084 002B     		cmp	r3, #0
 2731 0086 01D0     		beq	.L141
1119:./i2c/i2c-std.c ****         return error;
 2732              		.loc 2 1119 16
 2733 0088 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2734 008a 00E0     		b	.L138
 2735              	.L141:
1120:./i2c/i2c-std.c **** 
1121:./i2c/i2c-std.c ****     return I2C_OK;
 2736              		.loc 2 1121 12
 2737 008c 0023     		movs	r3, #0
 2738              	.L138:
1122:./i2c/i2c-std.c **** }
 2739              		.loc 2 1122 1
 2740 008e 1846     		mov	r0, r3
 2741 0090 1037     		adds	r7, r7, #16
 2742              	.LCFI145:
 2743              		.cfi_def_cfa_offset 8
 2744 0092 BD46     		mov	sp, r7
 2745              	.LCFI146:
 2746              		.cfi_def_cfa_register 13
 2747              		@ sp needed
 2748 0094 80BD     		pop	{r7, pc}
 2749              		.cfi_endproc
 2750              	.LFE58:
 2752              		.section	.text.i2c_write_7bit_base_nbyte_std,"ax",%progbits
 2753              		.align	1
 2754              		.global	i2c_write_7bit_base_nbyte_std
 2755              		.syntax unified
 2756              		.thumb
 2757              		.thumb_func
 2759              	i2c_write_7bit_base_nbyte_std:
 2760              	.LFB59:
1123:./i2c/i2c-std.c **** //-------------------------------------------------------------------------------------------------
1124:./i2c/i2c-std.c **** uint8_t i2c_write_7bit_base_nbyte_std(I2C_TypeDef* I2CX, uint8_t  slave_address,uint8_t base_addres
1125:./i2c/i2c-std.c **** {
 2761              		.loc 2 1125 1
 2762              		.cfi_startproc
 2763              		@ args = 4, pretend = 0, frame = 24
 2764              		@ frame_needed = 1, uses_anonymous_args = 0
 2765 0000 80B5     		push	{r7, lr}
 2766              	.LCFI147:
 2767              		.cfi_def_cfa_offset 8
 2768              		.cfi_offset 7, -8
 2769              		.cfi_offset 14, -4
 2770 0002 86B0     		sub	sp, sp, #24
 2771              	.LCFI148:
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s 			page 90


 2772              		.cfi_def_cfa_offset 32
 2773 0004 00AF     		add	r7, sp, #0
 2774              	.LCFI149:
 2775              		.cfi_def_cfa_register 7
 2776 0006 F860     		str	r0, [r7, #12]
 2777 0008 7B60     		str	r3, [r7, #4]
 2778 000a 0B46     		mov	r3, r1
 2779 000c FB72     		strb	r3, [r7, #11]
 2780 000e 1346     		mov	r3, r2
 2781 0010 BB72     		strb	r3, [r7, #10]
1126:./i2c/i2c-std.c ****  // get the error of the any sub operation where a non-zero value indicate an error 
1127:./i2c/i2c-std.c ****   uint8_t error=0; 
 2782              		.loc 2 1127 11
 2783 0012 0023     		movs	r3, #0
 2784 0014 FB75     		strb	r3, [r7, #23]
1128:./i2c/i2c-std.c **** 
1129:./i2c/i2c-std.c ****   //wait check that the I2c module is not busy
1130:./i2c/i2c-std.c ****     if((error=i2c_ready_std(I2CX))) 
 2785              		.loc 2 1130 15
 2786 0016 F868     		ldr	r0, [r7, #12]
 2787 0018 FFF7FEFF 		bl	i2c_ready_std
 2788 001c 0346     		mov	r3, r0
 2789 001e FB75     		strb	r3, [r7, #23]
 2790              		.loc 2 1130 7
 2791 0020 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2792 0022 002B     		cmp	r3, #0
 2793 0024 01D0     		beq	.L143
1131:./i2c/i2c-std.c ****         return error;
 2794              		.loc 2 1131 16
 2795 0026 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2796 0028 38E0     		b	.L144
 2797              	.L143:
1132:./i2c/i2c-std.c ****   // send the start condition 
1133:./i2c/i2c-std.c ****     if((error=i2c_start_std(I2CX)))
 2798              		.loc 2 1133 15
 2799 002a F868     		ldr	r0, [r7, #12]
 2800 002c FFF7FEFF 		bl	i2c_start_std
 2801 0030 0346     		mov	r3, r0
 2802 0032 FB75     		strb	r3, [r7, #23]
 2803              		.loc 2 1133 7
 2804 0034 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2805 0036 002B     		cmp	r3, #0
 2806 0038 01D0     		beq	.L145
1134:./i2c/i2c-std.c ****         return error;
 2807              		.loc 2 1134 16
 2808 003a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2809 003c 2EE0     		b	.L144
 2810              	.L145:
1135:./i2c/i2c-std.c **** 
1136:./i2c/i2c-std.c ****     //EV5: send the slave address with write operation master transmit 
1137:./i2c/i2c-std.c ****     if((error=i2c_send_7bit_slave_address_wr_std(I2CX,slave_address)))
 2811              		.loc 2 1137 15
 2812 003e FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 2813 0040 1946     		mov	r1, r3
 2814 0042 F868     		ldr	r0, [r7, #12]
 2815 0044 FFF7FEFF 		bl	i2c_send_7bit_slave_address_wr_std
 2816 0048 0346     		mov	r3, r0
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s 			page 91


 2817 004a FB75     		strb	r3, [r7, #23]
 2818              		.loc 2 1137 7
 2819 004c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2820 004e 002B     		cmp	r3, #0
 2821 0050 01D0     		beq	.L146
1138:./i2c/i2c-std.c ****         return error;
 2822              		.loc 2 1138 16
 2823 0052 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2824 0054 22E0     		b	.L144
 2825              	.L146:
1139:./i2c/i2c-std.c **** 
1140:./i2c/i2c-std.c ****     //Ev6: send the byte :: the base address in the slave Memory/register map to start writing to 
1141:./i2c/i2c-std.c ****     if((error=i2c_write_byte_std(I2CX,base_address))) 
 2826              		.loc 2 1141 15
 2827 0056 BB7A     		ldrb	r3, [r7, #10]	@ zero_extendqisi2
 2828 0058 1946     		mov	r1, r3
 2829 005a F868     		ldr	r0, [r7, #12]
 2830 005c FFF7FEFF 		bl	i2c_write_byte_std
 2831 0060 0346     		mov	r3, r0
 2832 0062 FB75     		strb	r3, [r7, #23]
 2833              		.loc 2 1141 7
 2834 0064 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2835 0066 002B     		cmp	r3, #0
 2836 0068 01D0     		beq	.L147
1142:./i2c/i2c-std.c ****         return error;
 2837              		.loc 2 1142 16
 2838 006a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2839 006c 16E0     		b	.L144
 2840              	.L147:
1143:./i2c/i2c-std.c **** 
1144:./i2c/i2c-std.c ****     //Ev6: send the byte
1145:./i2c/i2c-std.c ****     if((error=i2c_write_nbyte_std(I2CX,buf,n))) 
 2841              		.loc 2 1145 15
 2842 006e 3A6A     		ldr	r2, [r7, #32]
 2843 0070 7968     		ldr	r1, [r7, #4]
 2844 0072 F868     		ldr	r0, [r7, #12]
 2845 0074 FFF7FEFF 		bl	i2c_write_nbyte_std
 2846 0078 0346     		mov	r3, r0
 2847 007a FB75     		strb	r3, [r7, #23]
 2848              		.loc 2 1145 7
 2849 007c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2850 007e 002B     		cmp	r3, #0
 2851 0080 01D0     		beq	.L148
1146:./i2c/i2c-std.c ****         return error;
 2852              		.loc 2 1146 16
 2853 0082 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2854 0084 0AE0     		b	.L144
 2855              	.L148:
1147:./i2c/i2c-std.c **** 
1148:./i2c/i2c-std.c ****     // generate the stop condition 
1149:./i2c/i2c-std.c ****     if((error=i2c_stop_std(I2CX))) 
 2856              		.loc 2 1149 15
 2857 0086 F868     		ldr	r0, [r7, #12]
 2858 0088 FFF7FEFF 		bl	i2c_stop_std
 2859 008c 0346     		mov	r3, r0
 2860 008e FB75     		strb	r3, [r7, #23]
 2861              		.loc 2 1149 7
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s 			page 92


 2862 0090 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2863 0092 002B     		cmp	r3, #0
 2864 0094 01D0     		beq	.L149
1150:./i2c/i2c-std.c ****         return error;
 2865              		.loc 2 1150 16
 2866 0096 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2867 0098 00E0     		b	.L144
 2868              	.L149:
1151:./i2c/i2c-std.c **** 
1152:./i2c/i2c-std.c ****     // all operation has succeeded no error to return 
1153:./i2c/i2c-std.c ****     return 0;
 2869              		.loc 2 1153 12
 2870 009a 0023     		movs	r3, #0
 2871              	.L144:
1154:./i2c/i2c-std.c **** 
1155:./i2c/i2c-std.c **** }
 2872              		.loc 2 1155 1
 2873 009c 1846     		mov	r0, r3
 2874 009e 1837     		adds	r7, r7, #24
 2875              	.LCFI150:
 2876              		.cfi_def_cfa_offset 8
 2877 00a0 BD46     		mov	sp, r7
 2878              	.LCFI151:
 2879              		.cfi_def_cfa_register 13
 2880              		@ sp needed
 2881 00a2 80BD     		pop	{r7, pc}
 2882              		.cfi_endproc
 2883              	.LFE59:
 2885              		.section	.text.i2c_read_7bit_base_byte_std,"ax",%progbits
 2886              		.align	1
 2887              		.global	i2c_read_7bit_base_byte_std
 2888              		.syntax unified
 2889              		.thumb
 2890              		.thumb_func
 2892              	i2c_read_7bit_base_byte_std:
 2893              	.LFB60:
1156:./i2c/i2c-std.c **** //-------------------------------------------------------------------------------------------------
1157:./i2c/i2c-std.c **** uint8_t i2c_read_7bit_base_byte_std(I2C_TypeDef* I2CX, uint8_t  slave_address,uint8_t base_address,
1158:./i2c/i2c-std.c **** {
 2894              		.loc 2 1158 1
 2895              		.cfi_startproc
 2896              		@ args = 0, pretend = 0, frame = 24
 2897              		@ frame_needed = 1, uses_anonymous_args = 0
 2898 0000 80B5     		push	{r7, lr}
 2899              	.LCFI152:
 2900              		.cfi_def_cfa_offset 8
 2901              		.cfi_offset 7, -8
 2902              		.cfi_offset 14, -4
 2903 0002 88B0     		sub	sp, sp, #32
 2904              	.LCFI153:
 2905              		.cfi_def_cfa_offset 40
 2906 0004 02AF     		add	r7, sp, #8
 2907              	.LCFI154:
 2908              		.cfi_def_cfa 7, 32
 2909 0006 F860     		str	r0, [r7, #12]
 2910 0008 7B60     		str	r3, [r7, #4]
 2911 000a 0B46     		mov	r3, r1
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s 			page 93


 2912 000c FB72     		strb	r3, [r7, #11]
 2913 000e 1346     		mov	r3, r2
 2914 0010 BB72     		strb	r3, [r7, #10]
1159:./i2c/i2c-std.c ****    
1160:./i2c/i2c-std.c ****   uint8_t error=0;
 2915              		.loc 2 1160 11
 2916 0012 0023     		movs	r3, #0
 2917 0014 FB75     		strb	r3, [r7, #23]
1161:./i2c/i2c-std.c ****    error=i2c_read_7bit_base_nbyte_std(I2CX,slave_address,base_address,(uint8_t *)data, 1);
 2918              		.loc 2 1161 10
 2919 0016 BA7A     		ldrb	r2, [r7, #10]	@ zero_extendqisi2
 2920 0018 F97A     		ldrb	r1, [r7, #11]	@ zero_extendqisi2
 2921 001a 0123     		movs	r3, #1
 2922 001c 0093     		str	r3, [sp]
 2923 001e 7B68     		ldr	r3, [r7, #4]
 2924 0020 F868     		ldr	r0, [r7, #12]
 2925 0022 FFF7FEFF 		bl	i2c_read_7bit_base_nbyte_std
 2926 0026 0346     		mov	r3, r0
 2927 0028 FB75     		strb	r3, [r7, #23]
1162:./i2c/i2c-std.c ****    //uart_print(USART1,"RX DATA:");
1163:./i2c/i2c-std.c ****    //uart_print_integer(USART1,*data,16);
1164:./i2c/i2c-std.c ****    //uart_print(USART1,"\r\n");
1165:./i2c/i2c-std.c ****   if(error!=I2C_OK)
 2928              		.loc 2 1165 5
 2929 002a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2930 002c 002B     		cmp	r3, #0
 2931 002e 01D0     		beq	.L151
1166:./i2c/i2c-std.c ****    return error;
 2932              		.loc 2 1166 11
 2933 0030 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2934 0032 00E0     		b	.L152
 2935              	.L151:
1167:./i2c/i2c-std.c ****   return I2C_OK;
 2936              		.loc 2 1167 10
 2937 0034 0023     		movs	r3, #0
 2938              	.L152:
1168:./i2c/i2c-std.c ****   
1169:./i2c/i2c-std.c ****   /*
1170:./i2c/i2c-std.c ****   // get the error of the any sub operation where a non-zero value indicate an error 
1171:./i2c/i2c-std.c ****   uint8_t error=0; 
1172:./i2c/i2c-std.c ****  //wait check that the I2c module is not busy
1173:./i2c/i2c-std.c ****     uart_print(USART1,"\nRX_BuSY ...\r\n");
1174:./i2c/i2c-std.c ****     error=i2c_ready_std(I2CX);
1175:./i2c/i2c-std.c ****     if(error)//(error=i2c_ready_std(I2CX))) 
1176:./i2c/i2c-std.c ****       return error;
1177:./i2c/i2c-std.c ****  
1178:./i2c/i2c-std.c ****   // send the start condition 
1179:./i2c/i2c-std.c **** //    uart_print(USART1,"start condition:");
1180:./i2c/i2c-std.c ****     uart_print(USART1,"RX_SB ...\r\n");
1181:./i2c/i2c-std.c ****     error=i2c_start_std(I2CX);
1182:./i2c/i2c-std.c ****     if(error)//(error=i2c_start_std(I2CX)))
1183:./i2c/i2c-std.c ****         return error;
1184:./i2c/i2c-std.c **** 
1185:./i2c/i2c-std.c ****     uart_print(USART1,"RX_SLAVE_ADDR ...\r\n");
1186:./i2c/i2c-std.c ****     //EV5: send the slave address with write operation master transmit 
1187:./i2c/i2c-std.c ****     error=i2c_send_7bit_slave_address_wr_std(I2CX,slave_address);
1188:./i2c/i2c-std.c ****     if(error)//(error=i2c_send_7bit_slave_address_wr_std(I2CX,slave_address)))
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s 			page 94


1189:./i2c/i2c-std.c ****         return error;
1190:./i2c/i2c-std.c **** 
1191:./i2c/i2c-std.c **** //    uart_print(USART1,"REG:");
1192:./i2c/i2c-std.c ****     uart_print(USART1,"RX_REG_DATA ...\r\n");
1193:./i2c/i2c-std.c ****     //Ev6: send the base byte
1194:./i2c/i2c-std.c ****     error=i2c_write_byte_std(I2CX,base_address);
1195:./i2c/i2c-std.c ****     if(error)//(error=i2c_write_byte_std(I2CX,base_address))) 
1196:./i2c/i2c-std.c ****       return error;
1197:./i2c/i2c-std.c **** 
1198:./i2c/i2c-std.c ****   // send the repeat start condition 
1199:./i2c/i2c-std.c ****     uart_print(USART1,"repeat start....\r\n");
1200:./i2c/i2c-std.c ****     error=i2c_start_std(I2CX);
1201:./i2c/i2c-std.c ****     if(error)//(error=i2c_start_std(I2CX)))
1202:./i2c/i2c-std.c ****         return error;
1203:./i2c/i2c-std.c **** 
1204:./i2c/i2c-std.c ****  // Enable Acknowledgment , clear POS flag
1205:./i2c/i2c-std.c ****     I2C_AcknowledgeConfig(I2CX , ENABLE);
1206:./i2c/i2c-std.c ****     I2C_NACKPositionConfig(I2CX , I2C_NACKPosition_Current);
1207:./i2c/i2c-std.c **** 
1208:./i2c/i2c-std.c ****  //EV5: send the slave address with read operation master transmit 
1209:./i2c/i2c-std.c ****     uart_print(USART1,"RX_ Slave RD: \r\n");
1210:./i2c/i2c-std.c ****     error=i2c_send_7bit_slave_address_rd_std(I2CX,slave_address);
1211:./i2c/i2c-std.c ****     if(error)//(error=i2c_send_7bit_slave_address_rd_std(I2CX,slave_address)))
1212:./i2c/i2c-std.c ****       return error;
1213:./i2c/i2c-std.c ****      (void)I2CX->SR1;
1214:./i2c/i2c-std.c ****      (void)I2CX->SR2;
1215:./i2c/i2c-std.c **** 
1216:./i2c/i2c-std.c ****     uart_print(USART1,"RX_DATA:");
1217:./i2c/i2c-std.c ****     error=i2c_read_lastbyte_std(I2CX,data);
1218:./i2c/i2c-std.c ****     uart_print_integer(USART1,*data,16);
1219:./i2c/i2c-std.c ****     uart_print(USART1,"\r\n");
1220:./i2c/i2c-std.c **** 
1221:./i2c/i2c-std.c ****    if(error)//(error=i2c_read_lastbyte_std(I2CX,data)))
1222:./i2c/i2c-std.c ****     return error;    
1223:./i2c/i2c-std.c **** 
1224:./i2c/i2c-std.c ****   // generate the stop condition : note stop generation is done implicitly by the  
1225:./i2c/i2c-std.c ****     uart_print(USART1,"RX_STOP :\r\n");
1226:./i2c/i2c-std.c ****     error=i2c_stop_std(I2CX);
1227:./i2c/i2c-std.c ****     if(error)//(error=i2c_stop_std(I2CX)))// if((error=i2c_wait_stop_event_std(I2CX)))
1228:./i2c/i2c-std.c ****       return error;
1229:./i2c/i2c-std.c **** 
1230:./i2c/i2c-std.c ****   // all operation has succeeded no error to return 
1231:./i2c/i2c-std.c ****     return I2C_OK;
1232:./i2c/i2c-std.c ****     */
1233:./i2c/i2c-std.c **** }
 2939              		.loc 2 1233 1
 2940 0036 1846     		mov	r0, r3
 2941 0038 1837     		adds	r7, r7, #24
 2942              	.LCFI155:
 2943              		.cfi_def_cfa_offset 8
 2944 003a BD46     		mov	sp, r7
 2945              	.LCFI156:
 2946              		.cfi_def_cfa_register 13
 2947              		@ sp needed
 2948 003c 80BD     		pop	{r7, pc}
 2949              		.cfi_endproc
 2950              	.LFE60:
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s 			page 95


 2952              		.section	.text.i2c_read_7bit_base_word_std,"ax",%progbits
 2953              		.align	1
 2954              		.global	i2c_read_7bit_base_word_std
 2955              		.syntax unified
 2956              		.thumb
 2957              		.thumb_func
 2959              	i2c_read_7bit_base_word_std:
 2960              	.LFB61:
1234:./i2c/i2c-std.c **** //-------------------------------------------------------------------------------------------------
1235:./i2c/i2c-std.c **** uint8_t i2c_read_7bit_base_word_std(I2C_TypeDef* I2CX, uint8_t  slave_address,uint8_t base_address,
1236:./i2c/i2c-std.c **** {
 2961              		.loc 2 1236 1
 2962              		.cfi_startproc
 2963              		@ args = 0, pretend = 0, frame = 24
 2964              		@ frame_needed = 1, uses_anonymous_args = 0
 2965 0000 80B5     		push	{r7, lr}
 2966              	.LCFI157:
 2967              		.cfi_def_cfa_offset 8
 2968              		.cfi_offset 7, -8
 2969              		.cfi_offset 14, -4
 2970 0002 88B0     		sub	sp, sp, #32
 2971              	.LCFI158:
 2972              		.cfi_def_cfa_offset 40
 2973 0004 02AF     		add	r7, sp, #8
 2974              	.LCFI159:
 2975              		.cfi_def_cfa 7, 32
 2976 0006 F860     		str	r0, [r7, #12]
 2977 0008 7B60     		str	r3, [r7, #4]
 2978 000a 0B46     		mov	r3, r1
 2979 000c FB72     		strb	r3, [r7, #11]
 2980 000e 1346     		mov	r3, r2
 2981 0010 BB72     		strb	r3, [r7, #10]
1237:./i2c/i2c-std.c ****   uint8_t error=0;
 2982              		.loc 2 1237 11
 2983 0012 0023     		movs	r3, #0
 2984 0014 FB75     		strb	r3, [r7, #23]
1238:./i2c/i2c-std.c ****   WORD_BYTES t;
1239:./i2c/i2c-std.c ****    t.word=0;
 2985              		.loc 2 1239 10
 2986 0016 0023     		movs	r3, #0
 2987 0018 BB82     		strh	r3, [r7, #20]	@ movhi
1240:./i2c/i2c-std.c ****   if((error=i2c_read_7bit_base_nbyte_std(I2CX,slave_address,base_address,(uint8_t *)t.bytes, 2)))
 2988              		.loc 2 1240 13
 2989 001a 07F11403 		add	r3, r7, #20
 2990 001e BA7A     		ldrb	r2, [r7, #10]	@ zero_extendqisi2
 2991 0020 F97A     		ldrb	r1, [r7, #11]	@ zero_extendqisi2
 2992 0022 0220     		movs	r0, #2
 2993 0024 0090     		str	r0, [sp]
 2994 0026 F868     		ldr	r0, [r7, #12]
 2995 0028 FFF7FEFF 		bl	i2c_read_7bit_base_nbyte_std
 2996 002c 0346     		mov	r3, r0
 2997 002e FB75     		strb	r3, [r7, #23]
 2998              		.loc 2 1240 5
 2999 0030 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 3000 0032 002B     		cmp	r3, #0
 3001 0034 01D0     		beq	.L154
1241:./i2c/i2c-std.c ****     return error;
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s 			page 96


 3002              		.loc 2 1241 12
 3003 0036 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 3004 0038 03E0     		b	.L156
 3005              	.L154:
1242:./i2c/i2c-std.c ****    *data=t.word;
 3006              		.loc 2 1242 11
 3007 003a BA8A     		ldrh	r2, [r7, #20]
 3008              		.loc 2 1242 9
 3009 003c 7B68     		ldr	r3, [r7, #4]
 3010 003e 1A80     		strh	r2, [r3]	@ movhi
1243:./i2c/i2c-std.c ****   return I2C_OK;
 3011              		.loc 2 1243 10
 3012 0040 0023     		movs	r3, #0
 3013              	.L156:
1244:./i2c/i2c-std.c ****   /*
1245:./i2c/i2c-std.c ****   // get the error of the any sub operation where a non-zero value indicate an error 
1246:./i2c/i2c-std.c ****   uint8_t error=0; 
1247:./i2c/i2c-std.c ****   uint8_t buf[2]; 
1248:./i2c/i2c-std.c ****   
1249:./i2c/i2c-std.c ****  //wait check that the I2c module is not busy
1250:./i2c/i2c-std.c ****     if((error=i2c_ready_std(I2CX))) 
1251:./i2c/i2c-std.c ****         return error;
1252:./i2c/i2c-std.c **** 
1253:./i2c/i2c-std.c ****   // send the start condition  (wait for EV5) as the end of start condition
1254:./i2c/i2c-std.c ****     if((error=i2c_start_std(I2CX))) 
1255:./i2c/i2c-std.c ****         return error;
1256:./i2c/i2c-std.c **** 
1257:./i2c/i2c-std.c ****     //EV5: send the slave address with write operation master transmit 
1258:./i2c/i2c-std.c ****     if((error=i2c_send_7bit_slave_address_wr_std(I2CX,slave_address)))
1259:./i2c/i2c-std.c ****         return error;
1260:./i2c/i2c-std.c **** 
1261:./i2c/i2c-std.c ****     //Ev6: send the base byte
1262:./i2c/i2c-std.c ****     if((error=i2c_write_byte_std(I2CX,base_address))) 
1263:./i2c/i2c-std.c ****         return error;
1264:./i2c/i2c-std.c **** 
1265:./i2c/i2c-std.c ****   // send the repeat start condition 
1266:./i2c/i2c-std.c ****     if((error=i2c_start_std(I2CX))) 
1267:./i2c/i2c-std.c ****         return error;
1268:./i2c/i2c-std.c ****  // Enable Acknowledgment , clear POS flag
1269:./i2c/i2c-std.c ****      I2C_AcknowledgeConfig(I2CX , ENABLE);
1270:./i2c/i2c-std.c ****      I2C_NACKPositionConfig(I2CX, I2C_NACKPosition_Current);
1271:./i2c/i2c-std.c **** 
1272:./i2c/i2c-std.c **** //EV5: send the slave address with read operation master transmit 
1273:./i2c/i2c-std.c ****     if((error=i2c_send_7bit_slave_address_rd_std(I2CX,slave_address)))
1274:./i2c/i2c-std.c ****         return error;
1275:./i2c/i2c-std.c ****      
1276:./i2c/i2c-std.c ****    if((error=i2c_read_last2byte_std(I2CX,buf)))
1277:./i2c/i2c-std.c ****     return error;
1278:./i2c/i2c-std.c ****     *data=(uint16_t)(buf[1]<<8 | buf[0]); 
1279:./i2c/i2c-std.c ****     // generate the stop condition : note stop generation is done implicitly by the  
1280:./i2c/i2c-std.c ****     if((error=i2c_wait_stop_event_std(I2CX)))
1281:./i2c/i2c-std.c ****         return error;
1282:./i2c/i2c-std.c **** 
1283:./i2c/i2c-std.c ****     // all operation has succeeded no error to return 
1284:./i2c/i2c-std.c ****     return I2C_OK;
1285:./i2c/i2c-std.c ****     */
1286:./i2c/i2c-std.c **** }
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s 			page 97


 3014              		.loc 2 1286 1 discriminator 1
 3015 0042 1846     		mov	r0, r3
 3016 0044 1837     		adds	r7, r7, #24
 3017              	.LCFI160:
 3018              		.cfi_def_cfa_offset 8
 3019 0046 BD46     		mov	sp, r7
 3020              	.LCFI161:
 3021              		.cfi_def_cfa_register 13
 3022              		@ sp needed
 3023 0048 80BD     		pop	{r7, pc}
 3024              		.cfi_endproc
 3025              	.LFE61:
 3027              		.section	.text.i2c_read_7bit_base_nbyte_std,"ax",%progbits
 3028              		.align	1
 3029              		.global	i2c_read_7bit_base_nbyte_std
 3030              		.syntax unified
 3031              		.thumb
 3032              		.thumb_func
 3034              	i2c_read_7bit_base_nbyte_std:
 3035              	.LFB62:
1287:./i2c/i2c-std.c **** //-------------------------------------------------------------------------------------------------
1288:./i2c/i2c-std.c **** uint8_t i2c_read_7bit_base_nbyte_std(I2C_TypeDef* I2CX, uint8_t  slave_address,uint8_t base_address
1289:./i2c/i2c-std.c **** {
 3036              		.loc 2 1289 1
 3037              		.cfi_startproc
 3038              		@ args = 4, pretend = 0, frame = 24
 3039              		@ frame_needed = 1, uses_anonymous_args = 0
 3040 0000 80B5     		push	{r7, lr}
 3041              	.LCFI162:
 3042              		.cfi_def_cfa_offset 8
 3043              		.cfi_offset 7, -8
 3044              		.cfi_offset 14, -4
 3045 0002 86B0     		sub	sp, sp, #24
 3046              	.LCFI163:
 3047              		.cfi_def_cfa_offset 32
 3048 0004 00AF     		add	r7, sp, #0
 3049              	.LCFI164:
 3050              		.cfi_def_cfa_register 7
 3051 0006 F860     		str	r0, [r7, #12]
 3052 0008 7B60     		str	r3, [r7, #4]
 3053 000a 0B46     		mov	r3, r1
 3054 000c FB72     		strb	r3, [r7, #11]
 3055 000e 1346     		mov	r3, r2
 3056 0010 BB72     		strb	r3, [r7, #10]
1290:./i2c/i2c-std.c ****   // get the error of the any sub operation where a non-zero value indicate an error 
1291:./i2c/i2c-std.c ****   uint8_t error=0; 
 3057              		.loc 2 1291 11
 3058 0012 0023     		movs	r3, #0
 3059 0014 FB75     		strb	r3, [r7, #23]
1292:./i2c/i2c-std.c **** 
1293:./i2c/i2c-std.c ****  //wait check that the I2c module is not busy
1294:./i2c/i2c-std.c ****   //wait check that the I2c module is not busy
1295:./i2c/i2c-std.c ****     //uart_print(USART1,"\nRX_BuSY ...\r\n");
1296:./i2c/i2c-std.c ****     if((error=i2c_ready_std(I2CX))) 
 3060              		.loc 2 1296 15
 3061 0016 F868     		ldr	r0, [r7, #12]
 3062 0018 FFF7FEFF 		bl	i2c_ready_std
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s 			page 98


 3063 001c 0346     		mov	r3, r0
 3064 001e FB75     		strb	r3, [r7, #23]
 3065              		.loc 2 1296 7
 3066 0020 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 3067 0022 002B     		cmp	r3, #0
 3068 0024 01D0     		beq	.L158
1297:./i2c/i2c-std.c ****         return error;
 3069              		.loc 2 1297 16
 3070 0026 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 3071 0028 50E0     		b	.L159
 3072              	.L158:
1298:./i2c/i2c-std.c ****     
1299:./i2c/i2c-std.c ****    /* Enable I2C peripheral */
1300:./i2c/i2c-std.c ****      //SET_BIT(I2CX->CR1, I2C_CR1_PE);               // done
1301:./i2c/i2c-std.c ****    /* Disable Pos */
1302:./i2c/i2c-std.c ****      //CLEAR_BIT(I2CX->CR1, I2C_CR1_POS);            // done
1303:./i2c/i2c-std.c ****    /* Enable Acknowledge */
1304:./i2c/i2c-std.c ****      //SET_BIT(I2CX->CR1, I2C_CR1_ACK);    // done
1305:./i2c/i2c-std.c ****     /* Generate Start */
1306:./i2c/i2c-std.c ****      //SET_BIT(I2CX->CR1, I2C_CR1_START);  // done
1307:./i2c/i2c-std.c **** 
1308:./i2c/i2c-std.c **** 
1309:./i2c/i2c-std.c ****   // send the start condition 
1310:./i2c/i2c-std.c ****     //uart_print(USART1,"RX_SB ...\r\n");
1311:./i2c/i2c-std.c ****     error=i2c_start_std(I2CX);
 3073              		.loc 2 1311 11
 3074 002a F868     		ldr	r0, [r7, #12]
 3075 002c FFF7FEFF 		bl	i2c_start_std
 3076 0030 0346     		mov	r3, r0
 3077 0032 FB75     		strb	r3, [r7, #23]
1312:./i2c/i2c-std.c ****     if(error) 
 3078              		.loc 2 1312 7
 3079 0034 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 3080 0036 002B     		cmp	r3, #0
 3081 0038 01D0     		beq	.L160
1313:./i2c/i2c-std.c ****         return error;
 3082              		.loc 2 1313 16
 3083 003a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 3084 003c 46E0     		b	.L159
 3085              	.L160:
1314:./i2c/i2c-std.c **** 
1315:./i2c/i2c-std.c ****     //EV5: send the slave address with write operation master transmit 
1316:./i2c/i2c-std.c ****     //uart_print(USART1,"RX_SLAVE_ADDR_WR ...\r\n");
1317:./i2c/i2c-std.c ****     error=i2c_send_7bit_slave_address_wr_std(I2CX,slave_address);
 3086              		.loc 2 1317 11
 3087 003e FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 3088 0040 1946     		mov	r1, r3
 3089 0042 F868     		ldr	r0, [r7, #12]
 3090 0044 FFF7FEFF 		bl	i2c_send_7bit_slave_address_wr_std
 3091 0048 0346     		mov	r3, r0
 3092 004a FB75     		strb	r3, [r7, #23]
1318:./i2c/i2c-std.c ****     if(error)
 3093              		.loc 2 1318 7
 3094 004c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 3095 004e 002B     		cmp	r3, #0
 3096 0050 01D0     		beq	.L161
1319:./i2c/i2c-std.c ****         return error;
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s 			page 99


 3097              		.loc 2 1319 16
 3098 0052 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 3099 0054 3AE0     		b	.L159
 3100              	.L161:
1320:./i2c/i2c-std.c **** 
1321:./i2c/i2c-std.c ****     //Ev6: send the base byte
1322:./i2c/i2c-std.c ****     //uart_print(USART1,"RX_REG_DATA ...\r\n");
1323:./i2c/i2c-std.c ****     error=i2c_write_byte_std(I2CX,base_address);
 3101              		.loc 2 1323 11
 3102 0056 BB7A     		ldrb	r3, [r7, #10]	@ zero_extendqisi2
 3103 0058 1946     		mov	r1, r3
 3104 005a F868     		ldr	r0, [r7, #12]
 3105 005c FFF7FEFF 		bl	i2c_write_byte_std
 3106 0060 0346     		mov	r3, r0
 3107 0062 FB75     		strb	r3, [r7, #23]
1324:./i2c/i2c-std.c ****     if(error)
 3108              		.loc 2 1324 7
 3109 0064 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 3110 0066 002B     		cmp	r3, #0
 3111 0068 01D0     		beq	.L162
1325:./i2c/i2c-std.c ****         return error;
 3112              		.loc 2 1325 16
 3113 006a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 3114 006c 2EE0     		b	.L159
 3115              	.L162:
1326:./i2c/i2c-std.c ****         
1327:./i2c/i2c-std.c ****   // send the repeat start condition 
1328:./i2c/i2c-std.c ****     //uart_print(USART1,"repeat start....\r\n");
1329:./i2c/i2c-std.c ****     error=i2c_start_std(I2CX);
 3116              		.loc 2 1329 11
 3117 006e F868     		ldr	r0, [r7, #12]
 3118 0070 FFF7FEFF 		bl	i2c_start_std
 3119 0074 0346     		mov	r3, r0
 3120 0076 FB75     		strb	r3, [r7, #23]
1330:./i2c/i2c-std.c ****     if(error) 
 3121              		.loc 2 1330 7
 3122 0078 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 3123 007a 002B     		cmp	r3, #0
 3124 007c 01D0     		beq	.L163
1331:./i2c/i2c-std.c ****         return error;
 3125              		.loc 2 1331 16
 3126 007e FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 3127 0080 24E0     		b	.L159
 3128              	.L163:
1332:./i2c/i2c-std.c ****  // Enable Acknowledgment , clear POS flag
1333:./i2c/i2c-std.c ****      //I2C_AcknowledgeConfig(I2CX , ENABLE);
1334:./i2c/i2c-std.c ****      //I2C_NACKPositionConfig(I2CX , I2C_NACKPosition_Current);
1335:./i2c/i2c-std.c **** 
1336:./i2c/i2c-std.c **** //EV5: send the slave address with a read operation master transmit 
1337:./i2c/i2c-std.c ****     //uart_print(USART1,"RX_ SLAVE_ADDR_RD... \r\n");
1338:./i2c/i2c-std.c ****     error=i2c_send_7bit_slave_address_rd_std(I2CX,slave_address);
 3129              		.loc 2 1338 11
 3130 0082 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 3131 0084 1946     		mov	r1, r3
 3132 0086 F868     		ldr	r0, [r7, #12]
 3133 0088 FFF7FEFF 		bl	i2c_send_7bit_slave_address_rd_std
 3134 008c 0346     		mov	r3, r0
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s 			page 100


 3135 008e FB75     		strb	r3, [r7, #23]
1339:./i2c/i2c-std.c ****     if(error)
 3136              		.loc 2 1339 7
 3137 0090 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 3138 0092 002B     		cmp	r3, #0
 3139 0094 01D0     		beq	.L164
1340:./i2c/i2c-std.c ****       return error;
 3140              		.loc 2 1340 14
 3141 0096 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 3142 0098 18E0     		b	.L159
 3143              	.L164:
1341:./i2c/i2c-std.c **** //EV7:     
1342:./i2c/i2c-std.c ****     //uart_print(USART1,"DATA RD .... \r\n");
1343:./i2c/i2c-std.c ****     error=i2c_read_nbyte_std(I2CX,buf,n);
 3144              		.loc 2 1343 11
 3145 009a 3B6A     		ldr	r3, [r7, #32]
 3146 009c 9BB2     		uxth	r3, r3
 3147 009e 1A46     		mov	r2, r3
 3148 00a0 7968     		ldr	r1, [r7, #4]
 3149 00a2 F868     		ldr	r0, [r7, #12]
 3150 00a4 FFF7FEFF 		bl	i2c_read_nbyte_std
 3151 00a8 0346     		mov	r3, r0
 3152 00aa FB75     		strb	r3, [r7, #23]
1344:./i2c/i2c-std.c ****    if(error)
 3153              		.loc 2 1344 6
 3154 00ac FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 3155 00ae 002B     		cmp	r3, #0
 3156 00b0 01D0     		beq	.L165
1345:./i2c/i2c-std.c ****     return error;
 3157              		.loc 2 1345 12
 3158 00b2 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 3159 00b4 0AE0     		b	.L159
 3160              	.L165:
1346:./i2c/i2c-std.c **** 
1347:./i2c/i2c-std.c **** // generate the stop condition : note stop generation is done implicitly by the  
1348:./i2c/i2c-std.c ****     //uart_print(USART1,"Stop Condition: \r\n");
1349:./i2c/i2c-std.c ****    if((error=i2c_wait_stop_event_std(I2CX)))
 3161              		.loc 2 1349 14
 3162 00b6 F868     		ldr	r0, [r7, #12]
 3163 00b8 FFF7FEFF 		bl	i2c_wait_stop_event_std
 3164 00bc 0346     		mov	r3, r0
 3165 00be FB75     		strb	r3, [r7, #23]
 3166              		.loc 2 1349 6
 3167 00c0 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 3168 00c2 002B     		cmp	r3, #0
 3169 00c4 01D0     		beq	.L166
1350:./i2c/i2c-std.c ****     return error;
 3170              		.loc 2 1350 12
 3171 00c6 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 3172 00c8 00E0     		b	.L159
 3173              	.L166:
1351:./i2c/i2c-std.c **** 
1352:./i2c/i2c-std.c ****     // all operation has succeeded no error to return 
1353:./i2c/i2c-std.c ****     return I2C_OK;
 3174              		.loc 2 1353 12
 3175 00ca 0023     		movs	r3, #0
 3176              	.L159:
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s 			page 101


1354:./i2c/i2c-std.c **** }
 3177              		.loc 2 1354 1
 3178 00cc 1846     		mov	r0, r3
 3179 00ce 1837     		adds	r7, r7, #24
 3180              	.LCFI165:
 3181              		.cfi_def_cfa_offset 8
 3182 00d0 BD46     		mov	sp, r7
 3183              	.LCFI166:
 3184              		.cfi_def_cfa_register 13
 3185              		@ sp needed
 3186 00d2 80BD     		pop	{r7, pc}
 3187              		.cfi_endproc
 3188              	.LFE62:
 3190              		.text
 3191              	.Letext0:
 3192              		.file 3 "c:\\arm-tool\\gcc-arm-none-eabi-10.3-2021.10\\arm-none-eabi\\include\\machine\\_default_t
 3193              		.file 4 "c:\\arm-tool\\gcc-arm-none-eabi-10.3-2021.10\\arm-none-eabi\\include\\sys\\_stdint.h"
 3194              		.file 5 "./.driver/CMSIS/Device/STM32F10x/stm32f10x.h"
 3195              		.file 6 "./.driver/STM32F10x_StdPeriph_Driver/inc/stm32f10x_gpio.h"
 3196              		.file 7 "./.driver/STM32F10x_StdPeriph_Driver/inc/stm32f10x_i2c.h"
 3197              		.file 8 "c:\\arm-tool\\gcc-arm-none-eabi-10.3-2021.10\\lib\\gcc\\arm-none-eabi\\10.3.1\\include\\s
 3198              		.file 9 "./basic/structs.h"
 3199              		.file 10 "./.driver/CMSIS/Device/STM32F10x/system_stm32f10x.h"
 3200              		.file 11 "./i2c/i2c-std.h"
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s 			page 102


DEFINED SYMBOLS
                            *ABS*:00000000 i2c-std.c
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s:18     .text.__enable_irq:00000000 $t
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s:23     .text.__enable_irq:00000000 __enable_irq
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s:60     .text.__disable_irq:00000000 $t
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s:65     .text.__disable_irq:00000000 __disable_irq
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s:105    .data.I2Cx_Timeout:00000000 I2Cx_Timeout
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s:102    .data.I2Cx_Timeout:00000000 $d
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s:108    .text.i2c_ready_std:00000000 $t
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s:113    .text.i2c_ready_std:00000000 i2c_ready_std
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s:177    .text.i2c_ready_std:00000038 $d
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s:182    .text.i2c_wait_start_event_std:00000000 $t
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s:187    .text.i2c_wait_start_event_std:00000000 i2c_wait_start_event_std
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s:270    .text.i2c_wait_start_event_std:0000005c $d
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s:275    .text.i2c_wait_stop_event_std:00000000 $t
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s:280    .text.i2c_wait_stop_event_std:00000000 i2c_wait_stop_event_std
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s:372    .text.i2c_wait_stop_event_std:00000068 $d
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s:377    .text.i2c_wait_7bit_slave_address_wr_std:00000000 $t
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s:382    .text.i2c_wait_7bit_slave_address_wr_std:00000000 i2c_wait_7bit_slave_address_wr_std
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s:473    .text.i2c_wait_7bit_slave_address_wr_std:0000006c $d
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s:478    .text.i2c_wait_7bit_slave_address_rd_std:00000000 $t
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s:483    .text.i2c_wait_7bit_slave_address_rd_std:00000000 i2c_wait_7bit_slave_address_rd_std
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s:582    .text.i2c_wait_7bit_slave_address_rd_std:00000078 $d
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s:587    .text.i2c_wait_write_byte_btf_std:00000000 $t
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s:592    .text.i2c_wait_write_byte_btf_std:00000000 i2c_wait_write_byte_btf_std
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s:683    .text.i2c_wait_write_byte_btf_std:0000006c $d
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s:688    .text.i2c_wait_write_byte_txe_std:00000000 $t
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s:693    .text.i2c_wait_write_byte_txe_std:00000000 i2c_wait_write_byte_txe_std
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s:784    .text.i2c_wait_write_byte_txe_std:0000006c $d
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s:789    .text.i2c_wait_read_byte_rxne_std:00000000 $t
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s:794    .text.i2c_wait_read_byte_rxne_std:00000000 i2c_wait_read_byte_rxne_std
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s:886    .text.i2c_wait_read_byte_rxne_std:00000068 $d
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s:891    .text.i2c_wait_read_byte_btf_std:00000000 $t
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s:896    .text.i2c_wait_read_byte_btf_std:00000000 i2c_wait_read_byte_btf_std
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s:959    .text.i2c_wait_read_byte_btf_std:00000038 $d
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s:964    .text.i2c_start_std:00000000 $t
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s:969    .text.i2c_start_std:00000000 i2c_start_std
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s:1045   .text.i2c_stop_std:00000000 $t
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s:1050   .text.i2c_stop_std:00000000 i2c_stop_std
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s:1094   .text.i2c_send_7bit_slave_address_wr_std:00000000 $t
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s:1099   .text.i2c_send_7bit_slave_address_wr_std:00000000 i2c_send_7bit_slave_address_wr_std
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s:1175   .text.i2c_send_7bit_slave_address_rd_std:00000000 $t
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s:1180   .text.i2c_send_7bit_slave_address_rd_std:00000000 i2c_send_7bit_slave_address_rd_std
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s:1232   .text.i2c_write_byte_std:00000000 $t
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s:1237   .text.i2c_write_byte_std:00000000 i2c_write_byte_std
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s:1286   .text.i2c_write_nbyte_std:00000000 $t
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s:1291   .text.i2c_write_nbyte_std:00000000 i2c_write_nbyte_std
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s:1370   .text.i2c_read_lastbyte_std:00000000 $t
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s:1375   .text.i2c_read_lastbyte_std:00000000 i2c_read_lastbyte_std
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s:1477   .text.i2c_read_last2byte_std:00000000 $t
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s:1482   .text.i2c_read_last2byte_std:00000000 i2c_read_last2byte_std
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s:1600   .text.i2c_read_last3byte_std:00000000 $t
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s:1605   .text.i2c_read_last3byte_std:00000000 i2c_read_last3byte_std
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s:1751   .text.i2c_read_last3byte_std:000000c8 $d
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s:1758   .text.i2c_read_nbyte_std:00000000 $t
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s:1763   .text.i2c_read_nbyte_std:00000000 i2c_read_nbyte_std
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s:1968   .text.i2c_init_std:00000000 $t
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s 			page 103


C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s:1974   .text.i2c_init_std:00000000 i2c_init_std
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s:2132   .text.i2c_init_std:0000011c $d
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s:2138   .text.i2c_write_7bit_byte_std:00000000 $t
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s:2144   .text.i2c_write_7bit_byte_std:00000000 i2c_write_7bit_byte_std
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s:2255   .text.i2c_write_7bit_nbyte_std:00000000 $t
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s:2261   .text.i2c_write_7bit_nbyte_std:00000000 i2c_write_7bit_nbyte_std
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s:2372   .text.i2c_read_7bit_byte_std:00000000 $t
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s:2378   .text.i2c_read_7bit_byte_std:00000000 i2c_read_7bit_byte_std
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s:2512   .text.i2c_read_7bit_nbyte_std:00000000 i2c_read_7bit_nbyte_std
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s:2435   .text.i2c_read_7bit_word_std:00000000 $t
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s:2441   .text.i2c_read_7bit_word_std:00000000 i2c_read_7bit_word_std
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s:2506   .text.i2c_read_7bit_nbyte_std:00000000 $t
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s:2633   .text.i2c_write_7bit_base_byte_std:00000000 $t
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s:2639   .text.i2c_write_7bit_base_byte_std:00000000 i2c_write_7bit_base_byte_std
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s:2753   .text.i2c_write_7bit_base_nbyte_std:00000000 $t
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s:2759   .text.i2c_write_7bit_base_nbyte_std:00000000 i2c_write_7bit_base_nbyte_std
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s:2886   .text.i2c_read_7bit_base_byte_std:00000000 $t
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s:2892   .text.i2c_read_7bit_base_byte_std:00000000 i2c_read_7bit_base_byte_std
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s:3034   .text.i2c_read_7bit_base_nbyte_std:00000000 i2c_read_7bit_base_nbyte_std
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s:2953   .text.i2c_read_7bit_base_word_std:00000000 $t
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s:2959   .text.i2c_read_7bit_base_word_std:00000000 i2c_read_7bit_base_word_std
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s:3028   .text.i2c_read_7bit_base_nbyte_std:00000000 $t
                           .group:00000000 wm4.0.f4779009c199947b70d43074c2c41c8e
                           .group:00000000 wm4.stm32f10x.h.50.d4f13d34ecdc4ac490487d4d35cb5131
                           .group:00000000 wm4.core_cm3.h.25.d35e9a9b04ec4aaebae9bf79fff061f9
                           .group:00000000 wm4._newlib_version.h.4.bfdf54b0af045d4a71376ae00f63a22c
                           .group:00000000 wm4.features.h.33.318b64d71e0957639cfb30f1db1f7ec8
                           .group:00000000 wm4._default_types.h.15.247e5cd201eca3442cbf5404108c4935
                           .group:00000000 wm4._intsup.h.10.48bafbb683905c4daa4565a85aeeb264
                           .group:00000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:00000000 wm4.stdint.h.23.d53047a68f4a85177f80b422d52785ed
                           .group:00000000 wm4.core_cm3.h.113.b286929a54d33b4c8909a7132437b244
                           .group:00000000 wm4.stm32f10x.h.525.b40cb5ee4fd40825ea8ccc10ea6f4722
                           .group:00000000 wm4.stm32f10x_adc.h.82.085dab8bb2bdf6609e97ee2fc7a88347
                           .group:00000000 wm4.stm32f10x_bkp.h.24.9f1bb2b1135ba72667dd3fcde11cf4b7
                           .group:00000000 wm4.stm32f10x_can.h.24.b871c380ea975c71825bf46cccde3c7a
                           .group:00000000 wm4.stm32f10x_cec.h.24.a1ee61cba6b8120b5bab40528e933770
                           .group:00000000 wm4.stm32f10x_dac.h.24.39482d0fe30ddea181f0c79f49fb629e
                           .group:00000000 wm4.stm32f10x_dbgmcu.h.24.f73145056e79bc5a93dd6677b2b33d54
                           .group:00000000 wm4.stm32f10x_dma.h.24.a48d4478db5b2956954d84bc5fd35ae1
                           .group:00000000 wm4.stm32f10x_exti.h.24.377f48157d7e463bb3841cf6c97a1c93
                           .group:00000000 wm4.stm32f10x_flash.h.24.877157533caf7ce4331c44a3d0ea5612
                           .group:00000000 wm4.stm32f10x_fsmc.h.24.0518485f192fab09dd5cfc912ded3186
                           .group:00000000 wm4.stm32f10x_gpio.h.24.b627ee324fedf5e3b8730fa015ea30de
                           .group:00000000 wm4.stm32f10x_i2c.h.24.8bc26b82f9e7563ca7234eabea47534c
                           .group:00000000 wm4.stm32f10x_iwdg.h.24.129c4cff233d2076aefd5fc4fbf5956b
                           .group:00000000 wm4.stm32f10x_pwr.h.24.98a178bf0c8fa18634174f1c1123c7bc
                           .group:00000000 wm4.stm32f10x_rcc.h.24.43948985157a0da383ddce718b66f782
                           .group:00000000 wm4.stm32f10x_rtc.h.24.496e77df0282a7f4dc79c6de18da3ecc
                           .group:00000000 wm4.stm32f10x_sdio.h.24.646055cc54873a75158b5d1015b409e6
                           .group:00000000 wm4.stm32f10x_spi.h.24.e7b2623920274a1745e534a7a7156e76
                           .group:00000000 wm4.stm32f10x_tim.h.24.24ac72f04686046a18ee9117ff7bba1f
                           .group:00000000 wm4.stm32f10x_usart.h.24.cf5f8d8e971fad2927ee799886f23b78
                           .group:00000000 wm4.stm32f10x_wwdg.h.24.7f7037b09db3a78d5a9de97b2cba748a
                           .group:00000000 wm4.misc.h.24.c54738789d48fd25c957e9d7c7349497
                           .group:00000000 wm4.stm32f10x.h.8349.9a0c7ea810a74ad6d06203f1a551aebb
                           .group:00000000 wm4.ieeefp.h.77.25247dc27dbe3b23bfe98c2dc18f6ac5
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s 			page 104


                           .group:00000000 wm4.newlib.h.8.4679f89e52c9f69cd44f3a27cd28c759
                           .group:00000000 wm4.config.h.224.79362c3cdb280fe0b8d95bd0bc4d5c54
                           .group:00000000 wm4._ansi.h.31.de524f58584151836e90d8620a16f8e8
                           .group:00000000 wm4.stdlib.h.13.4ed386f5c1a80d71e72172885d946ef2
                           .group:00000000 wm4.stddef.h.181.13772e73e5434e8cc4fafaaddad2b5da
                           .group:00000000 wm4.stddef.h.39.cf3ebec0bc8c9e3d2f276a64e0fe5e7a
                           .group:00000000 wm4._types.h.20.dd0d04dca3800a0d2a6129b87f3adbb2
                           .group:00000000 wm4.stddef.h.155.3588ebfdd1e8c7ede80509bb9c3b8009
                           .group:00000000 wm4._types.h.127.34941de1b2539d59d5cac00e0dd27a45
                           .group:00000000 wm4.reent.h.17.e292bf8b0bec6c96e131a54347145a30
                           .group:00000000 wm4.lock.h.2.1461d1fff82dffe8bfddc23307f6484f
                           .group:00000000 wm4.reent.h.77.32fd7d280fc2a40b0797abce5beaf6e3
                           .group:00000000 wm4.assert.h.11.db24e541f16414db224bf986d21017e2
                           .group:00000000 wm4.reent.h.504.40d20ade344680fbcb6a0178bf7ae09e
                           .group:00000000 wm4.cdefs.h.49.39045112216f6a021dbdffe3bf5accce
                           .group:00000000 wm4.alloca.h.8.dfc0c703c47ec3e69746825b17d9e66d
                           .group:00000000 wm4.stdlib.h.56.f4862cfbf4363a1db01842d5bdf72c18
                           .group:00000000 wm4.stdio.h.27.3fc80220048df77954e38daec3bb9670
                           .group:00000000 wm4.stddef.h.155.ba788add86a0e365f264484f110c3c29
                           .group:00000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:00000000 wm4.types.h.40.8b6acba56cefbb11746718204edc8f5e
                           .group:00000000 wm4._endian.h.31.65a10590763c3dde1ac4a7f66d7d4891
                           .group:00000000 wm4.endian.h.9.49f3a4695c1b61e8a0808de3c4a106cb
                           .group:00000000 wm4._timeval.h.32.bec3221fa7a9bb0bdde696c9c57e47d2
                           .group:00000000 wm4.timespec.h.41.d855182eb0e690443ab8651bcedca6e1
                           .group:00000000 wm4.select.h.19.40cd3f2bfc456b193b790c2754690ebf
                           .group:00000000 wm4.types.h.51.5571ec98f267d17d3c670b7a3ba33afa
                           .group:00000000 wm4.sched.h.22.c60982713a5c428609783c78f9c78d95
                           .group:00000000 wm4._pthreadtypes.h.36.fcee9961c35163dde6267ef772ad1972
                           .group:00000000 wm4.stdio.h.2.4aa87247282eca6c8f36f9de33d8df1a
                           .group:00000000 wm4.stdio.h.81.60a2ded7dae310b81f9d6907fe5e3dbf
                           .group:00000000 wm4.stdarg.h.31.3fa7b8f6daaa31edd1696c08c77f2a73
                           .group:00000000 wm4.ctype.h.34.80f174baaec468e2eb1c07380b0b3287
                           .group:00000000 wm4.inttypes.h.14.b28deb26920e51e0da310220ef0f9003
                           .group:00000000 wm4.inttypes.h.28.c3e61b48c6ae3a7cb62609add2dd53d1
                           .group:00000000 wm4.stdalign.h.27.0aad28df4d66a8553430227d1bac48aa
                           .group:00000000 wm4.syslimits.h.34.de5cbd310098bc5895998b6bde577ed2
                           .group:00000000 wm4.limits.h.9.70fb0ada6f71b16202a66baaa6d8ea70
                           .group:00000000 wm4.limits.h.60.56a1ae353e2028a24298ec6463b8b593
                           .group:00000000 wm4.math.h.13.4f4c30988c5d76b6bf30dd7e2791b7c6
                           .group:00000000 wm4.string.h.8.c4b8571ce60dff2817f43fec8b86aecd
                           .group:00000000 wm4.basic.h.41.94a451f5fb0fa08d75d6da09336bd2f4
                           .group:00000000 wm4.structs.h.12.142e94c12fffe9b2bba6755d00a8ad91
                           .group:00000000 wm4.time.h.12.ca6eecf26198e1bc6166f71fd8292735
                           .group:00000000 wm4.initmacro.h.4.2927af5a543f65dade9f92f80a04dc35
                           .group:00000000 wm4.uart.h.10.7fda6319aa568019dcdbb67d33f81700
                           .group:00000000 wm4.i2ccom.h.10.147b279fb90e839345ab35ddb589e0ce
                           .group:00000000 wm4.i2cstd.h.10.97f20a95300a6b7d08ecafad2c6b5572
                           .group:00000000 wm4.i2c.h.24.666d2983f106290f51d8fe2e4e0034bc
                           .group:00000000 wm4.mpu6050.h.10.2241e5539305f80e00470fd45fbe7041
                           .group:00000000 wm4.lcd.h.11.3a2e2f95e46d234fe99d1d3e8f20de18
                           .group:00000000 wm4.systemtask.h.12.0c4e135a1a57011ea295f9384c4769e6

UNDEFINED SYMBOLS
SystemCoreClock
RCC_APB2PeriphClockCmd
RCC_APB1PeriphClockCmd
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccDTJjw0.s 			page 105


GPIO_StructInit
GPIO_Init
RCC_APB1PeriphResetCmd
I2C_StructInit
I2C_Init
I2C_AcknowledgeConfig
I2C_NACKPositionConfig
