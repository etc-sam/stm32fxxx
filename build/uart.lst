ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccM72RGg.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"uart.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	uart_state
  18              		.section	.bss.uart_state,"aw",%nobits
  21              	uart_state:
  22 0000 00       		.space	1
  23              		.global	uart_ticks
  24              		.section	.bss.uart_ticks,"aw",%nobits
  25              		.align	2
  28              	uart_ticks:
  29 0000 00000000 		.space	4
  30              		.global	rx_buffer
  31              		.section	.bss.rx_buffer,"aw",%nobits
  32              		.align	2
  35              	rx_buffer:
  36 0000 00000000 		.space	64
  36      00000000 
  36      00000000 
  36      00000000 
  36      00000000 
  37              		.global	rx_buffer_length
  38              		.section	.bss.rx_buffer_length,"aw",%nobits
  41              	rx_buffer_length:
  42 0000 00       		.space	1
  43              		.global	rx_index
  44              		.section	.bss.rx_index,"aw",%nobits
  45              		.align	1
  48              	rx_index:
  49 0000 0000     		.space	2
  50              		.global	buffer_overflow
  51              		.section	.bss.buffer_overflow,"aw",%nobits
  54              	buffer_overflow:
  55 0000 00       		.space	1
  56              		.global	uart_tx
  57              		.section	.data.uart_tx,"aw"
  58              		.align	2
  61              	uart_tx:
  62 0000 00080140 		.word	1073809408
  63 0004 0900     		.short	9
  64 0006 0000     		.space	2
  65              		.global	uart_rx
  66              		.section	.data.uart_rx,"aw"
  67              		.align	2
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccM72RGg.s 			page 2


  70              	uart_rx:
  71 0000 00080140 		.word	1073809408
  72 0004 0A00     		.short	10
  73 0006 0000     		.space	2
  74              		.section	.data.uart_delimiter,"aw"
  75              		.align	2
  78              	uart_delimiter:
  79 0000 55AA55AA 		.ascii	"U\252U\252"
  80              		.section	.text.uart_set_rx_Int_mask,"ax",%progbits
  81              		.align	1
  82              		.syntax unified
  83              		.thumb
  84              		.thumb_func
  86              	uart_set_rx_Int_mask:
  87              	.LFB33:
  88              		.file 1 "./uart/uart.c"
   1:./uart/uart.c **** /**
   2:./uart/uart.c ****  * @brief uart.c
   3:./uart/uart.c ****  *
   4:./uart/uart.c ****  * @param student: Sameer Almaldein
   5:./uart/uart.c ****  * @param ID: 679699
   6:./uart/uart.c ****  * @param University TU-Chemnitz
   7:./uart/uart.c ****  * @param Master : ASE(Automotive Software Engineering )
   8:./uart/uart.c ****  */ 
   9:./uart/uart.c **** //********************************************************************************************
  10:./uart/uart.c **** //
  11:./uart/uart.c **** // include header files
  12:./uart/uart.c **** //
  13:./uart/uart.c **** //********************************************************************************************
  14:./uart/uart.c **** #include "init.h"
  15:./uart/uart.c **** 
  16:./uart/uart.c **** //********************************************************************************************
  17:./uart/uart.c **** //
  18:./uart/uart.c **** // global variables' declarations 
  19:./uart/uart.c **** //
  20:./uart/uart.c **** //********************************************************************************************
  21:./uart/uart.c **** //! uart state variable it defines thes state in the FSM (Finite state machine)
  22:./uart/uart.c **** volatile uint8_t uart_state=UART_WAIT;
  23:./uart/uart.c **** volatile uint32_t uart_ticks=0;
  24:./uart/uart.c **** 
  25:./uart/uart.c **** 
  26:./uart/uart.c **** uint8_t  rx_buffer[UART_BUFFER_SIZE]={0};
  27:./uart/uart.c **** volatile uint8_t  rx_buffer_length=0;
  28:./uart/uart.c **** volatile uint16_t rx_index=0;
  29:./uart/uart.c **** 
  30:./uart/uart.c **** volatile uint8_t  buffer_overflow=0;
  31:./uart/uart.c **** 
  32:./uart/uart.c **** gpio_t uart_tx={GPIOA,9};//USART1_TX=PA9
  33:./uart/uart.c **** gpio_t uart_rx={GPIOA,10};//USART1_RX=PA10
  34:./uart/uart.c **** //********************************************************************************************
  35:./uart/uart.c **** //
  36:./uart/uart.c **** // static variables' declarations 
  37:./uart/uart.c **** //
  38:./uart/uart.c **** //********************************************************************************************
  39:./uart/uart.c **** static uint8_t uart_delimiter[UART_DELIMITER_SIZE]={0x55,0xaa,0x55,0xaa};
  40:./uart/uart.c **** 
  41:./uart/uart.c **** //static uart_options_t uart_options={
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccM72RGg.s 			page 3


  42:./uart/uart.c **** //	F_CPU,		// frequency of CPU
  43:./uart/uart.c **** //	9600, 		// baud rate
  44:./uart/uart.c **** //	8,      	// char size
  45:./uart/uart.c **** //	1,      	//stop bit
  46:./uart/uart.c **** //	0,      	//no parity
  47:./uart/uart.c **** //	0,      	// asynchronous mode
  48:./uart/uart.c **** //	0,      	// no dual speed mode
  49:./uart/uart.c **** //	0	    	// UBRD
  50:./uart/uart.c **** //};
  51:./uart/uart.c **** 
  52:./uart/uart.c **** //********************************************************************************************
  53:./uart/uart.c **** //
  54:./uart/uart.c **** //  static function ProtoType
  55:./uart/uart.c **** //
  56:./uart/uart.c **** //********************************************************************************************
  57:./uart/uart.c **** 
  58:./uart/uart.c **** //! configures the uart module
  59:./uart/uart.c **** //static void uart_configure();
  60:./uart/uart.c **** //! initialize the receive mask interrupt
  61:./uart/uart.c **** static void uart_set_rx_Int_mask(USART_TypeDef * usartx,uint8_t enable);
  62:./uart/uart.c **** 
  63:./uart/uart.c **** //! uart reset 
  64:./uart/uart.c **** //static void uart_reset_buffer(void);
  65:./uart/uart.c **** //! read a byte to the uart data register
  66:./uart/uart.c **** 
  67:./uart/uart.c **** static uint8_t startswith_header(uint8_t * buffer,uint8_t length,uint8_t * header);
  68:./uart/uart.c **** static uint8_t endswith_delimiter(volatile uint8_t * buffer,uint8_t length,uint8_t * delimiter);
  69:./uart/uart.c **** 
  70:./uart/uart.c **** //********************************************************************************************
  71:./uart/uart.c **** //
  72:./uart/uart.c **** //  static methods
  73:./uart/uart.c **** //
  74:./uart/uart.c **** //********************************************************************************************
  75:./uart/uart.c **** /**
  76:./uart/uart.c ****  * @brief configures the uart module
  77:./uart/uart.c ****  * @details configures the uart module using the options 
  78:./uart/uart.c ****  * 			defined by static  uart_options variable
  79:./uart/uart.c ****  * 			
  80:./uart/uart.c ****  * @return void
  81:./uart/uart.c ****  * 
  82:./uart/uart.c ****  */
  83:./uart/uart.c **** //void uart_configure()
  84:./uart/uart.c **** //{
  85:./uart/uart.c ****  /*   
  86:./uart/uart.c **** 	uart_mode_reg.reg_select=0;
  87:./uart/uart.c **** 	// mode operation
  88:./uart/uart.c **** 	if(uart_options.synch==1)
  89:./uart/uart.c **** 	 uart_mode_reg.mode=_UART_SYNC;
  90:./uart/uart.c **** 	else
  91:./uart/uart.c **** 	 uart_mode_reg.mode=_UART_ASYNC;
  92:./uart/uart.c **** 	
  93:./uart/uart.c **** 	// define options of USART mode
  94:./uart/uart.c **** 	if(uart_options.stop_bit==2)
  95:./uart/uart.c **** 		uart_mode_reg.stop_bit=_UART_TWO_STOPBIT;
  96:./uart/uart.c **** 	else
  97:./uart/uart.c **** 		uart_mode_reg.stop_bit=_UART_ONE_STOPBIT;
  98:./uart/uart.c **** 
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccM72RGg.s 			page 4


  99:./uart/uart.c **** 	switch(uart_options.parity)
 100:./uart/uart.c **** 	{
 101:./uart/uart.c **** 		case 1:  uart_mode_reg.parity=_UART_ODD_PARITY;  break;
 102:./uart/uart.c **** 		case 2:  uart_mode_reg.parity=_UART_EVEN_PARITY; break;
 103:./uart/uart.c **** 		default: uart_mode_reg.parity=_UART_NO_PARITY;   break;
 104:./uart/uart.c **** 	}
 105:./uart/uart.c **** 
 106:./uart/uart.c **** 	// clear 8th bit of uart
 107:./uart/uart.c **** 	uart_control_reg.char_size_9bit=0;
 108:./uart/uart.c **** 	
 109:./uart/uart.c **** 	switch(uart_options.char_size)
 110:./uart/uart.c **** 	{
 111:./uart/uart.c **** 		case 5: uart_mode_reg.char_size=_UART_FRAME_5_BITS; break;
 112:./uart/uart.c **** 		case 6: uart_mode_reg.char_size=_UART_FRAME_6_BITS; break;
 113:./uart/uart.c **** 		case 7: uart_mode_reg.char_size=_UART_FRAME_7_BITS; break;
 114:./uart/uart.c **** 		case 8: uart_mode_reg.char_size=_UART_FRAME_8_BITS; break;
 115:./uart/uart.c **** 		case 9:
 116:./uart/uart.c **** 				uart_mode_reg.char_size=_UART_FRAME_8_BITS;
 117:./uart/uart.c **** 				uart_control_reg.char_size_9bit=1;
 118:./uart/uart.c **** 		break;
 119:./uart/uart.c **** 		default:
 120:./uart/uart.c **** 		      uart_mode_reg.char_size=_UART_FRAME_8_BITS; break;
 121:./uart/uart.c **** 	}
 122:./uart/uart.c **** 
 123:./uart/uart.c **** 	//uart_regs.p_mode_reg->val=my_mode.val;
 124:./uart/uart.c **** 
 125:./uart/uart.c **** 	// set baud rate
 126:./uart/uart.c **** 	WORD_BYTES baud_rate;
 127:./uart/uart.c **** 	baud_rate.word=uart_options.UBRD;
 128:./uart/uart.c **** 	uart_status_reg.double_speed=uart_options.dual_speed;
 129:./uart/uart.c **** 	
 130:./uart/uart.c **** 	if(uart_options.UBRD==0)
 131:./uart/uart.c **** 	{		
 132:./uart/uart.c **** 	// define dual speed U2X bit
 133:./uart/uart.c **** 	 if(uart_options.dual_speed==1)
 134:./uart/uart.c **** 	 {
 135:./uart/uart.c **** 		baud_rate.word=UART_BAUD_ASYNC_double(uart_options.buad_rate,uart_options.xtal_cpu);
 136:./uart/uart.c **** 	 }
 137:./uart/uart.c **** 	 else
 138:./uart/uart.c **** 	 {
 139:./uart/uart.c **** 		if(!uart_options.synch)
 140:./uart/uart.c **** 		 baud_rate.word=UART_BAUD_ASYNC(uart_options.buad_rate,uart_options.xtal_cpu);
 141:./uart/uart.c **** 		else
 142:./uart/uart.c **** 		  baud_rate.word=UART_BAUD_SYNC(uart_options.buad_rate,uart_options.xtal_cpu);
 143:./uart/uart.c **** 	 }
 144:./uart/uart.c **** 	}
 145:./uart/uart.c **** 
 146:./uart/uart.c **** 	// set baud rate registers
 147:./uart/uart.c **** 	uart_mode_reg.reg_select=0;
 148:./uart/uart.c **** 	uart_baud_rate_low_reg.val=baud_rate.byte.low;
 149:./uart/uart.c **** 	uart_baud_rate_high_reg.val=baud_rate.byte.high;
 150:./uart/uart.c ****  */
 151:./uart/uart.c **** //}
 152:./uart/uart.c **** //-------------------------------------------------------------------------------------------------
 153:./uart/uart.c **** /**
 154:./uart/uart.c ****  * @brief initializes the receive mask interrupt
 155:./uart/uart.c ****  * 
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccM72RGg.s 			page 5


 156:./uart/uart.c ****  *  sets or resets the receive complete interrupt mask bit
 157:./uart/uart.c ****  *  based on the passed value
 158:./uart/uart.c ****  * @param enable sets/resets the receive complete interrupt mask bit
 159:./uart/uart.c ****  * @return   void
 160:./uart/uart.c ****  */
 161:./uart/uart.c **** void uart_set_rx_Int_mask(USART_TypeDef * usartx,uint8_t enable)
 162:./uart/uart.c **** { 
  89              		.loc 1 162 1
  90              		.cfi_startproc
  91              		@ args = 0, pretend = 0, frame = 8
  92              		@ frame_needed = 1, uses_anonymous_args = 0
  93              		@ link register save eliminated.
  94 0000 80B4     		push	{r7}
  95              	.LCFI0:
  96              		.cfi_def_cfa_offset 4
  97              		.cfi_offset 7, -4
  98 0002 83B0     		sub	sp, sp, #12
  99              	.LCFI1:
 100              		.cfi_def_cfa_offset 16
 101 0004 00AF     		add	r7, sp, #0
 102              	.LCFI2:
 103              		.cfi_def_cfa_register 7
 104 0006 7860     		str	r0, [r7, #4]
 105 0008 0B46     		mov	r3, r1
 106 000a FB70     		strb	r3, [r7, #3]
 163:./uart/uart.c ****  if(enable)
 107              		.loc 1 163 4
 108 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 109 000e 002B     		cmp	r3, #0
 110 0010 10D0     		beq	.L2
 164:./uart/uart.c ****  {	
 165:./uart/uart.c **** 	 SET_BIT(usartx->CR1,USART_CR1_RE) ;
 111              		.loc 1 165 3
 112 0012 7B68     		ldr	r3, [r7, #4]
 113 0014 9B89     		ldrh	r3, [r3, #12]	@ movhi
 114 0016 9BB2     		uxth	r3, r3
 115 0018 43F00403 		orr	r3, r3, #4
 116 001c 9AB2     		uxth	r2, r3
 117 001e 7B68     		ldr	r3, [r7, #4]
 118 0020 9A81     		strh	r2, [r3, #12]	@ movhi
 166:./uart/uart.c **** 	 SET_BIT(usartx->CR1,USART_CR1_RXNEIE);
 119              		.loc 1 166 3
 120 0022 7B68     		ldr	r3, [r7, #4]
 121 0024 9B89     		ldrh	r3, [r3, #12]	@ movhi
 122 0026 9BB2     		uxth	r3, r3
 123 0028 43F02003 		orr	r3, r3, #32
 124 002c 9AB2     		uxth	r2, r3
 125 002e 7B68     		ldr	r3, [r7, #4]
 126 0030 9A81     		strh	r2, [r3, #12]	@ movhi
 167:./uart/uart.c ****  }
 168:./uart/uart.c ****  else
 169:./uart/uart.c ****  {
 170:./uart/uart.c **** 	CLEAR_BIT(usartx->CR1,USART_CR1_RE);
 171:./uart/uart.c **** 	CLEAR_BIT(usartx->CR1,USART_CR1_RXNEIE);
 172:./uart/uart.c ****  }
 173:./uart/uart.c **** 
 174:./uart/uart.c **** }
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccM72RGg.s 			page 6


 127              		.loc 1 174 1
 128 0032 0FE0     		b	.L4
 129              	.L2:
 170:./uart/uart.c **** 	CLEAR_BIT(usartx->CR1,USART_CR1_RXNEIE);
 130              		.loc 1 170 2
 131 0034 7B68     		ldr	r3, [r7, #4]
 132 0036 9B89     		ldrh	r3, [r3, #12]	@ movhi
 133 0038 9BB2     		uxth	r3, r3
 134 003a 23F00403 		bic	r3, r3, #4
 135 003e 9AB2     		uxth	r2, r3
 136 0040 7B68     		ldr	r3, [r7, #4]
 137 0042 9A81     		strh	r2, [r3, #12]	@ movhi
 171:./uart/uart.c ****  }
 138              		.loc 1 171 2
 139 0044 7B68     		ldr	r3, [r7, #4]
 140 0046 9B89     		ldrh	r3, [r3, #12]	@ movhi
 141 0048 9BB2     		uxth	r3, r3
 142 004a 23F02003 		bic	r3, r3, #32
 143 004e 9AB2     		uxth	r2, r3
 144 0050 7B68     		ldr	r3, [r7, #4]
 145 0052 9A81     		strh	r2, [r3, #12]	@ movhi
 146              	.L4:
 147              		.loc 1 174 1
 148 0054 00BF     		nop
 149 0056 0C37     		adds	r7, r7, #12
 150              	.LCFI3:
 151              		.cfi_def_cfa_offset 4
 152 0058 BD46     		mov	sp, r7
 153              	.LCFI4:
 154              		.cfi_def_cfa_register 13
 155              		@ sp needed
 156 005a 80BC     		pop	{r7}
 157              	.LCFI5:
 158              		.cfi_restore 7
 159              		.cfi_def_cfa_offset 0
 160 005c 7047     		bx	lr
 161              		.cfi_endproc
 162              	.LFE33:
 164              		.section	.text.uart_reset_buffer,"ax",%progbits
 165              		.align	1
 166              		.global	uart_reset_buffer
 167              		.syntax unified
 168              		.thumb
 169              		.thumb_func
 171              	uart_reset_buffer:
 172              	.LFB34:
 175:./uart/uart.c **** //-------------------------------------------------------------------------------------------------
 176:./uart/uart.c **** /**
 177:./uart/uart.c ****  * @brief resets the received buffer 
 178:./uart/uart.c ****  * @details resets the received buffer by 
 179:./uart/uart.c ****  * 			setting each member a zero value
 180:./uart/uart.c ****  * @return void  
 181:./uart/uart.c ****  */
 182:./uart/uart.c **** void uart_reset_buffer(void)
 183:./uart/uart.c **** {
 173              		.loc 1 183 1
 174              		.cfi_startproc
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccM72RGg.s 			page 7


 175              		@ args = 0, pretend = 0, frame = 8
 176              		@ frame_needed = 1, uses_anonymous_args = 0
 177              		@ link register save eliminated.
 178 0000 80B4     		push	{r7}
 179              	.LCFI6:
 180              		.cfi_def_cfa_offset 4
 181              		.cfi_offset 7, -4
 182 0002 83B0     		sub	sp, sp, #12
 183              	.LCFI7:
 184              		.cfi_def_cfa_offset 16
 185 0004 00AF     		add	r7, sp, #0
 186              	.LCFI8:
 187              		.cfi_def_cfa_register 7
 184:./uart/uart.c **** 	rx_buffer_length=0;
 188              		.loc 1 184 18
 189 0006 0B4B     		ldr	r3, .L8
 190 0008 0022     		movs	r2, #0
 191 000a 1A70     		strb	r2, [r3]
 192              	.LBB2:
 185:./uart/uart.c **** 	for(uint8_t i=0;i<UART_BUFFER_SIZE;i++)
 193              		.loc 1 185 14
 194 000c 0023     		movs	r3, #0
 195 000e FB71     		strb	r3, [r7, #7]
 196              		.loc 1 185 2
 197 0010 06E0     		b	.L6
 198              	.L7:
 186:./uart/uart.c **** 	  rx_buffer[i]=0;
 199              		.loc 1 186 13 discriminator 3
 200 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 201              		.loc 1 186 16 discriminator 3
 202 0014 084A     		ldr	r2, .L8+4
 203 0016 0021     		movs	r1, #0
 204 0018 D154     		strb	r1, [r2, r3]
 185:./uart/uart.c **** 	for(uint8_t i=0;i<UART_BUFFER_SIZE;i++)
 205              		.loc 1 185 38 discriminator 3
 206 001a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 207 001c 0133     		adds	r3, r3, #1
 208 001e FB71     		strb	r3, [r7, #7]
 209              	.L6:
 185:./uart/uart.c **** 	for(uint8_t i=0;i<UART_BUFFER_SIZE;i++)
 210              		.loc 1 185 2 discriminator 1
 211 0020 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 212 0022 3F2B     		cmp	r3, #63
 213 0024 F5D9     		bls	.L7
 214              	.LBE2:
 187:./uart/uart.c **** }
 215              		.loc 1 187 1
 216 0026 00BF     		nop
 217 0028 00BF     		nop
 218 002a 0C37     		adds	r7, r7, #12
 219              	.LCFI9:
 220              		.cfi_def_cfa_offset 4
 221 002c BD46     		mov	sp, r7
 222              	.LCFI10:
 223              		.cfi_def_cfa_register 13
 224              		@ sp needed
 225 002e 80BC     		pop	{r7}
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccM72RGg.s 			page 8


 226              	.LCFI11:
 227              		.cfi_restore 7
 228              		.cfi_def_cfa_offset 0
 229 0030 7047     		bx	lr
 230              	.L9:
 231 0032 00BF     		.align	2
 232              	.L8:
 233 0034 00000000 		.word	rx_buffer_length
 234 0038 00000000 		.word	rx_buffer
 235              		.cfi_endproc
 236              	.LFE34:
 238              		.section	.text.uart_rx_buffer_add,"ax",%progbits
 239              		.align	1
 240              		.global	uart_rx_buffer_add
 241              		.syntax unified
 242              		.thumb
 243              		.thumb_func
 245              	uart_rx_buffer_add:
 246              	.LFB35:
 188:./uart/uart.c **** //-------------------------------------------------------------------------------------------------
 189:./uart/uart.c **** /**
 190:./uart/uart.c ****  * @brief append the new received byte to the receive buffer
 191:./uart/uart.c ****  * 
 192:./uart/uart.c ****  * @param val  the byte value intended to be appended to the end of the received buffer
 193:./uart/uart.c ****  * @return uint8_t 
 194:./uart/uart.c ****  * @retval  0 failed to add this byte no enough space 
 195:./uart/uart.c ****  * @retval  1 succeeded to add this byte to the end of the buffer
 196:./uart/uart.c ****  */
 197:./uart/uart.c **** uint8_t uart_rx_buffer_add(uint8_t val)
 198:./uart/uart.c **** {
 247              		.loc 1 198 1
 248              		.cfi_startproc
 249              		@ args = 0, pretend = 0, frame = 8
 250              		@ frame_needed = 1, uses_anonymous_args = 0
 251              		@ link register save eliminated.
 252 0000 80B4     		push	{r7}
 253              	.LCFI12:
 254              		.cfi_def_cfa_offset 4
 255              		.cfi_offset 7, -4
 256 0002 83B0     		sub	sp, sp, #12
 257              	.LCFI13:
 258              		.cfi_def_cfa_offset 16
 259 0004 00AF     		add	r7, sp, #0
 260              	.LCFI14:
 261              		.cfi_def_cfa_register 7
 262 0006 0346     		mov	r3, r0
 263 0008 FB71     		strb	r3, [r7, #7]
 199:./uart/uart.c **** 	if(rx_buffer_length<=UART_BUFFER_SIZE)  
 264              		.loc 1 199 21
 265 000a 0D4B     		ldr	r3, .L13
 266 000c 1B78     		ldrb	r3, [r3]
 267 000e DBB2     		uxtb	r3, r3
 268              		.loc 1 199 4
 269 0010 402B     		cmp	r3, #64
 270 0012 0FD8     		bhi	.L11
 200:./uart/uart.c ****  	{
 201:./uart/uart.c ****   	rx_buffer_length++;
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccM72RGg.s 			page 9


 271              		.loc 1 201 20
 272 0014 0A4B     		ldr	r3, .L13
 273 0016 1B78     		ldrb	r3, [r3]
 274 0018 DBB2     		uxtb	r3, r3
 275 001a 0133     		adds	r3, r3, #1
 276 001c DAB2     		uxtb	r2, r3
 277 001e 084B     		ldr	r3, .L13
 278 0020 1A70     		strb	r2, [r3]
 202:./uart/uart.c ****   	rx_buffer[rx_buffer_length-1]=val;
 279              		.loc 1 202 30
 280 0022 074B     		ldr	r3, .L13
 281 0024 1B78     		ldrb	r3, [r3]
 282 0026 DBB2     		uxtb	r3, r3
 283 0028 013B     		subs	r3, r3, #1
 284              		.loc 1 202 33
 285 002a 0649     		ldr	r1, .L13+4
 286 002c FA79     		ldrb	r2, [r7, #7]
 287 002e CA54     		strb	r2, [r1, r3]
 203:./uart/uart.c ****    return 1;
 288              		.loc 1 203 11
 289 0030 0123     		movs	r3, #1
 290 0032 00E0     		b	.L12
 291              	.L11:
 204:./uart/uart.c ****  	}
 205:./uart/uart.c ****  return 0; 
 292              		.loc 1 205 9
 293 0034 0023     		movs	r3, #0
 294              	.L12:
 206:./uart/uart.c **** }
 295              		.loc 1 206 1
 296 0036 1846     		mov	r0, r3
 297 0038 0C37     		adds	r7, r7, #12
 298              	.LCFI15:
 299              		.cfi_def_cfa_offset 4
 300 003a BD46     		mov	sp, r7
 301              	.LCFI16:
 302              		.cfi_def_cfa_register 13
 303              		@ sp needed
 304 003c 80BC     		pop	{r7}
 305              	.LCFI17:
 306              		.cfi_restore 7
 307              		.cfi_def_cfa_offset 0
 308 003e 7047     		bx	lr
 309              	.L14:
 310              		.align	2
 311              	.L13:
 312 0040 00000000 		.word	rx_buffer_length
 313 0044 00000000 		.word	rx_buffer
 314              		.cfi_endproc
 315              	.LFE35:
 317              		.section	.text.startswith_header,"ax",%progbits
 318              		.align	1
 319              		.syntax unified
 320              		.thumb
 321              		.thumb_func
 323              	startswith_header:
 324              	.LFB36:
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccM72RGg.s 			page 10


 207:./uart/uart.c **** //-------------------------------------------------------------------------------------------------
 208:./uart/uart.c **** /**
 209:./uart/uart.c ****  * @brief checks how the received message on the uart begins with
 210:./uart/uart.c ****  * 	
 211:./uart/uart.c ****  * @details checks if the header of received message on the uart
 212:./uart/uart.c ****  * 			is greater than the minimum command legth
 213:./uart/uart.c ****  * 			then it compare the first part with a predefined header	
 214:./uart/uart.c ****  * 		
 215:./uart/uart.c ****  * @param buffer 			array of bytes i.e. data message received on the 
 216:./uart/uart.c ****  * @param Buffer_length 	the length of the message array of bytes
 217:./uart/uart.c ****  * @param header 			a pointer to predefined header for the command message
 218:./uart/uart.c ****  * @return uint8_t 
 219:./uart/uart.c ****  */
 220:./uart/uart.c **** uint8_t startswith_header(uint8_t * buffer,uint8_t length,uint8_t * header)
 221:./uart/uart.c **** {
 325              		.loc 1 221 1
 326              		.cfi_startproc
 327              		@ args = 0, pretend = 0, frame = 24
 328              		@ frame_needed = 1, uses_anonymous_args = 0
 329              		@ link register save eliminated.
 330 0000 80B4     		push	{r7}
 331              	.LCFI18:
 332              		.cfi_def_cfa_offset 4
 333              		.cfi_offset 7, -4
 334 0002 87B0     		sub	sp, sp, #28
 335              	.LCFI19:
 336              		.cfi_def_cfa_offset 32
 337 0004 00AF     		add	r7, sp, #0
 338              	.LCFI20:
 339              		.cfi_def_cfa_register 7
 340 0006 F860     		str	r0, [r7, #12]
 341 0008 0B46     		mov	r3, r1
 342 000a 7A60     		str	r2, [r7, #4]
 343 000c FB72     		strb	r3, [r7, #11]
 222:./uart/uart.c **** 	if(length<UART_HEADER_SIZE)
 344              		.loc 1 222 4
 345 000e FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 346 0010 032B     		cmp	r3, #3
 347 0012 01D8     		bhi	.L16
 223:./uart/uart.c **** 	 return 0;
 348              		.loc 1 223 10
 349 0014 0023     		movs	r3, #0
 350 0016 15E0     		b	.L17
 351              	.L16:
 352              	.LBB3:
 224:./uart/uart.c **** 	for(uint8_t i=1;i<=UART_HEADER_SIZE;i++)
 353              		.loc 1 224 14
 354 0018 0123     		movs	r3, #1
 355 001a FB75     		strb	r3, [r7, #23]
 356              		.loc 1 224 2
 357 001c 0EE0     		b	.L18
 358              	.L20:
 225:./uart/uart.c **** 	 if(buffer[i]!=header[i])
 359              		.loc 1 225 12
 360 001e FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 361 0020 FA68     		ldr	r2, [r7, #12]
 362 0022 1344     		add	r3, r3, r2
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccM72RGg.s 			page 11


 363 0024 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 364              		.loc 1 225 23
 365 0026 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 366 0028 7968     		ldr	r1, [r7, #4]
 367 002a 0B44     		add	r3, r3, r1
 368 002c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 369              		.loc 1 225 5
 370 002e 9A42     		cmp	r2, r3
 371 0030 01D0     		beq	.L19
 226:./uart/uart.c **** 	  return 0;	  
 372              		.loc 1 226 11
 373 0032 0023     		movs	r3, #0
 374 0034 06E0     		b	.L17
 375              	.L19:
 224:./uart/uart.c **** 	for(uint8_t i=1;i<=UART_HEADER_SIZE;i++)
 376              		.loc 1 224 39 discriminator 2
 377 0036 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 378 0038 0133     		adds	r3, r3, #1
 379 003a FB75     		strb	r3, [r7, #23]
 380              	.L18:
 224:./uart/uart.c **** 	for(uint8_t i=1;i<=UART_HEADER_SIZE;i++)
 381              		.loc 1 224 2 discriminator 1
 382 003c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 383 003e 042B     		cmp	r3, #4
 384 0040 EDD9     		bls	.L20
 385              	.LBE3:
 227:./uart/uart.c ****  return 1;	
 386              		.loc 1 227 9
 387 0042 0123     		movs	r3, #1
 388              	.L17:
 228:./uart/uart.c **** }
 389              		.loc 1 228 1
 390 0044 1846     		mov	r0, r3
 391 0046 1C37     		adds	r7, r7, #28
 392              	.LCFI21:
 393              		.cfi_def_cfa_offset 4
 394 0048 BD46     		mov	sp, r7
 395              	.LCFI22:
 396              		.cfi_def_cfa_register 13
 397              		@ sp needed
 398 004a 80BC     		pop	{r7}
 399              	.LCFI23:
 400              		.cfi_restore 7
 401              		.cfi_def_cfa_offset 0
 402 004c 7047     		bx	lr
 403              		.cfi_endproc
 404              	.LFE36:
 406              		.section	.text.endswith_delimiter,"ax",%progbits
 407              		.align	1
 408              		.syntax unified
 409              		.thumb
 410              		.thumb_func
 412              	endswith_delimiter:
 413              	.LFB37:
 229:./uart/uart.c **** //-------------------------------------------------------------------------------------------------
 230:./uart/uart.c **** /**
 231:./uart/uart.c ****  * @brief checks how the received message on the uart ends with
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccM72RGg.s 			page 12


 232:./uart/uart.c ****  * 	
 233:./uart/uart.c ****  * @details checks if the delimiter of received message on the uart
 234:./uart/uart.c ****  * 			has received and matches with predefined delimiter
 235:./uart/uart.c ****  * 		
 236:./uart/uart.c ****  * @param buffer 			array of bytes i.e. data message received on the 
 237:./uart/uart.c ****  * @param Buffer_length 	the length of the message array of bytes
 238:./uart/uart.c ****  * @param delimiter 		a pointer to predefined delimiter for the command message
 239:./uart/uart.c ****  * @return uint8_t 
 240:./uart/uart.c ****  * @retval 0: neither delimiter  has received yet nor a correct delimiter received 
 241:./uart/uart.c ****  * @retval 1: a correct delimiter has received 
 242:./uart/uart.c ****  */
 243:./uart/uart.c **** uint8_t endswith_delimiter(volatile uint8_t * buffer,uint8_t length,uint8_t * delimiter)
 244:./uart/uart.c **** {
 414              		.loc 1 244 1
 415              		.cfi_startproc
 416              		@ args = 0, pretend = 0, frame = 24
 417              		@ frame_needed = 1, uses_anonymous_args = 0
 418              		@ link register save eliminated.
 419 0000 80B4     		push	{r7}
 420              	.LCFI24:
 421              		.cfi_def_cfa_offset 4
 422              		.cfi_offset 7, -4
 423 0002 87B0     		sub	sp, sp, #28
 424              	.LCFI25:
 425              		.cfi_def_cfa_offset 32
 426 0004 00AF     		add	r7, sp, #0
 427              	.LCFI26:
 428              		.cfi_def_cfa_register 7
 429 0006 F860     		str	r0, [r7, #12]
 430 0008 0B46     		mov	r3, r1
 431 000a 7A60     		str	r2, [r7, #4]
 432 000c FB72     		strb	r3, [r7, #11]
 245:./uart/uart.c **** 	if(length<UART_DELIMITER_SIZE)
 433              		.loc 1 245 4
 434 000e FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 435 0010 032B     		cmp	r3, #3
 436 0012 01D8     		bhi	.L22
 246:./uart/uart.c **** 	 return 0;
 437              		.loc 1 246 10
 438 0014 0023     		movs	r3, #0
 439 0016 1CE0     		b	.L23
 440              	.L22:
 441              	.LBB4:
 247:./uart/uart.c **** 	for(uint8_t i=1;i<=UART_DELIMITER_SIZE;i++)
 442              		.loc 1 247 14
 443 0018 0123     		movs	r3, #1
 444 001a FB75     		strb	r3, [r7, #23]
 445              		.loc 1 247 2
 446 001c 15E0     		b	.L24
 447              	.L26:
 248:./uart/uart.c **** 	 if(buffer[length-i]!=delimiter[UART_DELIMITER_SIZE-i])
 448              		.loc 1 248 19
 449 001e FA7A     		ldrb	r2, [r7, #11]	@ zero_extendqisi2
 450 0020 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 451 0022 D31A     		subs	r3, r2, r3
 452 0024 1A46     		mov	r2, r3
 453              		.loc 1 248 12
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccM72RGg.s 			page 13


 454 0026 FB68     		ldr	r3, [r7, #12]
 455 0028 1344     		add	r3, r3, r2
 456 002a 1B78     		ldrb	r3, [r3]
 457 002c DAB2     		uxtb	r2, r3
 458              		.loc 1 248 53
 459 002e FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 460 0030 C3F10403 		rsb	r3, r3, #4
 461 0034 1946     		mov	r1, r3
 462              		.loc 1 248 33
 463 0036 7B68     		ldr	r3, [r7, #4]
 464 0038 0B44     		add	r3, r3, r1
 465              		.loc 1 248 22
 466 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 467              		.loc 1 248 5
 468 003c 9A42     		cmp	r2, r3
 469 003e 01D0     		beq	.L25
 249:./uart/uart.c **** 	  return 0;	  
 470              		.loc 1 249 11
 471 0040 0023     		movs	r3, #0
 472 0042 06E0     		b	.L23
 473              	.L25:
 247:./uart/uart.c **** 	for(uint8_t i=1;i<=UART_DELIMITER_SIZE;i++)
 474              		.loc 1 247 42 discriminator 2
 475 0044 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 476 0046 0133     		adds	r3, r3, #1
 477 0048 FB75     		strb	r3, [r7, #23]
 478              	.L24:
 247:./uart/uart.c **** 	for(uint8_t i=1;i<=UART_DELIMITER_SIZE;i++)
 479              		.loc 1 247 2 discriminator 1
 480 004a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 481 004c 042B     		cmp	r3, #4
 482 004e E6D9     		bls	.L26
 483              	.LBE4:
 250:./uart/uart.c ****  return 1;	
 484              		.loc 1 250 9
 485 0050 0123     		movs	r3, #1
 486              	.L23:
 251:./uart/uart.c **** }
 487              		.loc 1 251 1
 488 0052 1846     		mov	r0, r3
 489 0054 1C37     		adds	r7, r7, #28
 490              	.LCFI27:
 491              		.cfi_def_cfa_offset 4
 492 0056 BD46     		mov	sp, r7
 493              	.LCFI28:
 494              		.cfi_def_cfa_register 13
 495              		@ sp needed
 496 0058 80BC     		pop	{r7}
 497              	.LCFI29:
 498              		.cfi_restore 7
 499              		.cfi_def_cfa_offset 0
 500 005a 7047     		bx	lr
 501              		.cfi_endproc
 502              	.LFE37:
 504              		.section	.text.uart_init,"ax",%progbits
 505              		.align	1
 506              		.global	uart_init
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccM72RGg.s 			page 14


 507              		.syntax unified
 508              		.thumb
 509              		.thumb_func
 511              	uart_init:
 512              	.LFB38:
 252:./uart/uart.c **** //-------------------------------------------------------------------------------------------------
 253:./uart/uart.c **** //********************************************************************************************
 254:./uart/uart.c **** //
 255:./uart/uart.c **** //  uart general Prototype function
 256:./uart/uart.c **** //
 257:./uart/uart.c **** //********************************************************************************************
 258:./uart/uart.c **** /**
 259:./uart/uart.c ****  * @brief 	initializes the uart module
 260:./uart/uart.c ****  * @details initializes the uart module and configure the buad rate 
 261:./uart/uart.c ****  * 			and the message format such as start bit, parity , stop bit
 262:./uart/uart.c ****  * 			and the charactersize , it also resets the receive buffer size 
 263:./uart/uart.c ****  * 			of the uart 
 264:./uart/uart.c ****  * @return void
 265:./uart/uart.c ****  */
 266:./uart/uart.c **** void uart_init(USART_TypeDef * usartx)
 267:./uart/uart.c **** {
 513              		.loc 1 267 1
 514              		.cfi_startproc
 515              		@ args = 0, pretend = 0, frame = 8
 516              		@ frame_needed = 1, uses_anonymous_args = 0
 517 0000 80B5     		push	{r7, lr}
 518              	.LCFI30:
 519              		.cfi_def_cfa_offset 8
 520              		.cfi_offset 7, -8
 521              		.cfi_offset 14, -4
 522 0002 82B0     		sub	sp, sp, #8
 523              	.LCFI31:
 524              		.cfi_def_cfa_offset 16
 525 0004 00AF     		add	r7, sp, #0
 526              	.LCFI32:
 527              		.cfi_def_cfa_register 7
 528 0006 7860     		str	r0, [r7, #4]
 268:./uart/uart.c **** if(usartx==USART1)  
 529              		.loc 1 268 3
 530 0008 7B68     		ldr	r3, [r7, #4]
 531 000a 094A     		ldr	r2, .L30
 532 000c 9342     		cmp	r3, r2
 533 000e 02D1     		bne	.L28
 269:./uart/uart.c ****   	USART1_init();
 534              		.loc 1 269 4
 535 0010 FFF7FEFF 		bl	USART1_init
 536 0014 05E0     		b	.L29
 537              	.L28:
 270:./uart/uart.c **** else if(usartx==USART2)
 538              		.loc 1 270 8
 539 0016 7B68     		ldr	r3, [r7, #4]
 540 0018 064A     		ldr	r2, .L30+4
 541 001a 9342     		cmp	r3, r2
 542 001c 01D1     		bne	.L29
 271:./uart/uart.c ****   	USART2_init();
 543              		.loc 1 271 4
 544 001e FFF7FEFF 		bl	USART2_init
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccM72RGg.s 			page 15


 545              	.L29:
 272:./uart/uart.c **** 
 273:./uart/uart.c **** //to change uart configuration such buad rate,data frame length ,stop bits,  parity
 274:./uart/uart.c **** // based on the static options provided at the top of this file 
 275:./uart/uart.c ****  // uart_configure();
 276:./uart/uart.c **** 
 277:./uart/uart.c ****  // Reset USART buffer
 278:./uart/uart.c ****     uart_reset_buffer();
 546              		.loc 1 278 5
 547 0022 FFF7FEFF 		bl	uart_reset_buffer
 279:./uart/uart.c **** 
 280:./uart/uart.c ****  }
 548              		.loc 1 280 2
 549 0026 00BF     		nop
 550 0028 0837     		adds	r7, r7, #8
 551              	.LCFI33:
 552              		.cfi_def_cfa_offset 8
 553 002a BD46     		mov	sp, r7
 554              	.LCFI34:
 555              		.cfi_def_cfa_register 13
 556              		@ sp needed
 557 002c 80BD     		pop	{r7, pc}
 558              	.L31:
 559 002e 00BF     		.align	2
 560              	.L30:
 561 0030 00380140 		.word	1073821696
 562 0034 00440040 		.word	1073759232
 563              		.cfi_endproc
 564              	.LFE38:
 566              		.section	.text.uart_receive,"ax",%progbits
 567              		.align	1
 568              		.global	uart_receive
 569              		.syntax unified
 570              		.thumb
 571              		.thumb_func
 573              	uart_receive:
 574              	.LFB39:
 281:./uart/uart.c **** //-------------------------------------------------------------------------------------------
 282:./uart/uart.c **** /**
 283:./uart/uart.c ****  * @brief  performs areceive operation of one byte on uart
 284:./uart/uart.c ****  * 
 285:./uart/uart.c ****  * @details receives one byte on uart at the trigger of the receive complete interrupt 
 286:./uart/uart.c ****  * 			and appends this received byte to the receive buffer
 287:./uart/uart.c ****  * 			this method is called in the uart receive complete interrupt service routine
 288:./uart/uart.c ****  
 289:./uart/uart.c ****  * @returns the received byte on the uart rx module
 290:./uart/uart.c ****  * @return uint8_t 
 291:./uart/uart.c ****  */
 292:./uart/uart.c **** uint8_t uart_receive(USART_TypeDef * usartx)
 293:./uart/uart.c **** {
 575              		.loc 1 293 1
 576              		.cfi_startproc
 577              		@ args = 0, pretend = 0, frame = 16
 578              		@ frame_needed = 1, uses_anonymous_args = 0
 579 0000 80B5     		push	{r7, lr}
 580              	.LCFI35:
 581              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccM72RGg.s 			page 16


 582              		.cfi_offset 7, -8
 583              		.cfi_offset 14, -4
 584 0002 84B0     		sub	sp, sp, #16
 585              	.LCFI36:
 586              		.cfi_def_cfa_offset 24
 587 0004 00AF     		add	r7, sp, #0
 588              	.LCFI37:
 589              		.cfi_def_cfa_register 7
 590 0006 7860     		str	r0, [r7, #4]
 294:./uart/uart.c **** 
 295:./uart/uart.c **** 	/* 
 296:./uart/uart.c ****      *  PE  (Parity error) , FE (Framing error), NE (Noise error),  
 297:./uart/uart.c ****      *  ORE (OverRun error) and IDLE (Idle line detected) flags are cleared by software 
 298:./uart/uart.c ****      *     sequence: 
 299:./uart/uart.c ****      *       1. a read operation to USART_SR register 
 300:./uart/uart.c ****      *       2. followed by a read operation to USART_DR register 
 301:./uart/uart.c ****      *     RXNE flag can be also cleared by a read to the USART_DR register 
 302:./uart/uart.c ****     */
 303:./uart/uart.c ****  	volatile uint8_t data=0;
 591              		.loc 1 303 20
 592 0008 0023     		movs	r3, #0
 593 000a FB73     		strb	r3, [r7, #15]
 304:./uart/uart.c ****   	volatile uint16_t status=0;
 594              		.loc 1 304 22
 595 000c 0023     		movs	r3, #0
 596 000e BB81     		strh	r3, [r7, #12]	@ movhi
 305:./uart/uart.c **** 
 306:./uart/uart.c ****   	status=usartx->SR;
 597              		.loc 1 306 17
 598 0010 7B68     		ldr	r3, [r7, #4]
 599 0012 1B88     		ldrh	r3, [r3]	@ movhi
 600 0014 9BB2     		uxth	r3, r3
 601              		.loc 1 306 10
 602 0016 BB81     		strh	r3, [r7, #12]	@ movhi
 307:./uart/uart.c ****    	// read the received data from the usart receive buffer
 308:./uart/uart.c ****    	data=usartx->DR & 0x00ff;    // only 8_bit
 603              		.loc 1 308 16
 604 0018 7B68     		ldr	r3, [r7, #4]
 605 001a 9B88     		ldrh	r3, [r3, #4]	@ movhi
 606 001c 9BB2     		uxth	r3, r3
 607              		.loc 1 308 9
 608 001e DBB2     		uxtb	r3, r3
 609 0020 FB73     		strb	r3, [r7, #15]
 309:./uart/uart.c **** 
 310:./uart/uart.c ****     //uart_send_byte(USART1,data);
 311:./uart/uart.c ****     //if(data==';')
 312:./uart/uart.c ****     //    relays.val=0;
 313:./uart/uart.c ****     //if(USART_GetFlagStatus(USART1,USART_FLAG_PE | USART_FLAG_FE | USART_FLAG_NE | USART_FLAG_ORE)
 314:./uart/uart.c **** 
 315:./uart/uart.c ****     //push it to the receive queue
 316:./uart/uart.c **** 	if(bits_is_clear(status,(uint16_t)(USART_FLAG_PE | USART_FLAG_FE | USART_FLAG_NE | USART_FLAG_ORE)
 610              		.loc 1 316 5
 611 0022 BB89     		ldrh	r3, [r7, #12]	@ movhi
 612 0024 9BB2     		uxth	r3, r3
 613 0026 03F00F03 		and	r3, r3, #15
 614              		.loc 1 316 4
 615 002a 002B     		cmp	r3, #0
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccM72RGg.s 			page 17


 616 002c 0CD1     		bne	.L33
 317:./uart/uart.c ****     {
 318:./uart/uart.c **** 	  	// here try to append the data to the received buffer
 319:./uart/uart.c **** 		if(!uart_rx_buffer_add(data))
 617              		.loc 1 319 7
 618 002e FB7B     		ldrb	r3, [r7, #15]
 619 0030 DBB2     		uxtb	r3, r3
 620 0032 1846     		mov	r0, r3
 621 0034 FFF7FEFF 		bl	uart_rx_buffer_add
 622 0038 0346     		mov	r3, r0
 623              		.loc 1 319 5
 624 003a 002B     		cmp	r3, #0
 625 003c 04D1     		bne	.L33
 320:./uart/uart.c **** 		{
 321:./uart/uart.c **** 		  // it is failed to add a new data as buffer is full
 322:./uart/uart.c **** 			uart_reset_buffer();
 626              		.loc 1 322 4
 627 003e FFF7FEFF 		bl	uart_reset_buffer
 323:./uart/uart.c **** 			buffer_overflow=1;	      
 628              		.loc 1 323 19
 629 0042 044B     		ldr	r3, .L35
 630 0044 0122     		movs	r2, #1
 631 0046 1A70     		strb	r2, [r3]
 632              	.L33:
 324:./uart/uart.c **** 		}
 325:./uart/uart.c **** 	}
 326:./uart/uart.c **** 
 327:./uart/uart.c ****   return data;	
 633              		.loc 1 327 10
 634 0048 FB7B     		ldrb	r3, [r7, #15]
 635 004a DBB2     		uxtb	r3, r3
 328:./uart/uart.c **** }
 636              		.loc 1 328 1
 637 004c 1846     		mov	r0, r3
 638 004e 1037     		adds	r7, r7, #16
 639              	.LCFI38:
 640              		.cfi_def_cfa_offset 8
 641 0050 BD46     		mov	sp, r7
 642              	.LCFI39:
 643              		.cfi_def_cfa_register 13
 644              		@ sp needed
 645 0052 80BD     		pop	{r7, pc}
 646              	.L36:
 647              		.align	2
 648              	.L35:
 649 0054 00000000 		.word	buffer_overflow
 650              		.cfi_endproc
 651              	.LFE39:
 653              		.section	.text.uart_receive_start,"ax",%progbits
 654              		.align	1
 655              		.global	uart_receive_start
 656              		.syntax unified
 657              		.thumb
 658              		.thumb_func
 660              	uart_receive_start:
 661              	.LFB40:
 329:./uart/uart.c **** //-----------------------------------------------------------------------------
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccM72RGg.s 			page 18


 330:./uart/uart.c **** /**
 331:./uart/uart.c ****  * @brief puts the uart in the receive mode
 332:./uart/uart.c ****  * @details initializes the uart to operate in the receive mode
 333:./uart/uart.c ****  * 			and resets the receive buffer
 334:./uart/uart.c ****  * @return void 
 335:./uart/uart.c ****  */
 336:./uart/uart.c **** void uart_receive_start(USART_TypeDef * usartx)
 337:./uart/uart.c **** {
 662              		.loc 1 337 1
 663              		.cfi_startproc
 664              		@ args = 0, pretend = 0, frame = 8
 665              		@ frame_needed = 1, uses_anonymous_args = 0
 666 0000 80B5     		push	{r7, lr}
 667              	.LCFI40:
 668              		.cfi_def_cfa_offset 8
 669              		.cfi_offset 7, -8
 670              		.cfi_offset 14, -4
 671 0002 82B0     		sub	sp, sp, #8
 672              	.LCFI41:
 673              		.cfi_def_cfa_offset 16
 674 0004 00AF     		add	r7, sp, #0
 675              	.LCFI42:
 676              		.cfi_def_cfa_register 7
 677 0006 7860     		str	r0, [r7, #4]
 338:./uart/uart.c ****  // define the data direction of tx,rx pins
 339:./uart/uart.c ****   	 gpio_pin_mode(uart_tx,GPIO_MODE_AF_PP_50MHZ);
 678              		.loc 1 339 5
 679 0008 0E4B     		ldr	r3, .L38
 680 000a 0B22     		movs	r2, #11
 681 000c 93E80300 		ldm	r3, {r0, r1}
 682 0010 FFF7FEFF 		bl	gpio_pin_mode
 340:./uart/uart.c **** 	 gpio_pin_mode(uart_rx,GPIO_MODE_IN_FLOATING);
 683              		.loc 1 340 3
 684 0014 0C4B     		ldr	r3, .L38+4
 685 0016 0422     		movs	r2, #4
 686 0018 93E80300 		ldm	r3, {r0, r1}
 687 001c FFF7FEFF 		bl	gpio_pin_mode
 341:./uart/uart.c ****   /* clear all flag errors*/
 342:./uart/uart.c ****   usartx->SR=0;
 688              		.loc 1 342 13
 689 0020 7B68     		ldr	r3, [r7, #4]
 690 0022 0022     		movs	r2, #0
 691 0024 1A80     		strh	r2, [r3]	@ movhi
 343:./uart/uart.c ****   /* Enable receive mode and and receive RXNE Interrupt Enable */
 344:./uart/uart.c ****   SET_BIT(usartx->CR1,USART_CR1_RE|USART_CR1_RXNEIE);	
 692              		.loc 1 344 3
 693 0026 7B68     		ldr	r3, [r7, #4]
 694 0028 9B89     		ldrh	r3, [r3, #12]	@ movhi
 695 002a 9BB2     		uxth	r3, r3
 696 002c 43F02403 		orr	r3, r3, #36
 697 0030 9AB2     		uxth	r2, r3
 698 0032 7B68     		ldr	r3, [r7, #4]
 699 0034 9A81     		strh	r2, [r3, #12]	@ movhi
 345:./uart/uart.c ****   //reset the uart buffer
 346:./uart/uart.c ****     uart_reset_buffer();	  
 700              		.loc 1 346 5
 701 0036 FFF7FEFF 		bl	uart_reset_buffer
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccM72RGg.s 			page 19


 347:./uart/uart.c **** }
 702              		.loc 1 347 1
 703 003a 00BF     		nop
 704 003c 0837     		adds	r7, r7, #8
 705              	.LCFI43:
 706              		.cfi_def_cfa_offset 8
 707 003e BD46     		mov	sp, r7
 708              	.LCFI44:
 709              		.cfi_def_cfa_register 13
 710              		@ sp needed
 711 0040 80BD     		pop	{r7, pc}
 712              	.L39:
 713 0042 00BF     		.align	2
 714              	.L38:
 715 0044 00000000 		.word	uart_tx
 716 0048 00000000 		.word	uart_rx
 717              		.cfi_endproc
 718              	.LFE40:
 720              		.section	.text.uart_receive_stop,"ax",%progbits
 721              		.align	1
 722              		.global	uart_receive_stop
 723              		.syntax unified
 724              		.thumb
 725              		.thumb_func
 727              	uart_receive_stop:
 728              	.LFB41:
 348:./uart/uart.c **** //-------------------------------------------------------------------------------------------------
 349:./uart/uart.c **** /**
 350:./uart/uart.c ****  * @brief stop the current receiving message  
 351:./uart/uart.c ****  * @details stop the current receive operation and resets the 
 352:./uart/uart.c ****  * 			the receive module of the uart
 353:./uart/uart.c ****  */
 354:./uart/uart.c **** void uart_receive_stop(USART_TypeDef * usartx)
 355:./uart/uart.c **** {
 729              		.loc 1 355 1
 730              		.cfi_startproc
 731              		@ args = 0, pretend = 0, frame = 8
 732              		@ frame_needed = 1, uses_anonymous_args = 0
 733 0000 80B5     		push	{r7, lr}
 734              	.LCFI45:
 735              		.cfi_def_cfa_offset 8
 736              		.cfi_offset 7, -8
 737              		.cfi_offset 14, -4
 738 0002 82B0     		sub	sp, sp, #8
 739              	.LCFI46:
 740              		.cfi_def_cfa_offset 16
 741 0004 00AF     		add	r7, sp, #0
 742              	.LCFI47:
 743              		.cfi_def_cfa_register 7
 744 0006 7860     		str	r0, [r7, #4]
 356:./uart/uart.c **** // Stop listening. 
 357:./uart/uart.c **** /* clear all flag errors*/
 358:./uart/uart.c **** 		usartx->SR=0;
 745              		.loc 1 358 13
 746 0008 7B68     		ldr	r3, [r7, #4]
 747 000a 0022     		movs	r2, #0
 748 000c 1A80     		strh	r2, [r3]	@ movhi
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccM72RGg.s 			page 20


 359:./uart/uart.c **** 	/* disable receive mode and and receive RXNE Interrupt Enable */
 360:./uart/uart.c **** 	 CLEAR_BIT(usartx->CR1,USART_CR1_RE|USART_CR1_RXNEIE);
 749              		.loc 1 360 3
 750 000e 7B68     		ldr	r3, [r7, #4]
 751 0010 9B89     		ldrh	r3, [r3, #12]	@ movhi
 752 0012 9BB2     		uxth	r3, r3
 753 0014 23F02403 		bic	r3, r3, #36
 754 0018 9AB2     		uxth	r2, r3
 755 001a 7B68     		ldr	r3, [r7, #4]
 756 001c 9A81     		strh	r2, [r3, #12]	@ movhi
 361:./uart/uart.c ****    //reset the uart buffer
 362:./uart/uart.c ****    uart_reset_buffer();	 
 757              		.loc 1 362 4
 758 001e FFF7FEFF 		bl	uart_reset_buffer
 363:./uart/uart.c **** }
 759              		.loc 1 363 1
 760 0022 00BF     		nop
 761 0024 0837     		adds	r7, r7, #8
 762              	.LCFI48:
 763              		.cfi_def_cfa_offset 8
 764 0026 BD46     		mov	sp, r7
 765              	.LCFI49:
 766              		.cfi_def_cfa_register 13
 767              		@ sp needed
 768 0028 80BD     		pop	{r7, pc}
 769              		.cfi_endproc
 770              	.LFE41:
 772              		.section	.text.uart_islistening,"ax",%progbits
 773              		.align	1
 774              		.global	uart_islistening
 775              		.syntax unified
 776              		.thumb
 777              		.thumb_func
 779              	uart_islistening:
 780              	.LFB42:
 364:./uart/uart.c **** //-------------------------------------------------------------------------------------------------
 365:./uart/uart.c **** /**
 366:./uart/uart.c ****  * @brief  checks if the uart in the receive mode and listens
 367:./uart/uart.c ****  * 
 368:./uart/uart.c ****  * @details checks if the uart in the receive mode and the 
 369:./uart/uart.c ****  * 			receive complete interrupt mask bit has been activated
 370:./uart/uart.c ****  * @return uint8_t 
 371:./uart/uart.c ****  */
 372:./uart/uart.c **** uint8_t uart_islistening(USART_TypeDef * usartx)
 373:./uart/uart.c **** { 	
 781              		.loc 1 373 1
 782              		.cfi_startproc
 783              		@ args = 0, pretend = 0, frame = 8
 784              		@ frame_needed = 1, uses_anonymous_args = 0
 785              		@ link register save eliminated.
 786 0000 80B4     		push	{r7}
 787              	.LCFI50:
 788              		.cfi_def_cfa_offset 4
 789              		.cfi_offset 7, -4
 790 0002 83B0     		sub	sp, sp, #12
 791              	.LCFI51:
 792              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccM72RGg.s 			page 21


 793 0004 00AF     		add	r7, sp, #0
 794              	.LCFI52:
 795              		.cfi_def_cfa_register 7
 796 0006 7860     		str	r0, [r7, #4]
 374:./uart/uart.c ****  /* checks if the uart in the receive mode and listens */
 375:./uart/uart.c ****  if(bits_is_set(usartx->CR1,USART_CR1_RE) && bits_is_set(usartx->CR1,USART_CR1_RXNEIE))
 797              		.loc 1 375 5
 798 0008 7B68     		ldr	r3, [r7, #4]
 799 000a 9B89     		ldrh	r3, [r3, #12]	@ movhi
 800 000c 9BB2     		uxth	r3, r3
 801 000e 03F00403 		and	r3, r3, #4
 802              		.loc 1 375 4
 803 0012 002B     		cmp	r3, #0
 804 0014 08D0     		beq	.L42
 805              		.loc 1 375 46 discriminator 1
 806 0016 7B68     		ldr	r3, [r7, #4]
 807 0018 9B89     		ldrh	r3, [r3, #12]	@ movhi
 808 001a 9BB2     		uxth	r3, r3
 809 001c 03F02003 		and	r3, r3, #32
 810              		.loc 1 375 43 discriminator 1
 811 0020 002B     		cmp	r3, #0
 812 0022 01D0     		beq	.L42
 376:./uart/uart.c ****   return 1;
 813              		.loc 1 376 10
 814 0024 0123     		movs	r3, #1
 815 0026 00E0     		b	.L43
 816              	.L42:
 377:./uart/uart.c ****  return 0;
 817              		.loc 1 377 9
 818 0028 0023     		movs	r3, #0
 819              	.L43:
 378:./uart/uart.c **** }
 820              		.loc 1 378 1
 821 002a 1846     		mov	r0, r3
 822 002c 0C37     		adds	r7, r7, #12
 823              	.LCFI53:
 824              		.cfi_def_cfa_offset 4
 825 002e BD46     		mov	sp, r7
 826              	.LCFI54:
 827              		.cfi_def_cfa_register 13
 828              		@ sp needed
 829 0030 80BC     		pop	{r7}
 830              	.LCFI55:
 831              		.cfi_restore 7
 832              		.cfi_def_cfa_offset 0
 833 0032 7047     		bx	lr
 834              		.cfi_endproc
 835              	.LFE42:
 837              		.section	.rodata
 838              		.align	2
 839              	.LC0:
 840 0000 203B0D0A 		.ascii	" ;\015\012\000"
 840      00
 841              		.section	.text.uart_data_is_available,"ax",%progbits
 842              		.align	1
 843              		.global	uart_data_is_available
 844              		.syntax unified
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccM72RGg.s 			page 22


 845              		.thumb
 846              		.thumb_func
 848              	uart_data_is_available:
 849              	.LFB43:
 379:./uart/uart.c **** //-------------------------------------------------------------------------------------------------
 380:./uart/uart.c **** /**
 381:./uart/uart.c ****  * @brief checks if data is available 
 382:./uart/uart.c ****  * @details it checks if a complete command message has received
 383:./uart/uart.c ****  * 			note that each command message should ends witha space and ; == " ;"
 384:./uart/uart.c ****  * @return uint8_t 
 385:./uart/uart.c ****  */
 386:./uart/uart.c **** uint8_t uart_data_is_available()
 387:./uart/uart.c **** {
 850              		.loc 1 387 1
 851              		.cfi_startproc
 852              		@ args = 0, pretend = 0, frame = 8
 853              		@ frame_needed = 1, uses_anonymous_args = 0
 854 0000 80B5     		push	{r7, lr}
 855              	.LCFI56:
 856              		.cfi_def_cfa_offset 8
 857              		.cfi_offset 7, -8
 858              		.cfi_offset 14, -4
 859 0002 82B0     		sub	sp, sp, #8
 860              	.LCFI57:
 861              		.cfi_def_cfa_offset 16
 862 0004 00AF     		add	r7, sp, #0
 863              	.LCFI58:
 864              		.cfi_def_cfa_register 7
 388:./uart/uart.c ****  char * delim=" ;\r\n";
 865              		.loc 1 388 9
 866 0006 0D4B     		ldr	r3, .L47
 867 0008 7B60     		str	r3, [r7, #4]
 389:./uart/uart.c ****  if(rx_buffer_length!=0)
 868              		.loc 1 389 21
 869 000a 0D4B     		ldr	r3, .L47+4
 870 000c 1B78     		ldrb	r3, [r3]
 871 000e DBB2     		uxtb	r3, r3
 872              		.loc 1 389 4
 873 0010 002B     		cmp	r3, #0
 874 0012 0ED0     		beq	.L45
 875              	.LBB5:
 390:./uart/uart.c ****  {	 
 391:./uart/uart.c **** 	//const uint8_t * tmp=0;
 392:./uart/uart.c ****    const uint8_t * tmp=(uint8_t *) memmem((uint8_t *)rx_buffer,rx_buffer_length,
 876              		.loc 1 392 36
 877 0014 0A4B     		ldr	r3, .L47+4
 878 0016 1B78     		ldrb	r3, [r3]
 879 0018 DBB2     		uxtb	r3, r3
 880 001a 1946     		mov	r1, r3
 881 001c 0423     		movs	r3, #4
 882 001e 7A68     		ldr	r2, [r7, #4]
 883 0020 0848     		ldr	r0, .L47+8
 884 0022 FFF7FEFF 		bl	memmem
 885 0026 3860     		str	r0, [r7]
 393:./uart/uart.c ****    										  (uint8_t *)delim,sizeof(delim));
 394:./uart/uart.c ****    if(tmp!=NULL)
 886              		.loc 1 394 6
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccM72RGg.s 			page 23


 887 0028 3B68     		ldr	r3, [r7]
 888 002a 002B     		cmp	r3, #0
 889 002c 01D0     		beq	.L45
 395:./uart/uart.c ****      return 1;
 890              		.loc 1 395 13
 891 002e 0123     		movs	r3, #1
 892 0030 00E0     		b	.L46
 893              	.L45:
 894              	.LBE5:
 396:./uart/uart.c ****  }
 397:./uart/uart.c ****   
 398:./uart/uart.c ****  return 0;
 895              		.loc 1 398 9
 896 0032 0023     		movs	r3, #0
 897              	.L46:
 399:./uart/uart.c **** }
 898              		.loc 1 399 1
 899 0034 1846     		mov	r0, r3
 900 0036 0837     		adds	r7, r7, #8
 901              	.LCFI59:
 902              		.cfi_def_cfa_offset 8
 903 0038 BD46     		mov	sp, r7
 904              	.LCFI60:
 905              		.cfi_def_cfa_register 13
 906              		@ sp needed
 907 003a 80BD     		pop	{r7, pc}
 908              	.L48:
 909              		.align	2
 910              	.L47:
 911 003c 00000000 		.word	.LC0
 912 0040 00000000 		.word	rx_buffer_length
 913 0044 00000000 		.word	rx_buffer
 914              		.cfi_endproc
 915              	.LFE43:
 917              		.section	.text.uart_read_byte,"ax",%progbits
 918              		.align	1
 919              		.global	uart_read_byte
 920              		.syntax unified
 921              		.thumb
 922              		.thumb_func
 924              	uart_read_byte:
 925              	.LFB44:
 400:./uart/uart.c **** //-----------------------------------------------------------------------------
 401:./uart/uart.c **** //********************************************************************************************
 402:./uart/uart.c **** //
 403:./uart/uart.c **** //  uart send methods Prototype function
 404:./uart/uart.c **** //
 405:./uart/uart.c **** //********************************************************************************************
 406:./uart/uart.c **** /**
 407:./uart/uart.c ****  * @brief read a byte from the uart data register
 408:./uart/uart.c ****  * @details reseved for future use
 409:./uart/uart.c ****  * @return uint8_t
 410:./uart/uart.c ****  * 
 411:./uart/uart.c ****  */
 412:./uart/uart.c **** uint8_t uart_read_byte(USART_TypeDef * usartx)
 413:./uart/uart.c **** {
 926              		.loc 1 413 1
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccM72RGg.s 			page 24


 927              		.cfi_startproc
 928              		@ args = 0, pretend = 0, frame = 8
 929              		@ frame_needed = 1, uses_anonymous_args = 0
 930              		@ link register save eliminated.
 931 0000 80B4     		push	{r7}
 932              	.LCFI61:
 933              		.cfi_def_cfa_offset 4
 934              		.cfi_offset 7, -4
 935 0002 83B0     		sub	sp, sp, #12
 936              	.LCFI62:
 937              		.cfi_def_cfa_offset 16
 938 0004 00AF     		add	r7, sp, #0
 939              	.LCFI63:
 940              		.cfi_def_cfa_register 7
 941 0006 7860     		str	r0, [r7, #4]
 414:./uart/uart.c ****     while(bits_is_clear(usartx->SR,USART_SR_RXNE));   
 942              		.loc 1 414 10
 943 0008 00BF     		nop
 944              	.L50:
 945              		.loc 1 414 11 discriminator 1
 946 000a 7B68     		ldr	r3, [r7, #4]
 947 000c 1B88     		ldrh	r3, [r3]	@ movhi
 948 000e 9BB2     		uxth	r3, r3
 949 0010 03F02003 		and	r3, r3, #32
 950              		.loc 1 414 10 discriminator 1
 951 0014 002B     		cmp	r3, #0
 952 0016 F8D0     		beq	.L50
 415:./uart/uart.c ****      return usartx->DR & (uint16_t) 0x00ff;     
 953              		.loc 1 415 19
 954 0018 7B68     		ldr	r3, [r7, #4]
 955 001a 9B88     		ldrh	r3, [r3, #4]	@ movhi
 956 001c 9BB2     		uxth	r3, r3
 957              		.loc 1 415 24
 958 001e DBB2     		uxtb	r3, r3
 416:./uart/uart.c **** }
 959              		.loc 1 416 1
 960 0020 1846     		mov	r0, r3
 961 0022 0C37     		adds	r7, r7, #12
 962              	.LCFI64:
 963              		.cfi_def_cfa_offset 4
 964 0024 BD46     		mov	sp, r7
 965              	.LCFI65:
 966              		.cfi_def_cfa_register 13
 967              		@ sp needed
 968 0026 80BC     		pop	{r7}
 969              	.LCFI66:
 970              		.cfi_restore 7
 971              		.cfi_def_cfa_offset 0
 972 0028 7047     		bx	lr
 973              		.cfi_endproc
 974              	.LFE44:
 976              		.section	.text.uart_write_byte,"ax",%progbits
 977              		.align	1
 978              		.global	uart_write_byte
 979              		.syntax unified
 980              		.thumb
 981              		.thumb_func
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccM72RGg.s 			page 25


 983              	uart_write_byte:
 984              	.LFB45:
 417:./uart/uart.c **** //------------------------------------------------------------------------------
 418:./uart/uart.c **** /**
 419:./uart/uart.c ****  * @brief  writes a byte to the uart data register without disabling the receive mode
 420:./uart/uart.c ****  * @details writes a byte to the uart data register
 421:./uart/uart.c ****  * 			which be later sent on the uart TX output pin 
 422:./uart/uart.c ****  
 423:./uart/uart.c ****  * @param val the passed value to be sent on the uart TX line
 424:./uart/uart.c ****  */
 425:./uart/uart.c **** void uart_write_byte(USART_TypeDef * usartx ,uint8_t val)
 426:./uart/uart.c **** {
 985              		.loc 1 426 1
 986              		.cfi_startproc
 987              		@ args = 0, pretend = 0, frame = 8
 988              		@ frame_needed = 1, uses_anonymous_args = 0
 989              		@ link register save eliminated.
 990 0000 80B4     		push	{r7}
 991              	.LCFI67:
 992              		.cfi_def_cfa_offset 4
 993              		.cfi_offset 7, -4
 994 0002 83B0     		sub	sp, sp, #12
 995              	.LCFI68:
 996              		.cfi_def_cfa_offset 16
 997 0004 00AF     		add	r7, sp, #0
 998              	.LCFI69:
 999              		.cfi_def_cfa_register 7
 1000 0006 7860     		str	r0, [r7, #4]
 1001 0008 0B46     		mov	r3, r1
 1002 000a FB70     		strb	r3, [r7, #3]
 427:./uart/uart.c **** 
 428:./uart/uart.c **** 	while(bits_is_clear(usartx->SR,USART_SR_TXE));		//while(USART_GetFlagStatus(usartx,USART_FLAG_TXE)
 1003              		.loc 1 428 7
 1004 000c 00BF     		nop
 1005              	.L53:
 1006              		.loc 1 428 8 discriminator 1
 1007 000e 7B68     		ldr	r3, [r7, #4]
 1008 0010 1B88     		ldrh	r3, [r3]	@ movhi
 1009 0012 9BB2     		uxth	r3, r3
 1010 0014 03F08003 		and	r3, r3, #128
 1011              		.loc 1 428 7 discriminator 1
 1012 0018 002B     		cmp	r3, #0
 1013 001a F8D0     		beq	.L53
 429:./uart/uart.c ****  	 usartx->DR=(val & (uint16_t) 0x00ff);
 1014              		.loc 1 429 14
 1015 001c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1016 001e 9AB2     		uxth	r2, r3
 1017 0020 7B68     		ldr	r3, [r7, #4]
 1018 0022 9A80     		strh	r2, [r3, #4]	@ movhi
 430:./uart/uart.c **** 
 431:./uart/uart.c ****  }
 1019              		.loc 1 431 2
 1020 0024 00BF     		nop
 1021 0026 0C37     		adds	r7, r7, #12
 1022              	.LCFI70:
 1023              		.cfi_def_cfa_offset 4
 1024 0028 BD46     		mov	sp, r7
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccM72RGg.s 			page 26


 1025              	.LCFI71:
 1026              		.cfi_def_cfa_register 13
 1027              		@ sp needed
 1028 002a 80BC     		pop	{r7}
 1029              	.LCFI72:
 1030              		.cfi_restore 7
 1031              		.cfi_def_cfa_offset 0
 1032 002c 7047     		bx	lr
 1033              		.cfi_endproc
 1034              	.LFE45:
 1036              		.section	.text.uart_write_buffer,"ax",%progbits
 1037              		.align	1
 1038              		.global	uart_write_buffer
 1039              		.syntax unified
 1040              		.thumb
 1041              		.thumb_func
 1043              	uart_write_buffer:
 1044              	.LFB46:
 432:./uart/uart.c **** //-------------------------------------------------------------------------------------------------
 433:./uart/uart.c **** /**
 434:./uart/uart.c ****  * @brief write an array of data to the uart transmit bufferwithout disabling the receive mode
 435:./uart/uart.c ****  * 
 436:./uart/uart.c ****  * @details  writes this array of bytes to the uart data rgister 
 437:./uart/uart.c ****  * 			 in sequnce to be transmisted on the TX output pin
 438:./uart/uart.c ****  * 
 439:./uart/uart.c ****  * @param buff a pointer to the data array
 440:./uart/uart.c ****  * @param size  the length of this data array buffer
 441:./uart/uart.c ****  * @returns void
 442:./uart/uart.c ****  */
 443:./uart/uart.c **** void uart_write_buffer(USART_TypeDef * usartx ,uint8_t * buff,uint16_t size)
 444:./uart/uart.c **** {
 1045              		.loc 1 444 1
 1046              		.cfi_startproc
 1047              		@ args = 0, pretend = 0, frame = 24
 1048              		@ frame_needed = 1, uses_anonymous_args = 0
 1049 0000 80B5     		push	{r7, lr}
 1050              	.LCFI73:
 1051              		.cfi_def_cfa_offset 8
 1052              		.cfi_offset 7, -8
 1053              		.cfi_offset 14, -4
 1054 0002 86B0     		sub	sp, sp, #24
 1055              	.LCFI74:
 1056              		.cfi_def_cfa_offset 32
 1057 0004 00AF     		add	r7, sp, #0
 1058              	.LCFI75:
 1059              		.cfi_def_cfa_register 7
 1060 0006 F860     		str	r0, [r7, #12]
 1061 0008 B960     		str	r1, [r7, #8]
 1062 000a 1346     		mov	r3, r2
 1063 000c FB80     		strh	r3, [r7, #6]	@ movhi
 445:./uart/uart.c **** 	uint16_t i=0;
 1064              		.loc 1 445 11
 1065 000e 0023     		movs	r3, #0
 1066 0010 FB82     		strh	r3, [r7, #22]	@ movhi
 446:./uart/uart.c **** 	for(i=0;i<size;i++)
 1067              		.loc 1 446 7
 1068 0012 0023     		movs	r3, #0
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccM72RGg.s 			page 27


 1069 0014 FB82     		strh	r3, [r7, #22]	@ movhi
 1070              		.loc 1 446 2
 1071 0016 0AE0     		b	.L55
 1072              	.L56:
 447:./uart/uart.c **** 	 uart_write_byte((USART_TypeDef *) usartx ,buff[i]);
 1073              		.loc 1 447 49 discriminator 3
 1074 0018 FB8A     		ldrh	r3, [r7, #22]
 1075 001a BA68     		ldr	r2, [r7, #8]
 1076 001c 1344     		add	r3, r3, r2
 1077              		.loc 1 447 3 discriminator 3
 1078 001e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1079 0020 1946     		mov	r1, r3
 1080 0022 F868     		ldr	r0, [r7, #12]
 1081 0024 FFF7FEFF 		bl	uart_write_byte
 446:./uart/uart.c **** 	for(i=0;i<size;i++)
 1082              		.loc 1 446 18 discriminator 3
 1083 0028 FB8A     		ldrh	r3, [r7, #22]
 1084 002a 0133     		adds	r3, r3, #1
 1085 002c FB82     		strh	r3, [r7, #22]	@ movhi
 1086              	.L55:
 446:./uart/uart.c **** 	for(i=0;i<size;i++)
 1087              		.loc 1 446 2 discriminator 1
 1088 002e FA8A     		ldrh	r2, [r7, #22]
 1089 0030 FB88     		ldrh	r3, [r7, #6]
 1090 0032 9A42     		cmp	r2, r3
 1091 0034 F0D3     		bcc	.L56
 448:./uart/uart.c **** }
 1092              		.loc 1 448 1
 1093 0036 00BF     		nop
 1094 0038 00BF     		nop
 1095 003a 1837     		adds	r7, r7, #24
 1096              	.LCFI76:
 1097              		.cfi_def_cfa_offset 8
 1098 003c BD46     		mov	sp, r7
 1099              	.LCFI77:
 1100              		.cfi_def_cfa_register 13
 1101              		@ sp needed
 1102 003e 80BD     		pop	{r7, pc}
 1103              		.cfi_endproc
 1104              	.LFE46:
 1106              		.section	.text.uart_send_byte,"ax",%progbits
 1107              		.align	1
 1108              		.global	uart_send_byte
 1109              		.syntax unified
 1110              		.thumb
 1111              		.thumb_func
 1113              	uart_send_byte:
 1114              	.LFB47:
 449:./uart/uart.c **** //-------------------------------------------------------------------------------------------------
 450:./uart/uart.c **** /**
 451:./uart/uart.c ****  * @brief sends one byte on the  uart with disabling the receive mode
 452:./uart/uart.c ****  * 
 453:./uart/uart.c ****  * @details it first change the uart mode to work in the transmist mode 
 454:./uart/uart.c ****  * 			then sends the byte by first configure the TX IO pin , then write to the 
 455:./uart/uart.c ****  * 			uart data register. finally returns the module to the receive mode to avoid 
 456:./uart/uart.c ****  * 			losing any received data on the  RX Input pin
 457:./uart/uart.c ****  * @param byte 
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccM72RGg.s 			page 28


 458:./uart/uart.c ****  * @return uint8_t 
 459:./uart/uart.c ****  */
 460:./uart/uart.c **** uint8_t uart_send_byte(USART_TypeDef * usartx, uint8_t byte)
 461:./uart/uart.c **** {
 1115              		.loc 1 461 1
 1116              		.cfi_startproc
 1117              		@ args = 0, pretend = 0, frame = 8
 1118              		@ frame_needed = 1, uses_anonymous_args = 0
 1119 0000 80B5     		push	{r7, lr}
 1120              	.LCFI78:
 1121              		.cfi_def_cfa_offset 8
 1122              		.cfi_offset 7, -8
 1123              		.cfi_offset 14, -4
 1124 0002 82B0     		sub	sp, sp, #8
 1125              	.LCFI79:
 1126              		.cfi_def_cfa_offset 16
 1127 0004 00AF     		add	r7, sp, #0
 1128              	.LCFI80:
 1129              		.cfi_def_cfa_register 7
 1130 0006 7860     		str	r0, [r7, #4]
 1131 0008 0B46     		mov	r3, r1
 1132 000a FB70     		strb	r3, [r7, #3]
 462:./uart/uart.c **** 	// define the data direction of tx,rx pins
 463:./uart/uart.c ****   	 gpio_pin_mode(uart_tx,GPIO_MODE_AF_PP_50MHZ);
 1133              		.loc 1 463 5
 1134 000c 144B     		ldr	r3, .L59
 1135 000e 0B22     		movs	r2, #11
 1136 0010 93E80300 		ldm	r3, {r0, r1}
 1137 0014 FFF7FEFF 		bl	gpio_pin_mode
 464:./uart/uart.c **** 	 gpio_pin_mode(uart_rx,GPIO_MODE_IN_FLOATING);
 1138              		.loc 1 464 3
 1139 0018 124B     		ldr	r3, .L59+4
 1140 001a 0422     		movs	r2, #4
 1141 001c 93E80300 		ldm	r3, {r0, r1}
 1142 0020 FFF7FEFF 		bl	gpio_pin_mode
 465:./uart/uart.c **** 
 466:./uart/uart.c ****   	/* disable uart rx receive interrupt*/
 467:./uart/uart.c **** 	 uart_set_rx_Int_mask(usartx,DISABLE);
 1143              		.loc 1 467 3
 1144 0024 0021     		movs	r1, #0
 1145 0026 7868     		ldr	r0, [r7, #4]
 1146 0028 FFF7FEFF 		bl	uart_set_rx_Int_mask
 468:./uart/uart.c **** 
 469:./uart/uart.c ****   	/* clear all flag errors*/
 470:./uart/uart.c ****   	usartx->SR=0;
 1147              		.loc 1 470 14
 1148 002c 7B68     		ldr	r3, [r7, #4]
 1149 002e 0022     		movs	r2, #0
 1150 0030 1A80     		strh	r2, [r3]	@ movhi
 471:./uart/uart.c **** 	SET_BIT(usartx->CR1,USART_CR1_TE);
 1151              		.loc 1 471 2
 1152 0032 7B68     		ldr	r3, [r7, #4]
 1153 0034 9B89     		ldrh	r3, [r3, #12]	@ movhi
 1154 0036 9BB2     		uxth	r3, r3
 1155 0038 43F00803 		orr	r3, r3, #8
 1156 003c 9AB2     		uxth	r2, r3
 1157 003e 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccM72RGg.s 			page 29


 1158 0040 9A81     		strh	r2, [r3, #12]	@ movhi
 472:./uart/uart.c **** 
 473:./uart/uart.c **** 	// send payload
 474:./uart/uart.c **** 		uart_write_byte(usartx,byte);		
 1159              		.loc 1 474 3
 1160 0042 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1161 0044 1946     		mov	r1, r3
 1162 0046 7868     		ldr	r0, [r7, #4]
 1163 0048 FFF7FEFF 		bl	uart_write_byte
 475:./uart/uart.c **** 
 476:./uart/uart.c ****   	/* disable uart rx receive interrupt*/
 477:./uart/uart.c **** 	 uart_set_rx_Int_mask(usartx,ENABLE);
 1164              		.loc 1 477 3
 1165 004c 0121     		movs	r1, #1
 1166 004e 7868     		ldr	r0, [r7, #4]
 1167 0050 FFF7FEFF 		bl	uart_set_rx_Int_mask
 478:./uart/uart.c **** 
 479:./uart/uart.c **** 	return 1;
 1168              		.loc 1 479 9
 1169 0054 0123     		movs	r3, #1
 480:./uart/uart.c **** }
 1170              		.loc 1 480 1
 1171 0056 1846     		mov	r0, r3
 1172 0058 0837     		adds	r7, r7, #8
 1173              	.LCFI81:
 1174              		.cfi_def_cfa_offset 8
 1175 005a BD46     		mov	sp, r7
 1176              	.LCFI82:
 1177              		.cfi_def_cfa_register 13
 1178              		@ sp needed
 1179 005c 80BD     		pop	{r7, pc}
 1180              	.L60:
 1181 005e 00BF     		.align	2
 1182              	.L59:
 1183 0060 00000000 		.word	uart_tx
 1184 0064 00000000 		.word	uart_rx
 1185              		.cfi_endproc
 1186              	.LFE47:
 1188              		.section	.text.uart_send_buffer,"ax",%progbits
 1189              		.align	1
 1190              		.global	uart_send_buffer
 1191              		.syntax unified
 1192              		.thumb
 1193              		.thumb_func
 1195              	uart_send_buffer:
 1196              	.LFB48:
 481:./uart/uart.c **** //-------------------------------------------------------------------------------------------------
 482:./uart/uart.c **** /**
 483:./uart/uart.c ****  * @brief sends an array of bytes on the uart
 484:./uart/uart.c ****  * 
 485:./uart/uart.c ****  * @details it is an extension to uart_send_byte, hence it sends an array of data bytes 
 486:./uart/uart.c ****  * 			on the uart
 487:./uart/uart.c ****  * 
 488:./uart/uart.c ****  * @param buf 			a pointer to array of bytes 
 489:./uart/uart.c ****  * @param buf_size 		the length of data array/buffer
 490:./uart/uart.c ****  */
 491:./uart/uart.c **** void uart_send_buffer(USART_TypeDef * usartx ,uint8_t * buf,uint16_t buf_size)
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccM72RGg.s 			page 30


 492:./uart/uart.c **** {
 1197              		.loc 1 492 1
 1198              		.cfi_startproc
 1199              		@ args = 0, pretend = 0, frame = 16
 1200              		@ frame_needed = 1, uses_anonymous_args = 0
 1201 0000 80B5     		push	{r7, lr}
 1202              	.LCFI83:
 1203              		.cfi_def_cfa_offset 8
 1204              		.cfi_offset 7, -8
 1205              		.cfi_offset 14, -4
 1206 0002 84B0     		sub	sp, sp, #16
 1207              	.LCFI84:
 1208              		.cfi_def_cfa_offset 24
 1209 0004 00AF     		add	r7, sp, #0
 1210              	.LCFI85:
 1211              		.cfi_def_cfa_register 7
 1212 0006 F860     		str	r0, [r7, #12]
 1213 0008 B960     		str	r1, [r7, #8]
 1214 000a 1346     		mov	r3, r2
 1215 000c FB80     		strh	r3, [r7, #6]	@ movhi
 493:./uart/uart.c **** 	// define the data direction of tx,rx pins
 494:./uart/uart.c ****   	 gpio_pin_mode(uart_tx,GPIO_MODE_AF_PP_50MHZ);
 1216              		.loc 1 494 5
 1217 000e 144B     		ldr	r3, .L62
 1218 0010 0B22     		movs	r2, #11
 1219 0012 93E80300 		ldm	r3, {r0, r1}
 1220 0016 FFF7FEFF 		bl	gpio_pin_mode
 495:./uart/uart.c **** 	 gpio_pin_mode(uart_rx,GPIO_MODE_IN_FLOATING);
 1221              		.loc 1 495 3
 1222 001a 124B     		ldr	r3, .L62+4
 1223 001c 0422     		movs	r2, #4
 1224 001e 93E80300 		ldm	r3, {r0, r1}
 1225 0022 FFF7FEFF 		bl	gpio_pin_mode
 496:./uart/uart.c **** 
 497:./uart/uart.c ****   	/* disable uart rx receive interrupt*/
 498:./uart/uart.c **** 	 uart_set_rx_Int_mask(usartx,DISABLE);
 1226              		.loc 1 498 3
 1227 0026 0021     		movs	r1, #0
 1228 0028 F868     		ldr	r0, [r7, #12]
 1229 002a FFF7FEFF 		bl	uart_set_rx_Int_mask
 499:./uart/uart.c **** 
 500:./uart/uart.c ****   	/* clear all flag errors*/
 501:./uart/uart.c ****   	usartx->SR=0;
 1230              		.loc 1 501 14
 1231 002e FB68     		ldr	r3, [r7, #12]
 1232 0030 0022     		movs	r2, #0
 1233 0032 1A80     		strh	r2, [r3]	@ movhi
 502:./uart/uart.c **** 	SET_BIT(usartx->CR1,USART_CR1_TE);
 1234              		.loc 1 502 2
 1235 0034 FB68     		ldr	r3, [r7, #12]
 1236 0036 9B89     		ldrh	r3, [r3, #12]	@ movhi
 1237 0038 9BB2     		uxth	r3, r3
 1238 003a 43F00803 		orr	r3, r3, #8
 1239 003e 9AB2     		uxth	r2, r3
 1240 0040 FB68     		ldr	r3, [r7, #12]
 1241 0042 9A81     		strh	r2, [r3, #12]	@ movhi
 503:./uart/uart.c **** 
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccM72RGg.s 			page 31


 504:./uart/uart.c **** 	// send payload
 505:./uart/uart.c **** 	uart_write_buffer(usartx,buf,buf_size);
 1242              		.loc 1 505 2
 1243 0044 FB88     		ldrh	r3, [r7, #6]
 1244 0046 1A46     		mov	r2, r3
 1245 0048 B968     		ldr	r1, [r7, #8]
 1246 004a F868     		ldr	r0, [r7, #12]
 1247 004c FFF7FEFF 		bl	uart_write_buffer
 506:./uart/uart.c **** 
 507:./uart/uart.c ****   	/* disable uart rx receive interrupt*/
 508:./uart/uart.c **** 	 uart_set_rx_Int_mask(usartx,ENABLE);
 1248              		.loc 1 508 3
 1249 0050 0121     		movs	r1, #1
 1250 0052 F868     		ldr	r0, [r7, #12]
 1251 0054 FFF7FEFF 		bl	uart_set_rx_Int_mask
 509:./uart/uart.c **** 
 510:./uart/uart.c **** }
 1252              		.loc 1 510 1
 1253 0058 00BF     		nop
 1254 005a 1037     		adds	r7, r7, #16
 1255              	.LCFI86:
 1256              		.cfi_def_cfa_offset 8
 1257 005c BD46     		mov	sp, r7
 1258              	.LCFI87:
 1259              		.cfi_def_cfa_register 13
 1260              		@ sp needed
 1261 005e 80BD     		pop	{r7, pc}
 1262              	.L63:
 1263              		.align	2
 1264              	.L62:
 1265 0060 00000000 		.word	uart_tx
 1266 0064 00000000 		.word	uart_rx
 1267              		.cfi_endproc
 1268              	.LFE48:
 1270              		.section	.text.uart_send_message,"ax",%progbits
 1271              		.align	1
 1272              		.global	uart_send_message
 1273              		.syntax unified
 1274              		.thumb
 1275              		.thumb_func
 1277              	uart_send_message:
 1278              	.LFB49:
 511:./uart/uart.c **** //-------------------------------------------------------------------------------------------------
 512:./uart/uart.c **** /**
 513:./uart/uart.c ****  * @brief sends a message on the uart
 514:./uart/uart.c ****  * 
 515:./uart/uart.c ****  * @details it is an extension to uart_send_buffer, 
 516:./uart/uart.c ****  * 			hence, it may builds a header or a delimiter to the information data portion  
 517:./uart/uart.c ****  * 			on the uart
 518:./uart/uart.c ****  * 
 519:./uart/uart.c ****  * @param buf 			a pointer to data array of bytes 
 520:./uart/uart.c ****  * @param buf_size 		the length of data array/buffer
 521:./uart/uart.c ****  */
 522:./uart/uart.c **** void uart_send_message(USART_TypeDef * usartx ,uint8_t * buff,uint16_t length)
 523:./uart/uart.c **** {
 1279              		.loc 1 523 1
 1280              		.cfi_startproc
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccM72RGg.s 			page 32


 1281              		@ args = 0, pretend = 0, frame = 16
 1282              		@ frame_needed = 1, uses_anonymous_args = 0
 1283 0000 80B5     		push	{r7, lr}
 1284              	.LCFI88:
 1285              		.cfi_def_cfa_offset 8
 1286              		.cfi_offset 7, -8
 1287              		.cfi_offset 14, -4
 1288 0002 84B0     		sub	sp, sp, #16
 1289              	.LCFI89:
 1290              		.cfi_def_cfa_offset 24
 1291 0004 00AF     		add	r7, sp, #0
 1292              	.LCFI90:
 1293              		.cfi_def_cfa_register 7
 1294 0006 F860     		str	r0, [r7, #12]
 1295 0008 B960     		str	r1, [r7, #8]
 1296 000a 1346     		mov	r3, r2
 1297 000c FB80     		strh	r3, [r7, #6]	@ movhi
 524:./uart/uart.c **** // Send header - a start of the message : 
 525:./uart/uart.c ****  
 526:./uart/uart.c ****  // send payload
 527:./uart/uart.c ****  	uart_send_buffer(usartx,buff,length);
 1298              		.loc 1 527 3
 1299 000e FB88     		ldrh	r3, [r7, #6]
 1300 0010 1A46     		mov	r2, r3
 1301 0012 B968     		ldr	r1, [r7, #8]
 1302 0014 F868     		ldr	r0, [r7, #12]
 1303 0016 FFF7FEFF 		bl	uart_send_buffer
 528:./uart/uart.c ****  
 529:./uart/uart.c ****  // Send delimiter- a end of the message :
 530:./uart/uart.c ****    
 531:./uart/uart.c **** }
 1304              		.loc 1 531 1
 1305 001a 00BF     		nop
 1306 001c 1037     		adds	r7, r7, #16
 1307              	.LCFI91:
 1308              		.cfi_def_cfa_offset 8
 1309 001e BD46     		mov	sp, r7
 1310              	.LCFI92:
 1311              		.cfi_def_cfa_register 13
 1312              		@ sp needed
 1313 0020 80BD     		pop	{r7, pc}
 1314              		.cfi_endproc
 1315              	.LFE49:
 1317              		.section	.text.uart_print,"ax",%progbits
 1318              		.align	1
 1319              		.global	uart_print
 1320              		.syntax unified
 1321              		.thumb
 1322              		.thumb_func
 1324              	uart_print:
 1325              	.LFB50:
 532:./uart/uart.c **** //-------------------------------------------------------------------------------------------------
 533:./uart/uart.c **** 
 534:./uart/uart.c **** //********************************************************************************************
 535:./uart/uart.c **** //
 536:./uart/uart.c **** //  uart print Prototype function
 537:./uart/uart.c **** //
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccM72RGg.s 			page 33


 538:./uart/uart.c **** //********************************************************************************************
 539:./uart/uart.c **** /**
 540:./uart/uart.c ****  * @brief a generic print  message on the uart
 541:./uart/uart.c ****  * 
 542:./uart/uart.c ****  * @details similar to uart_send_buffer, except it handles characters as an ASCII data
 543:./uart/uart.c ****  * 
 544:./uart/uart.c ****  * @param str 	a pointer to character string 
 545:./uart/uart.c ****  */
 546:./uart/uart.c **** void uart_print(USART_TypeDef * usartx ,char * str)
 547:./uart/uart.c **** {
 1326              		.loc 1 547 1
 1327              		.cfi_startproc
 1328              		@ args = 0, pretend = 0, frame = 8
 1329              		@ frame_needed = 1, uses_anonymous_args = 0
 1330 0000 80B5     		push	{r7, lr}
 1331              	.LCFI93:
 1332              		.cfi_def_cfa_offset 8
 1333              		.cfi_offset 7, -8
 1334              		.cfi_offset 14, -4
 1335 0002 82B0     		sub	sp, sp, #8
 1336              	.LCFI94:
 1337              		.cfi_def_cfa_offset 16
 1338 0004 00AF     		add	r7, sp, #0
 1339              	.LCFI95:
 1340              		.cfi_def_cfa_register 7
 1341 0006 7860     		str	r0, [r7, #4]
 1342 0008 3960     		str	r1, [r7]
 548:./uart/uart.c ****  	uart_send_buffer(usartx ,(uint8_t*)str,strlen(str));
 1343              		.loc 1 548 42
 1344 000a 3868     		ldr	r0, [r7]
 1345 000c FFF7FEFF 		bl	strlen
 1346 0010 0346     		mov	r3, r0
 1347              		.loc 1 548 3
 1348 0012 9BB2     		uxth	r3, r3
 1349 0014 1A46     		mov	r2, r3
 1350 0016 3968     		ldr	r1, [r7]
 1351 0018 7868     		ldr	r0, [r7, #4]
 1352 001a FFF7FEFF 		bl	uart_send_buffer
 549:./uart/uart.c **** }
 1353              		.loc 1 549 1
 1354 001e 00BF     		nop
 1355 0020 0837     		adds	r7, r7, #8
 1356              	.LCFI96:
 1357              		.cfi_def_cfa_offset 8
 1358 0022 BD46     		mov	sp, r7
 1359              	.LCFI97:
 1360              		.cfi_def_cfa_register 13
 1361              		@ sp needed
 1362 0024 80BD     		pop	{r7, pc}
 1363              		.cfi_endproc
 1364              	.LFE50:
 1366              		.section	.text.uart_println,"ax",%progbits
 1367              		.align	1
 1368              		.global	uart_println
 1369              		.syntax unified
 1370              		.thumb
 1371              		.thumb_func
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccM72RGg.s 			page 34


 1373              	uart_println:
 1374              	.LFB51:
 550:./uart/uart.c **** //-------------------------------------------------------------------------------------------------
 551:./uart/uart.c **** /**
 552:./uart/uart.c ****  * @brief a generic println  message on the uart
 553:./uart/uart.c ****  * 
 554:./uart/uart.c ****  * @details similar to uart_send_buffer, except it handles characters as an ASCII
 555:./uart/uart.c ****  * 			data with \newline \r
 556:./uart/uart.c ****  * 
 557:./uart/uart.c ****  * @param str 	a pointer to character string 
 558:./uart/uart.c ****  */
 559:./uart/uart.c **** void uart_println(USART_TypeDef * usartx ,char * str)
 560:./uart/uart.c **** {
 1375              		.loc 1 560 1
 1376              		.cfi_startproc
 1377              		@ args = 0, pretend = 0, frame = 8
 1378              		@ frame_needed = 1, uses_anonymous_args = 0
 1379 0000 80B5     		push	{r7, lr}
 1380              	.LCFI98:
 1381              		.cfi_def_cfa_offset 8
 1382              		.cfi_offset 7, -8
 1383              		.cfi_offset 14, -4
 1384 0002 82B0     		sub	sp, sp, #8
 1385              	.LCFI99:
 1386              		.cfi_def_cfa_offset 16
 1387 0004 00AF     		add	r7, sp, #0
 1388              	.LCFI100:
 1389              		.cfi_def_cfa_register 7
 1390 0006 7860     		str	r0, [r7, #4]
 1391 0008 3960     		str	r1, [r7]
 561:./uart/uart.c ****  	uart_send_buffer(usartx ,(uint8_t*)str,strlen(str));
 1392              		.loc 1 561 42
 1393 000a 3868     		ldr	r0, [r7]
 1394 000c FFF7FEFF 		bl	strlen
 1395 0010 0346     		mov	r3, r0
 1396              		.loc 1 561 3
 1397 0012 9BB2     		uxth	r3, r3
 1398 0014 1A46     		mov	r2, r3
 1399 0016 3968     		ldr	r1, [r7]
 1400 0018 7868     		ldr	r0, [r7, #4]
 1401 001a FFF7FEFF 		bl	uart_send_buffer
 562:./uart/uart.c **** 	uart_send_byte(usartx,'\r');
 1402              		.loc 1 562 2
 1403 001e 0D21     		movs	r1, #13
 1404 0020 7868     		ldr	r0, [r7, #4]
 1405 0022 FFF7FEFF 		bl	uart_send_byte
 563:./uart/uart.c **** 	uart_send_byte(usartx,'\n');
 1406              		.loc 1 563 2
 1407 0026 0A21     		movs	r1, #10
 1408 0028 7868     		ldr	r0, [r7, #4]
 1409 002a FFF7FEFF 		bl	uart_send_byte
 564:./uart/uart.c **** }
 1410              		.loc 1 564 1
 1411 002e 00BF     		nop
 1412 0030 0837     		adds	r7, r7, #8
 1413              	.LCFI101:
 1414              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccM72RGg.s 			page 35


 1415 0032 BD46     		mov	sp, r7
 1416              	.LCFI102:
 1417              		.cfi_def_cfa_register 13
 1418              		@ sp needed
 1419 0034 80BD     		pop	{r7, pc}
 1420              		.cfi_endproc
 1421              	.LFE51:
 1423              		.section	.text.uart_print_integer,"ax",%progbits
 1424              		.align	1
 1425              		.global	uart_print_integer
 1426              		.syntax unified
 1427              		.thumb
 1428              		.thumb_func
 1430              	uart_print_integer:
 1431              	.LFB52:
 565:./uart/uart.c **** //-------------------------------------------------------------------------------------------------
 566:./uart/uart.c **** /**
 567:./uart/uart.c ****  * @brief 
 568:./uart/uart.c ****  * 
 569:./uart/uart.c ****  * @param usartx 
 570:./uart/uart.c ****  * @param dword 
 571:./uart/uart.c ****  */
 572:./uart/uart.c **** void uart_print_integer(USART_TypeDef * usartx ,uint32_t dword,uint8_t base)
 573:./uart/uart.c **** {
 1432              		.loc 1 573 1
 1433              		.cfi_startproc
 1434              		@ args = 0, pretend = 0, frame = 32
 1435              		@ frame_needed = 1, uses_anonymous_args = 0
 1436 0000 80B5     		push	{r7, lr}
 1437              	.LCFI103:
 1438              		.cfi_def_cfa_offset 8
 1439              		.cfi_offset 7, -8
 1440              		.cfi_offset 14, -4
 1441 0002 88B0     		sub	sp, sp, #32
 1442              	.LCFI104:
 1443              		.cfi_def_cfa_offset 40
 1444 0004 00AF     		add	r7, sp, #0
 1445              	.LCFI105:
 1446              		.cfi_def_cfa_register 7
 1447 0006 F860     		str	r0, [r7, #12]
 1448 0008 B960     		str	r1, [r7, #8]
 1449 000a 1346     		mov	r3, r2
 1450 000c FB71     		strb	r3, [r7, #7]
 574:./uart/uart.c ****   	char buf[16]="";
 1451              		.loc 1 574 9
 1452 000e 0023     		movs	r3, #0
 1453 0010 3B61     		str	r3, [r7, #16]
 1454 0012 07F11403 		add	r3, r7, #20
 1455 0016 0022     		movs	r2, #0
 1456 0018 1A60     		str	r2, [r3]
 1457 001a 5A60     		str	r2, [r3, #4]
 1458 001c 9A60     		str	r2, [r3, #8]
 575:./uart/uart.c **** 	/*switch(base)
 576:./uart/uart.c **** 	{
 577:./uart/uart.c **** 	  case 16:	uart_print(usartx,"0x"); break;
 578:./uart/uart.c **** 	  case 2:   uart_print(usartx,"0b"); break;
 579:./uart/uart.c **** 	  default:  uart_print(usartx," ");  break;
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccM72RGg.s 			page 36


 580:./uart/uart.c **** 	}
 581:./uart/uart.c **** 	*/
 582:./uart/uart.c ****     itoa(dword,buf,base);
 1459              		.loc 1 582 5
 1460 001e BB68     		ldr	r3, [r7, #8]
 1461 0020 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1462 0022 07F11001 		add	r1, r7, #16
 1463 0026 1846     		mov	r0, r3
 1464 0028 FFF7FEFF 		bl	itoa
 583:./uart/uart.c ****     uart_print(usartx,buf);	   
 1465              		.loc 1 583 5
 1466 002c 07F11003 		add	r3, r7, #16
 1467 0030 1946     		mov	r1, r3
 1468 0032 F868     		ldr	r0, [r7, #12]
 1469 0034 FFF7FEFF 		bl	uart_print
 584:./uart/uart.c **** }
 1470              		.loc 1 584 1
 1471 0038 00BF     		nop
 1472 003a 2037     		adds	r7, r7, #32
 1473              	.LCFI106:
 1474              		.cfi_def_cfa_offset 8
 1475 003c BD46     		mov	sp, r7
 1476              	.LCFI107:
 1477              		.cfi_def_cfa_register 13
 1478              		@ sp needed
 1479 003e 80BD     		pop	{r7, pc}
 1480              		.cfi_endproc
 1481              	.LFE52:
 1483              		.section	.rodata
 1484 0005 000000   		.align	2
 1485              	.LC1:
 1486 0008 2D00     		.ascii	"-\000"
 1487 000a 0000     		.align	2
 1488              	.LC2:
 1489 000c 2E00     		.ascii	".\000"
 1490              		.section	.text.uart_print_float,"ax",%progbits
 1491              		.align	1
 1492              		.global	uart_print_float
 1493              		.syntax unified
 1494              		.thumb
 1495              		.thumb_func
 1497              	uart_print_float:
 1498              	.LFB53:
 585:./uart/uart.c **** //-------------------------------------------------------------------------------------------------
 586:./uart/uart.c **** void uart_print_float(USART_TypeDef * usartx ,float val,uint8_t digits)
 587:./uart/uart.c **** {
 1499              		.loc 1 587 1
 1500              		.cfi_startproc
 1501              		@ args = 0, pretend = 0, frame = 40
 1502              		@ frame_needed = 1, uses_anonymous_args = 0
 1503 0000 80B5     		push	{r7, lr}
 1504              	.LCFI108:
 1505              		.cfi_def_cfa_offset 8
 1506              		.cfi_offset 7, -8
 1507              		.cfi_offset 14, -4
 1508 0002 8AB0     		sub	sp, sp, #40
 1509              	.LCFI109:
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccM72RGg.s 			page 37


 1510              		.cfi_def_cfa_offset 48
 1511 0004 00AF     		add	r7, sp, #0
 1512              	.LCFI110:
 1513              		.cfi_def_cfa_register 7
 1514 0006 F860     		str	r0, [r7, #12]
 1515 0008 B960     		str	r1, [r7, #8]	@ float
 1516 000a 1346     		mov	r3, r2
 1517 000c FB71     		strb	r3, [r7, #7]
 588:./uart/uart.c **** char buf[16]="";
 1518              		.loc 1 588 6
 1519 000e 0023     		movs	r3, #0
 1520 0010 BB61     		str	r3, [r7, #24]
 1521 0012 07F11C03 		add	r3, r7, #28
 1522 0016 0022     		movs	r2, #0
 1523 0018 1A60     		str	r2, [r3]
 1524 001a 5A60     		str	r2, [r3, #4]
 1525 001c 9A60     		str	r2, [r3, #8]
 589:./uart/uart.c **** 	real_t r;
 590:./uart/uart.c **** 	r=float_to_real(val,digits);
 1526              		.loc 1 590 4
 1527 001e 07F11003 		add	r3, r7, #16
 1528 0022 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1529 0024 B968     		ldr	r1, [r7, #8]	@ float
 1530 0026 1846     		mov	r0, r3
 1531 0028 FFF7FEFF 		bl	float_to_real
 591:./uart/uart.c **** 	if(r.sig==1)
 1532              		.loc 1 591 6
 1533 002c 3B7D     		ldrb	r3, [r7, #20]	@ zero_extendqisi2
 1534              		.loc 1 591 4
 1535 002e 012B     		cmp	r3, #1
 1536 0030 03D1     		bne	.L69
 592:./uart/uart.c **** 	uart_print(usartx,"-");
 1537              		.loc 1 592 2
 1538 0032 1449     		ldr	r1, .L70
 1539 0034 F868     		ldr	r0, [r7, #12]
 1540 0036 FFF7FEFF 		bl	uart_print
 1541              	.L69:
 593:./uart/uart.c ****     itoa(r.integer,buf,10);
 1542              		.loc 1 593 11
 1543 003a 7B8A     		ldrh	r3, [r7, #18]
 1544              		.loc 1 593 5
 1545 003c 1846     		mov	r0, r3
 1546 003e 07F11803 		add	r3, r7, #24
 1547 0042 0A22     		movs	r2, #10
 1548 0044 1946     		mov	r1, r3
 1549 0046 FFF7FEFF 		bl	itoa
 594:./uart/uart.c ****     uart_print(usartx,buf);
 1550              		.loc 1 594 5
 1551 004a 07F11803 		add	r3, r7, #24
 1552 004e 1946     		mov	r1, r3
 1553 0050 F868     		ldr	r0, [r7, #12]
 1554 0052 FFF7FEFF 		bl	uart_print
 595:./uart/uart.c **** 	uart_print(usartx,".");	  
 1555              		.loc 1 595 2
 1556 0056 0C49     		ldr	r1, .L70+4
 1557 0058 F868     		ldr	r0, [r7, #12]
 1558 005a FFF7FEFF 		bl	uart_print
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccM72RGg.s 			page 38


 596:./uart/uart.c ****     itoa(r.decimal,buf,10);
 1559              		.loc 1 596 11
 1560 005e 3B7C     		ldrb	r3, [r7, #16]	@ zero_extendqisi2
 1561              		.loc 1 596 5
 1562 0060 1846     		mov	r0, r3
 1563 0062 07F11803 		add	r3, r7, #24
 1564 0066 0A22     		movs	r2, #10
 1565 0068 1946     		mov	r1, r3
 1566 006a FFF7FEFF 		bl	itoa
 597:./uart/uart.c ****     uart_print(usartx,buf);
 1567              		.loc 1 597 5
 1568 006e 07F11803 		add	r3, r7, #24
 1569 0072 1946     		mov	r1, r3
 1570 0074 F868     		ldr	r0, [r7, #12]
 1571 0076 FFF7FEFF 		bl	uart_print
 598:./uart/uart.c **** }
 1572              		.loc 1 598 1
 1573 007a 00BF     		nop
 1574 007c 2837     		adds	r7, r7, #40
 1575              	.LCFI111:
 1576              		.cfi_def_cfa_offset 8
 1577 007e BD46     		mov	sp, r7
 1578              	.LCFI112:
 1579              		.cfi_def_cfa_register 13
 1580              		@ sp needed
 1581 0080 80BD     		pop	{r7, pc}
 1582              	.L71:
 1583 0082 00BF     		.align	2
 1584              	.L70:
 1585 0084 08000000 		.word	.LC1
 1586 0088 0C000000 		.word	.LC2
 1587              		.cfi_endproc
 1588              	.LFE53:
 1590              		.section	.rodata
 1591 000e 0000     		.align	2
 1592              	.LC3:
 1593 0010 20307800 		.ascii	" 0x\000"
 1594              		.align	2
 1595              	.LC4:
 1596 0014 2000     		.ascii	" \000"
 1597              		.section	.text.uart_print_Array,"ax",%progbits
 1598              		.align	1
 1599              		.global	uart_print_Array
 1600              		.syntax unified
 1601              		.thumb
 1602              		.thumb_func
 1604              	uart_print_Array:
 1605              	.LFB54:
 599:./uart/uart.c **** //-------------------------------------------------------------------------------------------------
 600:./uart/uart.c **** /**
 601:./uart/uart.c ****  * @brief a generic print message on the uart in hexadecimal format
 602:./uart/uart.c ****  
 603:./uart/uart.c ****  * @details similar to uart_send_buffer, except it converrs ASCII data to hexadecimal format
 604:./uart/uart.c ****  * 
 605:./uart/uart.c ****  * @param data 	a pointer to start of message buffer
 606:./uart/uart.c ****  * @param len 	the length of the buffer message
 607:./uart/uart.c ****  */
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccM72RGg.s 			page 39


 608:./uart/uart.c **** void uart_print_Array(USART_TypeDef * usartx ,uint8_t * data,uint8_t len)
 609:./uart/uart.c **** {
 1606              		.loc 1 609 1
 1607              		.cfi_startproc
 1608              		@ args = 0, pretend = 0, frame = 40
 1609              		@ frame_needed = 1, uses_anonymous_args = 0
 1610 0000 80B5     		push	{r7, lr}
 1611              	.LCFI113:
 1612              		.cfi_def_cfa_offset 8
 1613              		.cfi_offset 7, -8
 1614              		.cfi_offset 14, -4
 1615 0002 8AB0     		sub	sp, sp, #40
 1616              	.LCFI114:
 1617              		.cfi_def_cfa_offset 48
 1618 0004 00AF     		add	r7, sp, #0
 1619              	.LCFI115:
 1620              		.cfi_def_cfa_register 7
 1621 0006 F860     		str	r0, [r7, #12]
 1622 0008 B960     		str	r1, [r7, #8]
 1623 000a 1346     		mov	r3, r2
 1624 000c FB71     		strb	r3, [r7, #7]
 610:./uart/uart.c ****  	char buf[16]="";
 1625              		.loc 1 610 8
 1626 000e 0023     		movs	r3, #0
 1627 0010 7B61     		str	r3, [r7, #20]
 1628 0012 07F11803 		add	r3, r7, #24
 1629 0016 0022     		movs	r2, #0
 1630 0018 1A60     		str	r2, [r3]
 1631 001a 5A60     		str	r2, [r3, #4]
 1632 001c 9A60     		str	r2, [r3, #8]
 611:./uart/uart.c **** 	uint8_t val=0;
 1633              		.loc 1 611 10
 1634 001e 0023     		movs	r3, #0
 1635 0020 87F82630 		strb	r3, [r7, #38]
 1636              	.LBB6:
 612:./uart/uart.c ****    for(uint8_t i=0;i<len;i++)
 1637              		.loc 1 612 16
 1638 0024 0023     		movs	r3, #0
 1639 0026 87F82730 		strb	r3, [r7, #39]
 1640              		.loc 1 612 4
 1641 002a 2EE0     		b	.L73
 1642              	.L75:
 613:./uart/uart.c ****    {
 614:./uart/uart.c ****       val=data[i];
 1643              		.loc 1 614 15
 1644 002c 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 1645 0030 BA68     		ldr	r2, [r7, #8]
 1646 0032 1344     		add	r3, r3, r2
 1647              		.loc 1 614 10
 1648 0034 1B78     		ldrb	r3, [r3]
 1649 0036 87F82630 		strb	r3, [r7, #38]
 615:./uart/uart.c ****        uart_print(usartx ," 0x");
 1650              		.loc 1 615 8
 1651 003a 1949     		ldr	r1, .L76
 1652 003c F868     		ldr	r0, [r7, #12]
 1653 003e FFF7FEFF 		bl	uart_print
 616:./uart/uart.c ****        itoa(val,buf,16);
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccM72RGg.s 			page 40


 1654              		.loc 1 616 8
 1655 0042 97F82630 		ldrb	r3, [r7, #38]	@ zero_extendqisi2
 1656 0046 07F11401 		add	r1, r7, #20
 1657 004a 1022     		movs	r2, #16
 1658 004c 1846     		mov	r0, r3
 1659 004e FFF7FEFF 		bl	itoa
 617:./uart/uart.c ****        uart_print(usartx ,buf);	   
 1660              		.loc 1 617 8
 1661 0052 07F11403 		add	r3, r7, #20
 1662 0056 1946     		mov	r1, r3
 1663 0058 F868     		ldr	r0, [r7, #12]
 1664 005a FFF7FEFF 		bl	uart_print
 618:./uart/uart.c **** 	   if (i%5==0)
 1665              		.loc 1 618 12
 1666 005e 97F82720 		ldrb	r2, [r7, #39]	@ zero_extendqisi2
 1667 0062 104B     		ldr	r3, .L76+4
 1668 0064 A3FB0213 		umull	r1, r3, r3, r2
 1669 0068 9908     		lsrs	r1, r3, #2
 1670 006a 0B46     		mov	r3, r1
 1671 006c 9B00     		lsls	r3, r3, #2
 1672 006e 0B44     		add	r3, r3, r1
 1673 0070 D31A     		subs	r3, r2, r3
 1674 0072 DBB2     		uxtb	r3, r3
 1675              		.loc 1 618 8
 1676 0074 002B     		cmp	r3, #0
 1677 0076 03D1     		bne	.L74
 619:./uart/uart.c **** 	    uart_println(usartx," ");
 1678              		.loc 1 619 6
 1679 0078 0B49     		ldr	r1, .L76+8
 1680 007a F868     		ldr	r0, [r7, #12]
 1681 007c FFF7FEFF 		bl	uart_println
 1682              	.L74:
 612:./uart/uart.c ****    {
 1683              		.loc 1 612 27 discriminator 2
 1684 0080 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 1685 0084 0133     		adds	r3, r3, #1
 1686 0086 87F82730 		strb	r3, [r7, #39]
 1687              	.L73:
 612:./uart/uart.c ****    {
 1688              		.loc 1 612 4 discriminator 1
 1689 008a 97F82720 		ldrb	r2, [r7, #39]	@ zero_extendqisi2
 1690 008e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1691 0090 9A42     		cmp	r2, r3
 1692 0092 CBD3     		bcc	.L75
 1693              	.LBE6:
 620:./uart/uart.c ****   }
 621:./uart/uart.c **** }
 1694              		.loc 1 621 1
 1695 0094 00BF     		nop
 1696 0096 00BF     		nop
 1697 0098 2837     		adds	r7, r7, #40
 1698              	.LCFI116:
 1699              		.cfi_def_cfa_offset 8
 1700 009a BD46     		mov	sp, r7
 1701              	.LCFI117:
 1702              		.cfi_def_cfa_register 13
 1703              		@ sp needed
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccM72RGg.s 			page 41


 1704 009c 80BD     		pop	{r7, pc}
 1705              	.L77:
 1706 009e 00BF     		.align	2
 1707              	.L76:
 1708 00a0 10000000 		.word	.LC3
 1709 00a4 CDCCCCCC 		.word	-858993459
 1710 00a8 14000000 		.word	.LC4
 1711              		.cfi_endproc
 1712              	.LFE54:
 1714              		.section	.rodata
 1715 0016 0000     		.align	2
 1716              	.LC5:
 1717 0018 307800   		.ascii	"0x\000"
 1718              		.section	.text.uart_println_Array,"ax",%progbits
 1719              		.align	1
 1720              		.global	uart_println_Array
 1721              		.syntax unified
 1722              		.thumb
 1723              		.thumb_func
 1725              	uart_println_Array:
 1726              	.LFB55:
 622:./uart/uart.c **** //-------------------------------------------------------------------------------------------------
 623:./uart/uart.c **** /**
 624:./uart/uart.c ****  * @brief a generic println message on the uart in hexadecimal format
 625:./uart/uart.c ****  
 626:./uart/uart.c ****  * @details similar to uart_send_buffer, except it converrs ASCII data to hexadecimal format
 627:./uart/uart.c ****  * 
 628:./uart/uart.c ****  * @param data 	a pointer to start of message buffer
 629:./uart/uart.c ****  * @param len 	the length of the buffer message
 630:./uart/uart.c ****  */
 631:./uart/uart.c **** void uart_println_Array(USART_TypeDef * usartx ,uint8_t * data,uint8_t len)
 632:./uart/uart.c **** {
 1727              		.loc 1 632 1
 1728              		.cfi_startproc
 1729              		@ args = 0, pretend = 0, frame = 40
 1730              		@ frame_needed = 1, uses_anonymous_args = 0
 1731 0000 80B5     		push	{r7, lr}
 1732              	.LCFI118:
 1733              		.cfi_def_cfa_offset 8
 1734              		.cfi_offset 7, -8
 1735              		.cfi_offset 14, -4
 1736 0002 8AB0     		sub	sp, sp, #40
 1737              	.LCFI119:
 1738              		.cfi_def_cfa_offset 48
 1739 0004 00AF     		add	r7, sp, #0
 1740              	.LCFI120:
 1741              		.cfi_def_cfa_register 7
 1742 0006 F860     		str	r0, [r7, #12]
 1743 0008 B960     		str	r1, [r7, #8]
 1744 000a 1346     		mov	r3, r2
 1745 000c FB71     		strb	r3, [r7, #7]
 633:./uart/uart.c ****  	char buf[16]="";
 1746              		.loc 1 633 8
 1747 000e 0023     		movs	r3, #0
 1748 0010 7B61     		str	r3, [r7, #20]
 1749 0012 07F11803 		add	r3, r7, #24
 1750 0016 0022     		movs	r2, #0
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccM72RGg.s 			page 42


 1751 0018 1A60     		str	r2, [r3]
 1752 001a 5A60     		str	r2, [r3, #4]
 1753 001c 9A60     		str	r2, [r3, #8]
 634:./uart/uart.c **** 	uint8_t val=0;
 1754              		.loc 1 634 10
 1755 001e 0023     		movs	r3, #0
 1756 0020 87F82630 		strb	r3, [r7, #38]
 1757              	.LBB7:
 635:./uart/uart.c ****    for(uint8_t i=0;i<len;i++)
 1758              		.loc 1 635 16
 1759 0024 0023     		movs	r3, #0
 1760 0026 87F82730 		strb	r3, [r7, #39]
 1761              		.loc 1 635 4
 1762 002a 1DE0     		b	.L79
 1763              	.L80:
 636:./uart/uart.c ****    {
 637:./uart/uart.c ****       val=data[i];
 1764              		.loc 1 637 15 discriminator 3
 1765 002c 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 1766 0030 BA68     		ldr	r2, [r7, #8]
 1767 0032 1344     		add	r3, r3, r2
 1768              		.loc 1 637 10 discriminator 3
 1769 0034 1B78     		ldrb	r3, [r3]
 1770 0036 87F82630 		strb	r3, [r7, #38]
 638:./uart/uart.c ****        uart_print(usartx,"0x");
 1771              		.loc 1 638 8 discriminator 3
 1772 003a 1049     		ldr	r1, .L81
 1773 003c F868     		ldr	r0, [r7, #12]
 1774 003e FFF7FEFF 		bl	uart_print
 639:./uart/uart.c ****        itoa(val,buf,16);
 1775              		.loc 1 639 8 discriminator 3
 1776 0042 97F82630 		ldrb	r3, [r7, #38]	@ zero_extendqisi2
 1777 0046 07F11401 		add	r1, r7, #20
 1778 004a 1022     		movs	r2, #16
 1779 004c 1846     		mov	r0, r3
 1780 004e FFF7FEFF 		bl	itoa
 640:./uart/uart.c ****        uart_println(usartx,buf);	   
 1781              		.loc 1 640 8 discriminator 3
 1782 0052 07F11403 		add	r3, r7, #20
 1783 0056 1946     		mov	r1, r3
 1784 0058 F868     		ldr	r0, [r7, #12]
 1785 005a FFF7FEFF 		bl	uart_println
 635:./uart/uart.c ****    {
 1786              		.loc 1 635 27 discriminator 3
 1787 005e 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 1788 0062 0133     		adds	r3, r3, #1
 1789 0064 87F82730 		strb	r3, [r7, #39]
 1790              	.L79:
 635:./uart/uart.c ****    {
 1791              		.loc 1 635 4 discriminator 1
 1792 0068 97F82720 		ldrb	r2, [r7, #39]	@ zero_extendqisi2
 1793 006c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1794 006e 9A42     		cmp	r2, r3
 1795 0070 DCD3     		bcc	.L80
 1796              	.LBE7:
 641:./uart/uart.c ****   }
 642:./uart/uart.c **** }
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccM72RGg.s 			page 43


 1797              		.loc 1 642 1
 1798 0072 00BF     		nop
 1799 0074 00BF     		nop
 1800 0076 2837     		adds	r7, r7, #40
 1801              	.LCFI121:
 1802              		.cfi_def_cfa_offset 8
 1803 0078 BD46     		mov	sp, r7
 1804              	.LCFI122:
 1805              		.cfi_def_cfa_register 13
 1806              		@ sp needed
 1807 007a 80BD     		pop	{r7, pc}
 1808              	.L82:
 1809              		.align	2
 1810              	.L81:
 1811 007c 18000000 		.word	.LC5
 1812              		.cfi_endproc
 1813              	.LFE55:
 1815              		.text
 1816              	.Letext0:
 1817              		.file 2 "c:\\arm-tool\\gcc-arm-none-eabi-10.3-2021.10\\arm-none-eabi\\include\\machine\\_default_t
 1818              		.file 3 "c:\\arm-tool\\gcc-arm-none-eabi-10.3-2021.10\\arm-none-eabi\\include\\sys\\_stdint.h"
 1819              		.file 4 "./.driver/CMSIS/Device/STM32F10x/stm32f10x.h"
 1820              		.file 5 "./basic/structs.h"
 1821              		.file 6 "./basic/gpio.h"
 1822              		.file 7 "./uart/uart.h"
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccM72RGg.s 			page 44


DEFINED SYMBOLS
                            *ABS*:00000000 uart.c
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccM72RGg.s:21     .bss.uart_state:00000000 uart_state
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccM72RGg.s:22     .bss.uart_state:00000000 $d
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccM72RGg.s:28     .bss.uart_ticks:00000000 uart_ticks
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccM72RGg.s:25     .bss.uart_ticks:00000000 $d
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccM72RGg.s:35     .bss.rx_buffer:00000000 rx_buffer
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccM72RGg.s:32     .bss.rx_buffer:00000000 $d
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccM72RGg.s:41     .bss.rx_buffer_length:00000000 rx_buffer_length
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccM72RGg.s:42     .bss.rx_buffer_length:00000000 $d
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccM72RGg.s:48     .bss.rx_index:00000000 rx_index
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccM72RGg.s:45     .bss.rx_index:00000000 $d
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccM72RGg.s:54     .bss.buffer_overflow:00000000 buffer_overflow
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccM72RGg.s:55     .bss.buffer_overflow:00000000 $d
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccM72RGg.s:61     .data.uart_tx:00000000 uart_tx
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccM72RGg.s:58     .data.uart_tx:00000000 $d
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccM72RGg.s:70     .data.uart_rx:00000000 uart_rx
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccM72RGg.s:67     .data.uart_rx:00000000 $d
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccM72RGg.s:75     .data.uart_delimiter:00000000 $d
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccM72RGg.s:78     .data.uart_delimiter:00000000 uart_delimiter
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccM72RGg.s:81     .text.uart_set_rx_Int_mask:00000000 $t
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccM72RGg.s:86     .text.uart_set_rx_Int_mask:00000000 uart_set_rx_Int_mask
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccM72RGg.s:165    .text.uart_reset_buffer:00000000 $t
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccM72RGg.s:171    .text.uart_reset_buffer:00000000 uart_reset_buffer
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccM72RGg.s:233    .text.uart_reset_buffer:00000034 $d
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccM72RGg.s:239    .text.uart_rx_buffer_add:00000000 $t
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccM72RGg.s:245    .text.uart_rx_buffer_add:00000000 uart_rx_buffer_add
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccM72RGg.s:312    .text.uart_rx_buffer_add:00000040 $d
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccM72RGg.s:318    .text.startswith_header:00000000 $t
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccM72RGg.s:323    .text.startswith_header:00000000 startswith_header
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccM72RGg.s:407    .text.endswith_delimiter:00000000 $t
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccM72RGg.s:412    .text.endswith_delimiter:00000000 endswith_delimiter
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccM72RGg.s:505    .text.uart_init:00000000 $t
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccM72RGg.s:511    .text.uart_init:00000000 uart_init
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccM72RGg.s:561    .text.uart_init:00000030 $d
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccM72RGg.s:567    .text.uart_receive:00000000 $t
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccM72RGg.s:573    .text.uart_receive:00000000 uart_receive
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccM72RGg.s:649    .text.uart_receive:00000054 $d
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccM72RGg.s:654    .text.uart_receive_start:00000000 $t
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccM72RGg.s:660    .text.uart_receive_start:00000000 uart_receive_start
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccM72RGg.s:715    .text.uart_receive_start:00000044 $d
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccM72RGg.s:721    .text.uart_receive_stop:00000000 $t
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccM72RGg.s:727    .text.uart_receive_stop:00000000 uart_receive_stop
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccM72RGg.s:773    .text.uart_islistening:00000000 $t
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccM72RGg.s:779    .text.uart_islistening:00000000 uart_islistening
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccM72RGg.s:838    .rodata:00000000 $d
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccM72RGg.s:842    .text.uart_data_is_available:00000000 $t
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccM72RGg.s:848    .text.uart_data_is_available:00000000 uart_data_is_available
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccM72RGg.s:911    .text.uart_data_is_available:0000003c $d
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccM72RGg.s:918    .text.uart_read_byte:00000000 $t
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccM72RGg.s:924    .text.uart_read_byte:00000000 uart_read_byte
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccM72RGg.s:977    .text.uart_write_byte:00000000 $t
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccM72RGg.s:983    .text.uart_write_byte:00000000 uart_write_byte
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccM72RGg.s:1037   .text.uart_write_buffer:00000000 $t
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccM72RGg.s:1043   .text.uart_write_buffer:00000000 uart_write_buffer
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccM72RGg.s:1107   .text.uart_send_byte:00000000 $t
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccM72RGg.s:1113   .text.uart_send_byte:00000000 uart_send_byte
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccM72RGg.s 			page 45


C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccM72RGg.s:1183   .text.uart_send_byte:00000060 $d
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccM72RGg.s:1189   .text.uart_send_buffer:00000000 $t
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccM72RGg.s:1195   .text.uart_send_buffer:00000000 uart_send_buffer
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccM72RGg.s:1265   .text.uart_send_buffer:00000060 $d
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccM72RGg.s:1271   .text.uart_send_message:00000000 $t
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccM72RGg.s:1277   .text.uart_send_message:00000000 uart_send_message
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccM72RGg.s:1318   .text.uart_print:00000000 $t
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccM72RGg.s:1324   .text.uart_print:00000000 uart_print
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccM72RGg.s:1367   .text.uart_println:00000000 $t
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccM72RGg.s:1373   .text.uart_println:00000000 uart_println
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccM72RGg.s:1424   .text.uart_print_integer:00000000 $t
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccM72RGg.s:1430   .text.uart_print_integer:00000000 uart_print_integer
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccM72RGg.s:1491   .text.uart_print_float:00000000 $t
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccM72RGg.s:1497   .text.uart_print_float:00000000 uart_print_float
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccM72RGg.s:1585   .text.uart_print_float:00000084 $d
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccM72RGg.s:1598   .text.uart_print_Array:00000000 $t
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccM72RGg.s:1604   .text.uart_print_Array:00000000 uart_print_Array
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccM72RGg.s:1708   .text.uart_print_Array:000000a0 $d
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccM72RGg.s:1719   .text.uart_println_Array:00000000 $t
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccM72RGg.s:1725   .text.uart_println_Array:00000000 uart_println_Array
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccM72RGg.s:1811   .text.uart_println_Array:0000007c $d
                           .group:00000000 wm4.0.f4779009c199947b70d43074c2c41c8e
                           .group:00000000 wm4.stm32f10x.h.50.d4f13d34ecdc4ac490487d4d35cb5131
                           .group:00000000 wm4.core_cm3.h.25.d35e9a9b04ec4aaebae9bf79fff061f9
                           .group:00000000 wm4._newlib_version.h.4.bfdf54b0af045d4a71376ae00f63a22c
                           .group:00000000 wm4.features.h.33.318b64d71e0957639cfb30f1db1f7ec8
                           .group:00000000 wm4._default_types.h.15.247e5cd201eca3442cbf5404108c4935
                           .group:00000000 wm4._intsup.h.10.48bafbb683905c4daa4565a85aeeb264
                           .group:00000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:00000000 wm4.stdint.h.23.d53047a68f4a85177f80b422d52785ed
                           .group:00000000 wm4.core_cm3.h.113.b286929a54d33b4c8909a7132437b244
                           .group:00000000 wm4.stm32f10x.h.525.b40cb5ee4fd40825ea8ccc10ea6f4722
                           .group:00000000 wm4.stm32f10x_adc.h.82.085dab8bb2bdf6609e97ee2fc7a88347
                           .group:00000000 wm4.stm32f10x_bkp.h.24.9f1bb2b1135ba72667dd3fcde11cf4b7
                           .group:00000000 wm4.stm32f10x_can.h.24.b871c380ea975c71825bf46cccde3c7a
                           .group:00000000 wm4.stm32f10x_cec.h.24.a1ee61cba6b8120b5bab40528e933770
                           .group:00000000 wm4.stm32f10x_dac.h.24.39482d0fe30ddea181f0c79f49fb629e
                           .group:00000000 wm4.stm32f10x_dbgmcu.h.24.f73145056e79bc5a93dd6677b2b33d54
                           .group:00000000 wm4.stm32f10x_dma.h.24.a48d4478db5b2956954d84bc5fd35ae1
                           .group:00000000 wm4.stm32f10x_exti.h.24.377f48157d7e463bb3841cf6c97a1c93
                           .group:00000000 wm4.stm32f10x_flash.h.24.877157533caf7ce4331c44a3d0ea5612
                           .group:00000000 wm4.stm32f10x_fsmc.h.24.0518485f192fab09dd5cfc912ded3186
                           .group:00000000 wm4.stm32f10x_gpio.h.24.b627ee324fedf5e3b8730fa015ea30de
                           .group:00000000 wm4.stm32f10x_i2c.h.24.8bc26b82f9e7563ca7234eabea47534c
                           .group:00000000 wm4.stm32f10x_iwdg.h.24.129c4cff233d2076aefd5fc4fbf5956b
                           .group:00000000 wm4.stm32f10x_pwr.h.24.98a178bf0c8fa18634174f1c1123c7bc
                           .group:00000000 wm4.stm32f10x_rcc.h.24.43948985157a0da383ddce718b66f782
                           .group:00000000 wm4.stm32f10x_rtc.h.24.496e77df0282a7f4dc79c6de18da3ecc
                           .group:00000000 wm4.stm32f10x_sdio.h.24.646055cc54873a75158b5d1015b409e6
                           .group:00000000 wm4.stm32f10x_spi.h.24.e7b2623920274a1745e534a7a7156e76
                           .group:00000000 wm4.stm32f10x_tim.h.24.24ac72f04686046a18ee9117ff7bba1f
                           .group:00000000 wm4.stm32f10x_usart.h.24.cf5f8d8e971fad2927ee799886f23b78
                           .group:00000000 wm4.stm32f10x_wwdg.h.24.7f7037b09db3a78d5a9de97b2cba748a
                           .group:00000000 wm4.misc.h.24.c54738789d48fd25c957e9d7c7349497
                           .group:00000000 wm4.stm32f10x.h.8349.9a0c7ea810a74ad6d06203f1a551aebb
                           .group:00000000 wm4.ieeefp.h.77.25247dc27dbe3b23bfe98c2dc18f6ac5
                           .group:00000000 wm4.newlib.h.8.4679f89e52c9f69cd44f3a27cd28c759
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccM72RGg.s 			page 46


                           .group:00000000 wm4.config.h.224.79362c3cdb280fe0b8d95bd0bc4d5c54
                           .group:00000000 wm4._ansi.h.31.de524f58584151836e90d8620a16f8e8
                           .group:00000000 wm4.stdlib.h.13.4ed386f5c1a80d71e72172885d946ef2
                           .group:00000000 wm4.stddef.h.181.13772e73e5434e8cc4fafaaddad2b5da
                           .group:00000000 wm4.stddef.h.39.cf3ebec0bc8c9e3d2f276a64e0fe5e7a
                           .group:00000000 wm4._types.h.20.dd0d04dca3800a0d2a6129b87f3adbb2
                           .group:00000000 wm4.stddef.h.155.3588ebfdd1e8c7ede80509bb9c3b8009
                           .group:00000000 wm4._types.h.127.34941de1b2539d59d5cac00e0dd27a45
                           .group:00000000 wm4.reent.h.17.e292bf8b0bec6c96e131a54347145a30
                           .group:00000000 wm4.lock.h.2.1461d1fff82dffe8bfddc23307f6484f
                           .group:00000000 wm4.reent.h.77.32fd7d280fc2a40b0797abce5beaf6e3
                           .group:00000000 wm4.assert.h.11.db24e541f16414db224bf986d21017e2
                           .group:00000000 wm4.reent.h.504.40d20ade344680fbcb6a0178bf7ae09e
                           .group:00000000 wm4.cdefs.h.49.39045112216f6a021dbdffe3bf5accce
                           .group:00000000 wm4.alloca.h.8.dfc0c703c47ec3e69746825b17d9e66d
                           .group:00000000 wm4.stdlib.h.56.f4862cfbf4363a1db01842d5bdf72c18
                           .group:00000000 wm4.stdio.h.27.3fc80220048df77954e38daec3bb9670
                           .group:00000000 wm4.stddef.h.155.ba788add86a0e365f264484f110c3c29
                           .group:00000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:00000000 wm4.types.h.40.8b6acba56cefbb11746718204edc8f5e
                           .group:00000000 wm4._endian.h.31.65a10590763c3dde1ac4a7f66d7d4891
                           .group:00000000 wm4.endian.h.9.49f3a4695c1b61e8a0808de3c4a106cb
                           .group:00000000 wm4._timeval.h.32.bec3221fa7a9bb0bdde696c9c57e47d2
                           .group:00000000 wm4.timespec.h.41.d855182eb0e690443ab8651bcedca6e1
                           .group:00000000 wm4.select.h.19.40cd3f2bfc456b193b790c2754690ebf
                           .group:00000000 wm4.types.h.51.5571ec98f267d17d3c670b7a3ba33afa
                           .group:00000000 wm4.sched.h.22.c60982713a5c428609783c78f9c78d95
                           .group:00000000 wm4._pthreadtypes.h.36.fcee9961c35163dde6267ef772ad1972
                           .group:00000000 wm4.stdio.h.2.4aa87247282eca6c8f36f9de33d8df1a
                           .group:00000000 wm4.stdio.h.81.60a2ded7dae310b81f9d6907fe5e3dbf
                           .group:00000000 wm4.stdarg.h.31.3fa7b8f6daaa31edd1696c08c77f2a73
                           .group:00000000 wm4.stdalign.h.27.0aad28df4d66a8553430227d1bac48aa
                           .group:00000000 wm4.ctype.h.34.80f174baaec468e2eb1c07380b0b3287
                           .group:00000000 wm4.inttypes.h.14.b28deb26920e51e0da310220ef0f9003
                           .group:00000000 wm4.inttypes.h.28.c3e61b48c6ae3a7cb62609add2dd53d1
                           .group:00000000 wm4.math.h.13.4f4c30988c5d76b6bf30dd7e2791b7c6
                           .group:00000000 wm4.syslimits.h.34.de5cbd310098bc5895998b6bde577ed2
                           .group:00000000 wm4.limits.h.9.70fb0ada6f71b16202a66baaa6d8ea70
                           .group:00000000 wm4.limits.h.60.56a1ae353e2028a24298ec6463b8b593
                           .group:00000000 wm4.string.h.8.c4b8571ce60dff2817f43fec8b86aecd
                           .group:00000000 wm4.basic.h.43.2d669d0e281f2a7583ad0da99046413d
                           .group:00000000 wm4.phy.h.43.a806668fd6b193a83e00fcf9e3814821
                           .group:00000000 wm4.structs.h.12.142e94c12fffe9b2bba6755d00a8ad91
                           .group:00000000 wm4.time.h.12.ca6eecf26198e1bc6166f71fd8292735
                           .group:00000000 wm4.initmacro.h.4.2927af5a543f65dade9f92f80a04dc35
                           .group:00000000 wm4.i2ccom.h.10.147b279fb90e839345ab35ddb589e0ce
                           .group:00000000 wm4.i2cstd.h.10.d432c3988f9748933a79fb991e070438
                           .group:00000000 wm4.i2c.h.24.666d2983f106290f51d8fe2e4e0034bc
                           .group:00000000 wm4.mpu6050.h.10.38cdb8b04d26be567bd69a6269d225c3
                           .group:00000000 wm4.uart.h.10.038a6d9ab9b8d6aefd66f3a92e73c3f1
                           .group:00000000 wm4.lcd.h.11.3a2e2f95e46d234fe99d1d3e8f20de18
                           .group:00000000 wm4.systemtask.h.12.296b6a27be8b79a110bf5281d2fc993a

UNDEFINED SYMBOLS
USART1_init
USART2_init
gpio_pin_mode
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\ccM72RGg.s 			page 47


memmem
strlen
itoa
float_to_real
