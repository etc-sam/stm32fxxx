ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\cc7HEfWI.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"uart.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	uart_state
  18              		.section	.bss.uart_state,"aw",%nobits
  21              	uart_state:
  22 0000 00       		.space	1
  23              		.global	uart_ticks
  24              		.section	.bss.uart_ticks,"aw",%nobits
  25              		.align	2
  28              	uart_ticks:
  29 0000 00000000 		.space	4
  30              		.global	rx_index
  31              		.section	.bss.rx_index,"aw",%nobits
  32              		.align	1
  35              	rx_index:
  36 0000 0000     		.space	2
  37              		.global	rx_buffer
  38              		.section	.bss.rx_buffer,"aw",%nobits
  39              		.align	2
  42              	rx_buffer:
  43 0000 00000000 		.space	64
  43      00000000 
  43      00000000 
  43      00000000 
  43      00000000 
  44              		.global	rx_buffer_length
  45              		.section	.bss.rx_buffer_length,"aw",%nobits
  48              	rx_buffer_length:
  49 0000 00       		.space	1
  50              		.global	buffer_overflow
  51              		.section	.bss.buffer_overflow,"aw",%nobits
  54              	buffer_overflow:
  55 0000 00       		.space	1
  56              		.global	uart_tx
  57              		.section	.data.uart_tx,"aw"
  58              		.align	2
  61              	uart_tx:
  62 0000 00080140 		.word	1073809408
  63 0004 0900     		.short	9
  64 0006 0000     		.space	2
  65              		.global	uart_rx
  66              		.section	.data.uart_rx,"aw"
  67              		.align	2
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\cc7HEfWI.s 			page 2


  70              	uart_rx:
  71 0000 00080140 		.word	1073809408
  72 0004 0A00     		.short	10
  73 0006 0000     		.space	2
  74              		.section	.data.uart_delimiter,"aw"
  75              		.align	2
  78              	uart_delimiter:
  79 0000 55AA55AA 		.ascii	"U\252U\252"
  80              		.section	.text.uart_reg_read_byte,"ax",%progbits
  81              		.align	1
  82              		.global	uart_reg_read_byte
  83              		.syntax unified
  84              		.thumb
  85              		.thumb_func
  87              	uart_reg_read_byte:
  88              	.LFB33:
  89              		.file 1 "./uart/uart.c"
   1:./uart/uart.c **** /**
   2:./uart/uart.c ****  * @brief uart.c
   3:./uart/uart.c ****  *
   4:./uart/uart.c ****  * @param student: Sameer Almaldein
   5:./uart/uart.c ****  * @param ID: 679699
   6:./uart/uart.c ****  * @param University TU-Chemnitz
   7:./uart/uart.c ****  * @param Master : ASE(Automotive Software Engineering )
   8:./uart/uart.c ****  */ 
   9:./uart/uart.c **** //********************************************************************************************
  10:./uart/uart.c **** //
  11:./uart/uart.c **** // include header files
  12:./uart/uart.c **** //
  13:./uart/uart.c **** //********************************************************************************************
  14:./uart/uart.c **** #include "init.h"
  15:./uart/uart.c **** 
  16:./uart/uart.c **** //********************************************************************************************
  17:./uart/uart.c **** //
  18:./uart/uart.c **** // global variables' declarations 
  19:./uart/uart.c **** //
  20:./uart/uart.c **** //********************************************************************************************
  21:./uart/uart.c **** //! uart state variable it defines thes state in the FSM (Finite state machine)
  22:./uart/uart.c **** volatile uint8_t uart_state=UART_WAIT;
  23:./uart/uart.c **** volatile uint32_t uart_ticks=0;
  24:./uart/uart.c **** 
  25:./uart/uart.c **** volatile uint16_t rx_index=0;
  26:./uart/uart.c **** uint8_t  rx_buffer[UART_BUFFER_SIZE]={0};
  27:./uart/uart.c **** volatile uint8_t  rx_buffer_length=0;
  28:./uart/uart.c **** volatile uint8_t  buffer_overflow=0;
  29:./uart/uart.c **** 
  30:./uart/uart.c **** gpio_t uart_tx={GPIOA,9};//USART1_TX=PA9
  31:./uart/uart.c **** gpio_t uart_rx={GPIOA,10};//USART1_RX=PA10
  32:./uart/uart.c **** //********************************************************************************************
  33:./uart/uart.c **** //
  34:./uart/uart.c **** // static variables' declarations 
  35:./uart/uart.c **** //
  36:./uart/uart.c **** //********************************************************************************************
  37:./uart/uart.c **** static uint8_t uart_delimiter[UART_DELIMITER_SIZE]={0x55,0xaa,0x55,0xaa};
  38:./uart/uart.c **** 
  39:./uart/uart.c **** // Atmega328p gertboard CPU_F 12MHz
  40:./uart/uart.c **** //static uart_options_t uart_options={
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\cc7HEfWI.s 			page 3


  41:./uart/uart.c **** //	F_CPU,		// frequency of CPU
  42:./uart/uart.c **** //	9600, 		// baud rate
  43:./uart/uart.c **** //	8,      	// char size
  44:./uart/uart.c **** //	1,      	//stop bit
  45:./uart/uart.c **** //	0,      	//no parity
  46:./uart/uart.c **** //	0,      	// asynchronous mode
  47:./uart/uart.c **** //	0,      	// no dual speed mode
  48:./uart/uart.c **** //	0	    	// UBRD
  49:./uart/uart.c **** //};
  50:./uart/uart.c **** 
  51:./uart/uart.c **** 
  52:./uart/uart.c **** 
  53:./uart/uart.c **** //********************************************************************************************
  54:./uart/uart.c **** //
  55:./uart/uart.c **** //  static function ProtoType
  56:./uart/uart.c **** //
  57:./uart/uart.c **** //********************************************************************************************
  58:./uart/uart.c **** //! read a byte to the uart data register
  59:./uart/uart.c **** extern uint8_t uart_reg_read_byte(USART_TypeDef * usartx);
  60:./uart/uart.c **** //! write a byte to the uart data register
  61:./uart/uart.c **** extern void uart_reg_write_byte(USART_TypeDef * usartx,uint8_t val);
  62:./uart/uart.c **** //! write an array of data to the uart transmit buffer
  63:./uart/uart.c **** extern void uart_reg_write_buffer(USART_TypeDef * usartx,uint8_t * buff,uint16_t length);
  64:./uart/uart.c **** 
  65:./uart/uart.c **** //! configures the uart module
  66:./uart/uart.c **** //static void uart_configure();
  67:./uart/uart.c **** //! initialize the receive mask interrupt
  68:./uart/uart.c **** //static void uart_set_rx_Int_mask(uint8_t enable);
  69:./uart/uart.c **** //! uart reset 
  70:./uart/uart.c **** 
  71:./uart/uart.c **** 
  72:./uart/uart.c **** //static uint8_t startswith_header(uint8_t * buffer,uint8_t Buffer_length,uint8_t * delimiter);
  73:./uart/uart.c **** static uint8_t endswith_delimiter(volatile uint8_t * buffer,uint8_t Buffer_length,uint8_t * delimit
  74:./uart/uart.c **** 
  75:./uart/uart.c **** //********************************************************************************************
  76:./uart/uart.c **** //
  77:./uart/uart.c **** //
  78:./uart/uart.c **** //********************************************************************************************
  79:./uart/uart.c **** /**
  80:./uart/uart.c ****  * @brief configures the uart module
  81:./uart/uart.c ****  * @details configures the uart module using the options 
  82:./uart/uart.c ****  * 			defined by static  uart_options variable
  83:./uart/uart.c ****  * 			
  84:./uart/uart.c ****  * @return void
  85:./uart/uart.c ****  * 
  86:./uart/uart.c ****  */
  87:./uart/uart.c **** //void uart_configure()
  88:./uart/uart.c **** //{
  89:./uart/uart.c ****  /*   
  90:./uart/uart.c **** 	uart_mode_reg.reg_select=0;
  91:./uart/uart.c **** 	// mode operation
  92:./uart/uart.c **** 	if(uart_options.synch==1)
  93:./uart/uart.c **** 	 uart_mode_reg.mode=_UART_SYNC;
  94:./uart/uart.c **** 	else
  95:./uart/uart.c **** 	 uart_mode_reg.mode=_UART_ASYNC;
  96:./uart/uart.c **** 	
  97:./uart/uart.c **** 	// define options of USART mode
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\cc7HEfWI.s 			page 4


  98:./uart/uart.c **** 	if(uart_options.stop_bit==2)
  99:./uart/uart.c **** 		uart_mode_reg.stop_bit=_UART_TWO_STOPBIT;
 100:./uart/uart.c **** 	else
 101:./uart/uart.c **** 		uart_mode_reg.stop_bit=_UART_ONE_STOPBIT;
 102:./uart/uart.c **** 
 103:./uart/uart.c **** 	switch(uart_options.parity)
 104:./uart/uart.c **** 	{
 105:./uart/uart.c **** 		case 1:  uart_mode_reg.parity=_UART_ODD_PARITY;  break;
 106:./uart/uart.c **** 		case 2:  uart_mode_reg.parity=_UART_EVEN_PARITY; break;
 107:./uart/uart.c **** 		default: uart_mode_reg.parity=_UART_NO_PARITY;   break;
 108:./uart/uart.c **** 	}
 109:./uart/uart.c **** 
 110:./uart/uart.c **** 	// clear 8th bit of uart
 111:./uart/uart.c **** 	uart_control_reg.char_size_9bit=0;
 112:./uart/uart.c **** 	
 113:./uart/uart.c **** 	switch(uart_options.char_size)
 114:./uart/uart.c **** 	{
 115:./uart/uart.c **** 		case 5: uart_mode_reg.char_size=_UART_FRAME_5_BITS; break;
 116:./uart/uart.c **** 		case 6: uart_mode_reg.char_size=_UART_FRAME_6_BITS; break;
 117:./uart/uart.c **** 		case 7: uart_mode_reg.char_size=_UART_FRAME_7_BITS; break;
 118:./uart/uart.c **** 		case 8: uart_mode_reg.char_size=_UART_FRAME_8_BITS; break;
 119:./uart/uart.c **** 		case 9:
 120:./uart/uart.c **** 				uart_mode_reg.char_size=_UART_FRAME_8_BITS;
 121:./uart/uart.c **** 				uart_control_reg.char_size_9bit=1;
 122:./uart/uart.c **** 		break;
 123:./uart/uart.c **** 		default:
 124:./uart/uart.c **** 		      uart_mode_reg.char_size=_UART_FRAME_8_BITS; break;
 125:./uart/uart.c **** 	}
 126:./uart/uart.c **** 
 127:./uart/uart.c **** 	//uart_regs.p_mode_reg->val=my_mode.val;
 128:./uart/uart.c **** 
 129:./uart/uart.c **** 	// set baud rate
 130:./uart/uart.c **** 	WORD_BYTES baud_rate;
 131:./uart/uart.c **** 	baud_rate.word=uart_options.UBRD;
 132:./uart/uart.c **** 	uart_status_reg.double_speed=uart_options.dual_speed;
 133:./uart/uart.c **** 	
 134:./uart/uart.c **** 	if(uart_options.UBRD==0)
 135:./uart/uart.c **** 	{		
 136:./uart/uart.c **** 	// define dual speed U2X bit
 137:./uart/uart.c **** 	 if(uart_options.dual_speed==1)
 138:./uart/uart.c **** 	 {
 139:./uart/uart.c **** 		baud_rate.word=UART_BAUD_ASYNC_double(uart_options.buad_rate,uart_options.xtal_cpu);
 140:./uart/uart.c **** 	 }
 141:./uart/uart.c **** 	 else
 142:./uart/uart.c **** 	 {
 143:./uart/uart.c **** 		if(!uart_options.synch)
 144:./uart/uart.c **** 		 baud_rate.word=UART_BAUD_ASYNC(uart_options.buad_rate,uart_options.xtal_cpu);
 145:./uart/uart.c **** 		else
 146:./uart/uart.c **** 		  baud_rate.word=UART_BAUD_SYNC(uart_options.buad_rate,uart_options.xtal_cpu);
 147:./uart/uart.c **** 	 }
 148:./uart/uart.c **** 	}
 149:./uart/uart.c **** 
 150:./uart/uart.c **** 	// set baud rate registers
 151:./uart/uart.c **** 	uart_mode_reg.reg_select=0;
 152:./uart/uart.c **** 	uart_baud_rate_low_reg.val=baud_rate.byte.low;
 153:./uart/uart.c **** 	uart_baud_rate_high_reg.val=baud_rate.byte.high;
 154:./uart/uart.c ****  */
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\cc7HEfWI.s 			page 5


 155:./uart/uart.c **** //}
 156:./uart/uart.c **** //-------------------------------------------------------------------------------------------------
 157:./uart/uart.c **** /**
 158:./uart/uart.c ****  * @brief initializes the receive mask interrupt
 159:./uart/uart.c ****  * 
 160:./uart/uart.c ****  *  sets or resets the receive complete interrupt mask bit
 161:./uart/uart.c ****  *  based on the passed value
 162:./uart/uart.c ****  * @param enable sets/resets the receive complete interrupt mask bit
 163:./uart/uart.c ****  * @return   void
 164:./uart/uart.c ****  */
 165:./uart/uart.c **** //void uart_set_rx_Int_mask(uint8_t enable)
 166:./uart/uart.c **** //{
 167:./uart/uart.c **** /*UCSR0A=0x00;
 168:./uart/uart.c **** 	//UCSRxB=(1<<RXEN)|(1<<RXCIE);
 169:./uart/uart.c **** if(enable)
 170:./uart/uart.c ****  {	
 171:./uart/uart.c **** 	uart_control_reg.rx_enable=1;	 		 //sbit(UCSR0B,RXEN0);
 172:./uart/uart.c **** 	uart_control_reg.receive_complete_ie=1;	 //sbit(UCSR0B,RXCIE0);
 173:./uart/uart.c ****  }
 174:./uart/uart.c ****  else
 175:./uart/uart.c ****  {
 176:./uart/uart.c **** 	uart_control_reg.rx_enable=0;			 //sbit(UCSR0B,RXEN0);
 177:./uart/uart.c **** 	uart_control_reg.receive_complete_ie=0;	 //cbit(UCSR0B,RXCIE0);	 
 178:./uart/uart.c ****  }
 179:./uart/uart.c ****  */
 180:./uart/uart.c **** //}
 181:./uart/uart.c **** //-------------------------------------------------------------------------------------------------
 182:./uart/uart.c **** /**
 183:./uart/uart.c ****  * @brief read a byte to the uart data register
 184:./uart/uart.c ****  * @details reseved for future use
 185:./uart/uart.c ****  * @return uint8_t
 186:./uart/uart.c ****  * 
 187:./uart/uart.c ****  */
 188:./uart/uart.c **** uint8_t uart_reg_read_byte(USART_TypeDef * usartx)
 189:./uart/uart.c **** {
  90              		.loc 1 189 1
  91              		.cfi_startproc
  92              		@ args = 0, pretend = 0, frame = 8
  93              		@ frame_needed = 1, uses_anonymous_args = 0
  94 0000 80B5     		push	{r7, lr}
  95              	.LCFI0:
  96              		.cfi_def_cfa_offset 8
  97              		.cfi_offset 7, -8
  98              		.cfi_offset 14, -4
  99 0002 82B0     		sub	sp, sp, #8
 100              	.LCFI1:
 101              		.cfi_def_cfa_offset 16
 102 0004 00AF     		add	r7, sp, #0
 103              	.LCFI2:
 104              		.cfi_def_cfa_register 7
 105 0006 7860     		str	r0, [r7, #4]
 190:./uart/uart.c ****    while(USART_GetFlagStatus(usartx,USART_FLAG_RXNE)==RESET);
 106              		.loc 1 190 9
 107 0008 00BF     		nop
 108              	.L2:
 109              		.loc 1 190 10 discriminator 1
 110 000a 2021     		movs	r1, #32
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\cc7HEfWI.s 			page 6


 111 000c 7868     		ldr	r0, [r7, #4]
 112 000e FFF7FEFF 		bl	USART_GetFlagStatus
 113 0012 0346     		mov	r3, r0
 114              		.loc 1 190 9 discriminator 1
 115 0014 002B     		cmp	r3, #0
 116 0016 F8D0     		beq	.L2
 191:./uart/uart.c ****      return usartx->DR & (uint16_t) 0x00ff;  
 117              		.loc 1 191 19
 118 0018 7B68     		ldr	r3, [r7, #4]
 119 001a 9B88     		ldrh	r3, [r3, #4]	@ movhi
 120 001c 9BB2     		uxth	r3, r3
 121              		.loc 1 191 24
 122 001e DBB2     		uxtb	r3, r3
 192:./uart/uart.c ****     
 193:./uart/uart.c **** }
 123              		.loc 1 193 1
 124 0020 1846     		mov	r0, r3
 125 0022 0837     		adds	r7, r7, #8
 126              	.LCFI3:
 127              		.cfi_def_cfa_offset 8
 128 0024 BD46     		mov	sp, r7
 129              	.LCFI4:
 130              		.cfi_def_cfa_register 13
 131              		@ sp needed
 132 0026 80BD     		pop	{r7, pc}
 133              		.cfi_endproc
 134              	.LFE33:
 136              		.section	.text.uart_reg_write_byte,"ax",%progbits
 137              		.align	1
 138              		.global	uart_reg_write_byte
 139              		.syntax unified
 140              		.thumb
 141              		.thumb_func
 143              	uart_reg_write_byte:
 144              	.LFB34:
 194:./uart/uart.c **** //------------------------------------------------------------------------------
 195:./uart/uart.c **** /**
 196:./uart/uart.c ****  * @brief  writes a byte to the uart data register
 197:./uart/uart.c ****  * 
 198:./uart/uart.c ****  * @details writes a byte to the uart data register
 199:./uart/uart.c ****  * 			which be later sent on the uart TX output pin 
 200:./uart/uart.c ****  * 
 201:./uart/uart.c ****  * @param val the passed value to be sent on the uart TX line
 202:./uart/uart.c ****  */
 203:./uart/uart.c **** void uart_reg_write_byte(USART_TypeDef * usartx ,uint8_t val)
 204:./uart/uart.c **** {
 145              		.loc 1 204 1
 146              		.cfi_startproc
 147              		@ args = 0, pretend = 0, frame = 8
 148              		@ frame_needed = 1, uses_anonymous_args = 0
 149 0000 80B5     		push	{r7, lr}
 150              	.LCFI5:
 151              		.cfi_def_cfa_offset 8
 152              		.cfi_offset 7, -8
 153              		.cfi_offset 14, -4
 154 0002 82B0     		sub	sp, sp, #8
 155              	.LCFI6:
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\cc7HEfWI.s 			page 7


 156              		.cfi_def_cfa_offset 16
 157 0004 00AF     		add	r7, sp, #0
 158              	.LCFI7:
 159              		.cfi_def_cfa_register 7
 160 0006 7860     		str	r0, [r7, #4]
 161 0008 0B46     		mov	r3, r1
 162 000a FB70     		strb	r3, [r7, #3]
 205:./uart/uart.c ****  /*
 206:./uart/uart.c ****   uint32_t i=0;	
 207:./uart/uart.c ****    while(!uart_status_reg.data_register_empty);
 208:./uart/uart.c **** 	uart_data_reg.val=val;
 209:./uart/uart.c **** */
 210:./uart/uart.c **** while(USART_GetFlagStatus(usartx,USART_FLAG_TXE)==RESET);
 163              		.loc 1 210 6
 164 000c 00BF     		nop
 165              	.L5:
 166              		.loc 1 210 7 discriminator 1
 167 000e 8021     		movs	r1, #128
 168 0010 7868     		ldr	r0, [r7, #4]
 169 0012 FFF7FEFF 		bl	USART_GetFlagStatus
 170 0016 0346     		mov	r3, r0
 171              		.loc 1 210 6 discriminator 1
 172 0018 002B     		cmp	r3, #0
 173 001a F8D0     		beq	.L5
 211:./uart/uart.c ****   usartx->DR=(val & (uint16_t) 0x00ff);
 174              		.loc 1 211 13
 175 001c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 176 001e 9AB2     		uxth	r2, r3
 177 0020 7B68     		ldr	r3, [r7, #4]
 178 0022 9A80     		strh	r2, [r3, #4]	@ movhi
 212:./uart/uart.c **** 
 213:./uart/uart.c ****  }
 179              		.loc 1 213 2
 180 0024 00BF     		nop
 181 0026 0837     		adds	r7, r7, #8
 182              	.LCFI8:
 183              		.cfi_def_cfa_offset 8
 184 0028 BD46     		mov	sp, r7
 185              	.LCFI9:
 186              		.cfi_def_cfa_register 13
 187              		@ sp needed
 188 002a 80BD     		pop	{r7, pc}
 189              		.cfi_endproc
 190              	.LFE34:
 192              		.section	.text.uart_reg_write_buffer,"ax",%progbits
 193              		.align	1
 194              		.global	uart_reg_write_buffer
 195              		.syntax unified
 196              		.thumb
 197              		.thumb_func
 199              	uart_reg_write_buffer:
 200              	.LFB35:
 214:./uart/uart.c **** //-------------------------------------------------------------------------------------------------
 215:./uart/uart.c **** /**
 216:./uart/uart.c ****  * @brief write an array of data to the uart transmit buffer
 217:./uart/uart.c ****  * 
 218:./uart/uart.c ****  * @details  writes this array of bytes to the uart data rgister 
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\cc7HEfWI.s 			page 8


 219:./uart/uart.c ****  * 			 in sequnce to be transmisted on the TX output pin
 220:./uart/uart.c ****  * 
 221:./uart/uart.c ****  * @param buff a pointer to the data array
 222:./uart/uart.c ****  * @param size  the length of this data array buffer
 223:./uart/uart.c ****  * @returns void
 224:./uart/uart.c ****  */
 225:./uart/uart.c **** void uart_reg_write_buffer(USART_TypeDef * usartx ,uint8_t * buff,uint16_t size)
 226:./uart/uart.c **** {
 201              		.loc 1 226 1
 202              		.cfi_startproc
 203              		@ args = 0, pretend = 0, frame = 24
 204              		@ frame_needed = 1, uses_anonymous_args = 0
 205 0000 80B5     		push	{r7, lr}
 206              	.LCFI10:
 207              		.cfi_def_cfa_offset 8
 208              		.cfi_offset 7, -8
 209              		.cfi_offset 14, -4
 210 0002 86B0     		sub	sp, sp, #24
 211              	.LCFI11:
 212              		.cfi_def_cfa_offset 32
 213 0004 00AF     		add	r7, sp, #0
 214              	.LCFI12:
 215              		.cfi_def_cfa_register 7
 216 0006 F860     		str	r0, [r7, #12]
 217 0008 B960     		str	r1, [r7, #8]
 218 000a 1346     		mov	r3, r2
 219 000c FB80     		strh	r3, [r7, #6]	@ movhi
 227:./uart/uart.c **** 	uint16_t i=0;
 220              		.loc 1 227 11
 221 000e 0023     		movs	r3, #0
 222 0010 FB82     		strh	r3, [r7, #22]	@ movhi
 228:./uart/uart.c **** 	for(i=0;i<size;i++)
 223              		.loc 1 228 7
 224 0012 0023     		movs	r3, #0
 225 0014 FB82     		strh	r3, [r7, #22]	@ movhi
 226              		.loc 1 228 2
 227 0016 0AE0     		b	.L7
 228              	.L8:
 229:./uart/uart.c **** 	 uart_reg_write_byte((USART_TypeDef *) usartx ,buff[i]);
 229              		.loc 1 229 53 discriminator 3
 230 0018 FB8A     		ldrh	r3, [r7, #22]
 231 001a BA68     		ldr	r2, [r7, #8]
 232 001c 1344     		add	r3, r3, r2
 233              		.loc 1 229 3 discriminator 3
 234 001e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 235 0020 1946     		mov	r1, r3
 236 0022 F868     		ldr	r0, [r7, #12]
 237 0024 FFF7FEFF 		bl	uart_reg_write_byte
 228:./uart/uart.c **** 	for(i=0;i<size;i++)
 238              		.loc 1 228 18 discriminator 3
 239 0028 FB8A     		ldrh	r3, [r7, #22]
 240 002a 0133     		adds	r3, r3, #1
 241 002c FB82     		strh	r3, [r7, #22]	@ movhi
 242              	.L7:
 228:./uart/uart.c **** 	for(i=0;i<size;i++)
 243              		.loc 1 228 2 discriminator 1
 244 002e FA8A     		ldrh	r2, [r7, #22]
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\cc7HEfWI.s 			page 9


 245 0030 FB88     		ldrh	r3, [r7, #6]
 246 0032 9A42     		cmp	r2, r3
 247 0034 F0D3     		bcc	.L8
 230:./uart/uart.c **** }
 248              		.loc 1 230 1
 249 0036 00BF     		nop
 250 0038 00BF     		nop
 251 003a 1837     		adds	r7, r7, #24
 252              	.LCFI13:
 253              		.cfi_def_cfa_offset 8
 254 003c BD46     		mov	sp, r7
 255              	.LCFI14:
 256              		.cfi_def_cfa_register 13
 257              		@ sp needed
 258 003e 80BD     		pop	{r7, pc}
 259              		.cfi_endproc
 260              	.LFE35:
 262              		.section	.text.uart_reset,"ax",%progbits
 263              		.align	1
 264              		.global	uart_reset
 265              		.syntax unified
 266              		.thumb
 267              		.thumb_func
 269              	uart_reset:
 270              	.LFB36:
 231:./uart/uart.c **** //-------------------------------------------------------------------------------------------------
 232:./uart/uart.c **** /**
 233:./uart/uart.c ****  * @brief resets the received buffer 
 234:./uart/uart.c ****  * @details resets the received buffer by 
 235:./uart/uart.c ****  * 			setting each member a zero value
 236:./uart/uart.c ****  * @return void  
 237:./uart/uart.c ****  */
 238:./uart/uart.c **** void uart_reset(void)
 239:./uart/uart.c **** {
 271              		.loc 1 239 1
 272              		.cfi_startproc
 273              		@ args = 0, pretend = 0, frame = 8
 274              		@ frame_needed = 1, uses_anonymous_args = 0
 275              		@ link register save eliminated.
 276 0000 80B4     		push	{r7}
 277              	.LCFI15:
 278              		.cfi_def_cfa_offset 4
 279              		.cfi_offset 7, -4
 280 0002 83B0     		sub	sp, sp, #12
 281              	.LCFI16:
 282              		.cfi_def_cfa_offset 16
 283 0004 00AF     		add	r7, sp, #0
 284              	.LCFI17:
 285              		.cfi_def_cfa_register 7
 240:./uart/uart.c **** 	rx_buffer_length=0;
 286              		.loc 1 240 18
 287 0006 0B4B     		ldr	r3, .L12
 288 0008 0022     		movs	r2, #0
 289 000a 1A70     		strb	r2, [r3]
 290              	.LBB2:
 241:./uart/uart.c **** 	for(uint8_t i=0;i<UART_BUFFER_SIZE;i++)
 291              		.loc 1 241 14
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\cc7HEfWI.s 			page 10


 292 000c 0023     		movs	r3, #0
 293 000e FB71     		strb	r3, [r7, #7]
 294              		.loc 1 241 2
 295 0010 06E0     		b	.L10
 296              	.L11:
 242:./uart/uart.c **** 	  rx_buffer[i]=0;
 297              		.loc 1 242 13 discriminator 3
 298 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 299              		.loc 1 242 16 discriminator 3
 300 0014 084A     		ldr	r2, .L12+4
 301 0016 0021     		movs	r1, #0
 302 0018 D154     		strb	r1, [r2, r3]
 241:./uart/uart.c **** 	for(uint8_t i=0;i<UART_BUFFER_SIZE;i++)
 303              		.loc 1 241 38 discriminator 3
 304 001a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 305 001c 0133     		adds	r3, r3, #1
 306 001e FB71     		strb	r3, [r7, #7]
 307              	.L10:
 241:./uart/uart.c **** 	for(uint8_t i=0;i<UART_BUFFER_SIZE;i++)
 308              		.loc 1 241 2 discriminator 1
 309 0020 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 310 0022 3F2B     		cmp	r3, #63
 311 0024 F5D9     		bls	.L11
 312              	.LBE2:
 243:./uart/uart.c **** }
 313              		.loc 1 243 1
 314 0026 00BF     		nop
 315 0028 00BF     		nop
 316 002a 0C37     		adds	r7, r7, #12
 317              	.LCFI18:
 318              		.cfi_def_cfa_offset 4
 319 002c BD46     		mov	sp, r7
 320              	.LCFI19:
 321              		.cfi_def_cfa_register 13
 322              		@ sp needed
 323 002e 80BC     		pop	{r7}
 324              	.LCFI20:
 325              		.cfi_restore 7
 326              		.cfi_def_cfa_offset 0
 327 0030 7047     		bx	lr
 328              	.L13:
 329 0032 00BF     		.align	2
 330              	.L12:
 331 0034 00000000 		.word	rx_buffer_length
 332 0038 00000000 		.word	rx_buffer
 333              		.cfi_endproc
 334              	.LFE36:
 336              		.section	.text.uart_rx_buffer_add,"ax",%progbits
 337              		.align	1
 338              		.global	uart_rx_buffer_add
 339              		.syntax unified
 340              		.thumb
 341              		.thumb_func
 343              	uart_rx_buffer_add:
 344              	.LFB37:
 244:./uart/uart.c **** //-------------------------------------------------------------------------------------------------
 245:./uart/uart.c **** /**
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\cc7HEfWI.s 			page 11


 246:./uart/uart.c ****  * @brief append the new received byte to the receive buffer
 247:./uart/uart.c ****  * 
 248:./uart/uart.c ****  * @param val  the byte value intended to be appended to the end of the received buffer
 249:./uart/uart.c ****  * @return uint8_t 
 250:./uart/uart.c ****  * @retval  0 failed to add this byte no enough space 
 251:./uart/uart.c ****  * @retval  1 succeeded to add this byte to the end of the buffer
 252:./uart/uart.c ****  */
 253:./uart/uart.c **** uint8_t uart_rx_buffer_add(uint8_t val)
 254:./uart/uart.c **** {
 345              		.loc 1 254 1
 346              		.cfi_startproc
 347              		@ args = 0, pretend = 0, frame = 8
 348              		@ frame_needed = 1, uses_anonymous_args = 0
 349              		@ link register save eliminated.
 350 0000 80B4     		push	{r7}
 351              	.LCFI21:
 352              		.cfi_def_cfa_offset 4
 353              		.cfi_offset 7, -4
 354 0002 83B0     		sub	sp, sp, #12
 355              	.LCFI22:
 356              		.cfi_def_cfa_offset 16
 357 0004 00AF     		add	r7, sp, #0
 358              	.LCFI23:
 359              		.cfi_def_cfa_register 7
 360 0006 0346     		mov	r3, r0
 361 0008 FB71     		strb	r3, [r7, #7]
 255:./uart/uart.c **** if(rx_buffer_length<=UART_BUFFER_SIZE)  
 362              		.loc 1 255 20
 363 000a 0D4B     		ldr	r3, .L17
 364 000c 1B78     		ldrb	r3, [r3]
 365 000e DBB2     		uxtb	r3, r3
 366              		.loc 1 255 3
 367 0010 402B     		cmp	r3, #64
 368 0012 0FD8     		bhi	.L15
 256:./uart/uart.c ****  {
 257:./uart/uart.c ****   rx_buffer_length++;
 369              		.loc 1 257 19
 370 0014 0A4B     		ldr	r3, .L17
 371 0016 1B78     		ldrb	r3, [r3]
 372 0018 DBB2     		uxtb	r3, r3
 373 001a 0133     		adds	r3, r3, #1
 374 001c DAB2     		uxtb	r2, r3
 375 001e 084B     		ldr	r3, .L17
 376 0020 1A70     		strb	r2, [r3]
 258:./uart/uart.c ****   rx_buffer[rx_buffer_length-1]=val;
 377              		.loc 1 258 29
 378 0022 074B     		ldr	r3, .L17
 379 0024 1B78     		ldrb	r3, [r3]
 380 0026 DBB2     		uxtb	r3, r3
 381 0028 013B     		subs	r3, r3, #1
 382              		.loc 1 258 32
 383 002a 0649     		ldr	r1, .L17+4
 384 002c FA79     		ldrb	r2, [r7, #7]
 385 002e CA54     		strb	r2, [r1, r3]
 259:./uart/uart.c ****   return 1;
 386              		.loc 1 259 10
 387 0030 0123     		movs	r3, #1
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\cc7HEfWI.s 			page 12


 388 0032 00E0     		b	.L16
 389              	.L15:
 260:./uart/uart.c ****  }
 261:./uart/uart.c ****  return 0; 
 390              		.loc 1 261 9
 391 0034 0023     		movs	r3, #0
 392              	.L16:
 262:./uart/uart.c **** }
 393              		.loc 1 262 1
 394 0036 1846     		mov	r0, r3
 395 0038 0C37     		adds	r7, r7, #12
 396              	.LCFI24:
 397              		.cfi_def_cfa_offset 4
 398 003a BD46     		mov	sp, r7
 399              	.LCFI25:
 400              		.cfi_def_cfa_register 13
 401              		@ sp needed
 402 003c 80BC     		pop	{r7}
 403              	.LCFI26:
 404              		.cfi_restore 7
 405              		.cfi_def_cfa_offset 0
 406 003e 7047     		bx	lr
 407              	.L18:
 408              		.align	2
 409              	.L17:
 410 0040 00000000 		.word	rx_buffer_length
 411 0044 00000000 		.word	rx_buffer
 412              		.cfi_endproc
 413              	.LFE37:
 415              		.section	.text.startswith_header,"ax",%progbits
 416              		.align	1
 417              		.global	startswith_header
 418              		.syntax unified
 419              		.thumb
 420              		.thumb_func
 422              	startswith_header:
 423              	.LFB38:
 263:./uart/uart.c **** //-------------------------------------------------------------------------------------------------
 264:./uart/uart.c **** /**
 265:./uart/uart.c ****  * @brief checks how the received message on the uart begins with
 266:./uart/uart.c ****  * 	
 267:./uart/uart.c ****  * @details checks if the header of received message on the uart
 268:./uart/uart.c ****  * 			is greater than the minimum command legth
 269:./uart/uart.c ****  * 			then it compare the first part with a predefined header	
 270:./uart/uart.c ****  * 		
 271:./uart/uart.c ****  * @param buffer 			array of bytes i.e. data message received on the 
 272:./uart/uart.c ****  * @param Buffer_length 	the length of the message array of bytes
 273:./uart/uart.c ****  * @param header 			a pointer to predefined header for the command message
 274:./uart/uart.c ****  * @return uint8_t 
 275:./uart/uart.c ****  */
 276:./uart/uart.c **** uint8_t startswith_header(uint8_t * buffer,uint8_t Buffer_length,uint8_t * header)
 277:./uart/uart.c **** {
 424              		.loc 1 277 1
 425              		.cfi_startproc
 426              		@ args = 0, pretend = 0, frame = 24
 427              		@ frame_needed = 1, uses_anonymous_args = 0
 428              		@ link register save eliminated.
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\cc7HEfWI.s 			page 13


 429 0000 80B4     		push	{r7}
 430              	.LCFI27:
 431              		.cfi_def_cfa_offset 4
 432              		.cfi_offset 7, -4
 433 0002 87B0     		sub	sp, sp, #28
 434              	.LCFI28:
 435              		.cfi_def_cfa_offset 32
 436 0004 00AF     		add	r7, sp, #0
 437              	.LCFI29:
 438              		.cfi_def_cfa_register 7
 439 0006 F860     		str	r0, [r7, #12]
 440 0008 0B46     		mov	r3, r1
 441 000a 7A60     		str	r2, [r7, #4]
 442 000c FB72     		strb	r3, [r7, #11]
 278:./uart/uart.c **** 	if(Buffer_length<UART_HEADER_SIZE)
 443              		.loc 1 278 4
 444 000e FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 445 0010 032B     		cmp	r3, #3
 446 0012 01D8     		bhi	.L20
 279:./uart/uart.c **** 	 return 0;
 447              		.loc 1 279 10
 448 0014 0023     		movs	r3, #0
 449 0016 15E0     		b	.L21
 450              	.L20:
 451              	.LBB3:
 280:./uart/uart.c **** 	for(uint8_t i=1;i<=UART_HEADER_SIZE;i++)
 452              		.loc 1 280 14
 453 0018 0123     		movs	r3, #1
 454 001a FB75     		strb	r3, [r7, #23]
 455              		.loc 1 280 2
 456 001c 0EE0     		b	.L22
 457              	.L24:
 281:./uart/uart.c **** 	 if(buffer[i]!=header[i])
 458              		.loc 1 281 12
 459 001e FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 460 0020 FA68     		ldr	r2, [r7, #12]
 461 0022 1344     		add	r3, r3, r2
 462 0024 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 463              		.loc 1 281 23
 464 0026 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 465 0028 7968     		ldr	r1, [r7, #4]
 466 002a 0B44     		add	r3, r3, r1
 467 002c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 468              		.loc 1 281 5
 469 002e 9A42     		cmp	r2, r3
 470 0030 01D0     		beq	.L23
 282:./uart/uart.c **** 	  return 0;	  
 471              		.loc 1 282 11
 472 0032 0023     		movs	r3, #0
 473 0034 06E0     		b	.L21
 474              	.L23:
 280:./uart/uart.c **** 	for(uint8_t i=1;i<=UART_HEADER_SIZE;i++)
 475              		.loc 1 280 39 discriminator 2
 476 0036 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 477 0038 0133     		adds	r3, r3, #1
 478 003a FB75     		strb	r3, [r7, #23]
 479              	.L22:
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\cc7HEfWI.s 			page 14


 280:./uart/uart.c **** 	for(uint8_t i=1;i<=UART_HEADER_SIZE;i++)
 480              		.loc 1 280 2 discriminator 1
 481 003c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 482 003e 042B     		cmp	r3, #4
 483 0040 EDD9     		bls	.L24
 484              	.LBE3:
 283:./uart/uart.c ****  return 1;	
 485              		.loc 1 283 9
 486 0042 0123     		movs	r3, #1
 487              	.L21:
 284:./uart/uart.c **** }
 488              		.loc 1 284 1
 489 0044 1846     		mov	r0, r3
 490 0046 1C37     		adds	r7, r7, #28
 491              	.LCFI30:
 492              		.cfi_def_cfa_offset 4
 493 0048 BD46     		mov	sp, r7
 494              	.LCFI31:
 495              		.cfi_def_cfa_register 13
 496              		@ sp needed
 497 004a 80BC     		pop	{r7}
 498              	.LCFI32:
 499              		.cfi_restore 7
 500              		.cfi_def_cfa_offset 0
 501 004c 7047     		bx	lr
 502              		.cfi_endproc
 503              	.LFE38:
 505              		.section	.text.endswith_delimiter,"ax",%progbits
 506              		.align	1
 507              		.syntax unified
 508              		.thumb
 509              		.thumb_func
 511              	endswith_delimiter:
 512              	.LFB39:
 285:./uart/uart.c **** //-------------------------------------------------------------------------------------------------
 286:./uart/uart.c **** /**
 287:./uart/uart.c ****  * @brief checks how the received message on the uart ends with
 288:./uart/uart.c ****  * 	
 289:./uart/uart.c ****  * @details checks if the delimiter of received message on the uart
 290:./uart/uart.c ****  * 			has received and matches with predefined delimiter
 291:./uart/uart.c ****  * 		
 292:./uart/uart.c ****  * @param buffer 			array of bytes i.e. data message received on the 
 293:./uart/uart.c ****  * @param Buffer_length 	the length of the message array of bytes
 294:./uart/uart.c ****  * @param delimiter 		a pointer to predefined delimiter for the command message
 295:./uart/uart.c ****  * @return uint8_t 
 296:./uart/uart.c ****  * @retval 0: neither delimiter  has received yet nor a correct delimiter received 
 297:./uart/uart.c ****  * @retval 1: a correct delimiter has received 
 298:./uart/uart.c ****  */
 299:./uart/uart.c **** uint8_t endswith_delimiter(volatile uint8_t * buffer,uint8_t Buffer_length,uint8_t * delimiter)
 300:./uart/uart.c **** {
 513              		.loc 1 300 1
 514              		.cfi_startproc
 515              		@ args = 0, pretend = 0, frame = 24
 516              		@ frame_needed = 1, uses_anonymous_args = 0
 517              		@ link register save eliminated.
 518 0000 80B4     		push	{r7}
 519              	.LCFI33:
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\cc7HEfWI.s 			page 15


 520              		.cfi_def_cfa_offset 4
 521              		.cfi_offset 7, -4
 522 0002 87B0     		sub	sp, sp, #28
 523              	.LCFI34:
 524              		.cfi_def_cfa_offset 32
 525 0004 00AF     		add	r7, sp, #0
 526              	.LCFI35:
 527              		.cfi_def_cfa_register 7
 528 0006 F860     		str	r0, [r7, #12]
 529 0008 0B46     		mov	r3, r1
 530 000a 7A60     		str	r2, [r7, #4]
 531 000c FB72     		strb	r3, [r7, #11]
 301:./uart/uart.c **** 	if(Buffer_length<UART_DELIMITER_SIZE)
 532              		.loc 1 301 4
 533 000e FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 534 0010 032B     		cmp	r3, #3
 535 0012 01D8     		bhi	.L26
 302:./uart/uart.c **** 	 return 0;
 536              		.loc 1 302 10
 537 0014 0023     		movs	r3, #0
 538 0016 1CE0     		b	.L27
 539              	.L26:
 540              	.LBB4:
 303:./uart/uart.c **** 	for(uint8_t i=1;i<=UART_DELIMITER_SIZE;i++)
 541              		.loc 1 303 14
 542 0018 0123     		movs	r3, #1
 543 001a FB75     		strb	r3, [r7, #23]
 544              		.loc 1 303 2
 545 001c 15E0     		b	.L28
 546              	.L30:
 304:./uart/uart.c **** 	 if(buffer[Buffer_length-i]!=delimiter[UART_DELIMITER_SIZE-i])
 547              		.loc 1 304 26
 548 001e FA7A     		ldrb	r2, [r7, #11]	@ zero_extendqisi2
 549 0020 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 550 0022 D31A     		subs	r3, r2, r3
 551 0024 1A46     		mov	r2, r3
 552              		.loc 1 304 12
 553 0026 FB68     		ldr	r3, [r7, #12]
 554 0028 1344     		add	r3, r3, r2
 555 002a 1B78     		ldrb	r3, [r3]
 556 002c DAB2     		uxtb	r2, r3
 557              		.loc 1 304 60
 558 002e FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 559 0030 C3F10403 		rsb	r3, r3, #4
 560 0034 1946     		mov	r1, r3
 561              		.loc 1 304 40
 562 0036 7B68     		ldr	r3, [r7, #4]
 563 0038 0B44     		add	r3, r3, r1
 564              		.loc 1 304 29
 565 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 566              		.loc 1 304 5
 567 003c 9A42     		cmp	r2, r3
 568 003e 01D0     		beq	.L29
 305:./uart/uart.c **** 	  return 0;	  
 569              		.loc 1 305 11
 570 0040 0023     		movs	r3, #0
 571 0042 06E0     		b	.L27
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\cc7HEfWI.s 			page 16


 572              	.L29:
 303:./uart/uart.c **** 	for(uint8_t i=1;i<=UART_DELIMITER_SIZE;i++)
 573              		.loc 1 303 42 discriminator 2
 574 0044 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 575 0046 0133     		adds	r3, r3, #1
 576 0048 FB75     		strb	r3, [r7, #23]
 577              	.L28:
 303:./uart/uart.c **** 	for(uint8_t i=1;i<=UART_DELIMITER_SIZE;i++)
 578              		.loc 1 303 2 discriminator 1
 579 004a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 580 004c 042B     		cmp	r3, #4
 581 004e E6D9     		bls	.L30
 582              	.LBE4:
 306:./uart/uart.c ****  return 1;	
 583              		.loc 1 306 9
 584 0050 0123     		movs	r3, #1
 585              	.L27:
 307:./uart/uart.c **** }
 586              		.loc 1 307 1
 587 0052 1846     		mov	r0, r3
 588 0054 1C37     		adds	r7, r7, #28
 589              	.LCFI36:
 590              		.cfi_def_cfa_offset 4
 591 0056 BD46     		mov	sp, r7
 592              	.LCFI37:
 593              		.cfi_def_cfa_register 13
 594              		@ sp needed
 595 0058 80BC     		pop	{r7}
 596              	.LCFI38:
 597              		.cfi_restore 7
 598              		.cfi_def_cfa_offset 0
 599 005a 7047     		bx	lr
 600              		.cfi_endproc
 601              	.LFE39:
 603              		.section	.text.uart_receive_start,"ax",%progbits
 604              		.align	1
 605              		.global	uart_receive_start
 606              		.syntax unified
 607              		.thumb
 608              		.thumb_func
 610              	uart_receive_start:
 611              	.LFB40:
 308:./uart/uart.c **** //-------------------------------------------------------------------------------------------------
 309:./uart/uart.c **** 
 310:./uart/uart.c **** //*************************************************************************************************
 311:./uart/uart.c **** //
 312:./uart/uart.c **** //  global functions' definitions
 313:./uart/uart.c **** //
 314:./uart/uart.c **** //*************************************************************************************************
 315:./uart/uart.c **** /**
 316:./uart/uart.c ****  * @brief puts the uart in the receive mode
 317:./uart/uart.c ****  * @details initializes the uart to operate in the receive mode
 318:./uart/uart.c ****  * 			and resets the receive buffer
 319:./uart/uart.c ****  * @return void 
 320:./uart/uart.c ****  */
 321:./uart/uart.c **** void uart_receive_start(void)
 322:./uart/uart.c **** {
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\cc7HEfWI.s 			page 17


 612              		.loc 1 322 1
 613              		.cfi_startproc
 614              		@ args = 0, pretend = 0, frame = 0
 615              		@ frame_needed = 1, uses_anonymous_args = 0
 616 0000 80B5     		push	{r7, lr}
 617              	.LCFI39:
 618              		.cfi_def_cfa_offset 8
 619              		.cfi_offset 7, -8
 620              		.cfi_offset 14, -4
 621 0002 00AF     		add	r7, sp, #0
 622              	.LCFI40:
 623              		.cfi_def_cfa_register 7
 323:./uart/uart.c ****  // define the data direction of tx,rx pins
 324:./uart/uart.c ****  /*  uart_CNTA_DIR.tx=1;   // set as output pin        //sbit(DDRD,PD1) DDRD |=(1<<PD1)
 325:./uart/uart.c ****    uart_CNTA_DIR.rx=0;   // set as an input pin      //sbit(DDRD,PD0) DDRD &=~(1<<PD1)
 326:./uart/uart.c ****    uart_CNTA_PORT.tx=1;  // set to High State        //sbit(PORT,PD1) PORTD|=(1<<PD1)
 327:./uart/uart.c ****    uart_CNTA_PORT.rx=1;  // Enable Weak up resistor  //sbit(PORT,PD0) PORTD|=(1<<PD1)
 328:./uart/uart.c **** 
 329:./uart/uart.c ****    //UCSR0A=0x00;
 330:./uart/uart.c ****    uart_status_reg.val=0;
 331:./uart/uart.c **** 
 332:./uart/uart.c ****   //UCSR0B=(1<<RXEN0)|(1<<RXCIE0);
 333:./uart/uart.c ****    uart_control_reg.val=0;
 334:./uart/uart.c ****    uart_control_reg.rx_enable=1;
 335:./uart/uart.c ****    uart_control_reg.receive_complete_ie=1;
 336:./uart/uart.c ****    */
 337:./uart/uart.c ****    //reset the uart buffer
 338:./uart/uart.c ****     uart_reset();	  
 624              		.loc 1 338 5
 625 0004 FFF7FEFF 		bl	uart_reset
 339:./uart/uart.c **** }
 626              		.loc 1 339 1
 627 0008 00BF     		nop
 628 000a 80BD     		pop	{r7, pc}
 629              		.cfi_endproc
 630              	.LFE40:
 632              		.section	.text.uart_receive_stop,"ax",%progbits
 633              		.align	1
 634              		.global	uart_receive_stop
 635              		.syntax unified
 636              		.thumb
 637              		.thumb_func
 639              	uart_receive_stop:
 640              	.LFB41:
 340:./uart/uart.c **** //-------------------------------------------------------------------------------------------------
 341:./uart/uart.c **** /**
 342:./uart/uart.c ****  * @brief stop the current receiving message  
 343:./uart/uart.c ****  * @details stop the current receive operation and resets the 
 344:./uart/uart.c ****  * 			the receive module of the uart
 345:./uart/uart.c ****  */
 346:./uart/uart.c **** void uart_receive_stop(void)
 347:./uart/uart.c **** {
 641              		.loc 1 347 1
 642              		.cfi_startproc
 643              		@ args = 0, pretend = 0, frame = 0
 644              		@ frame_needed = 1, uses_anonymous_args = 0
 645 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\cc7HEfWI.s 			page 18


 646              	.LCFI41:
 647              		.cfi_def_cfa_offset 8
 648              		.cfi_offset 7, -8
 649              		.cfi_offset 14, -4
 650 0002 00AF     		add	r7, sp, #0
 651              	.LCFI42:
 652              		.cfi_def_cfa_register 7
 348:./uart/uart.c **** // Stop listening. 
 349:./uart/uart.c ****   //uart_status_reg.val=0;  //UCSR0A=0x00;
 350:./uart/uart.c ****   //uart_control_reg.val=0; //UCSR0B=0x00;
 351:./uart/uart.c **** 
 352:./uart/uart.c ****    //reset the uart buffer
 353:./uart/uart.c ****    uart_reset();	 
 653              		.loc 1 353 4
 654 0004 FFF7FEFF 		bl	uart_reset
 354:./uart/uart.c **** }
 655              		.loc 1 354 1
 656 0008 00BF     		nop
 657 000a 80BD     		pop	{r7, pc}
 658              		.cfi_endproc
 659              	.LFE41:
 661              		.section	.text.uart_islistening,"ax",%progbits
 662              		.align	1
 663              		.global	uart_islistening
 664              		.syntax unified
 665              		.thumb
 666              		.thumb_func
 668              	uart_islistening:
 669              	.LFB42:
 355:./uart/uart.c **** //-------------------------------------------------------------------------------------------------
 356:./uart/uart.c **** /**
 357:./uart/uart.c ****  * @brief  checks if the uart in the receive mode and listens
 358:./uart/uart.c ****  * 
 359:./uart/uart.c ****  * @details checks if the uart in the receive mode and the 
 360:./uart/uart.c ****  * 			receive complete interrupt mask bit has been activated
 361:./uart/uart.c ****  * @return uint8_t 
 362:./uart/uart.c ****  */
 363:./uart/uart.c **** uint8_t uart_islistening()
 364:./uart/uart.c **** { 	
 670              		.loc 1 364 1
 671              		.cfi_startproc
 672              		@ args = 0, pretend = 0, frame = 0
 673              		@ frame_needed = 1, uses_anonymous_args = 0
 674              		@ link register save eliminated.
 675 0000 80B4     		push	{r7}
 676              	.LCFI43:
 677              		.cfi_def_cfa_offset 4
 678              		.cfi_offset 7, -4
 679 0002 00AF     		add	r7, sp, #0
 680              	.LCFI44:
 681              		.cfi_def_cfa_register 7
 365:./uart/uart.c ****  //if(bit_is_set(UCSR0B,RXEN0) && bit_is_set(UCSR0B,RXCIE0))	
 366:./uart/uart.c **** // if (uart_control_reg.rx_enable && uart_control_reg.receive_complete_ie)
 367:./uart/uart.c **** //	 return 1;
 368:./uart/uart.c ****  return 0;
 682              		.loc 1 368 9
 683 0004 0023     		movs	r3, #0
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\cc7HEfWI.s 			page 19


 369:./uart/uart.c **** }
 684              		.loc 1 369 1
 685 0006 1846     		mov	r0, r3
 686 0008 BD46     		mov	sp, r7
 687              	.LCFI45:
 688              		.cfi_def_cfa_register 13
 689              		@ sp needed
 690 000a 80BC     		pop	{r7}
 691              	.LCFI46:
 692              		.cfi_restore 7
 693              		.cfi_def_cfa_offset 0
 694 000c 7047     		bx	lr
 695              		.cfi_endproc
 696              	.LFE42:
 698              		.section	.text.uart_send_byte,"ax",%progbits
 699              		.align	1
 700              		.global	uart_send_byte
 701              		.syntax unified
 702              		.thumb
 703              		.thumb_func
 705              	uart_send_byte:
 706              	.LFB43:
 370:./uart/uart.c **** //-------------------------------------------------------------------------------------------------
 371:./uart/uart.c **** /**
 372:./uart/uart.c ****  * @brief sends one byte on the  uart
 373:./uart/uart.c ****  * 
 374:./uart/uart.c ****  * @details it first change the uart mode to work in the transmist mode 
 375:./uart/uart.c ****  * 			then sends the byte by first configure the TX IO pin , then write to the 
 376:./uart/uart.c ****  * 			uart data register. finally returns the module to the receive mode to avoid 
 377:./uart/uart.c ****  * 			losing any received data on the  RX Input pin
 378:./uart/uart.c ****  * @param byte 
 379:./uart/uart.c ****  * @return uint8_t 
 380:./uart/uart.c ****  */
 381:./uart/uart.c **** uint8_t uart_send_byte(USART_TypeDef * usartx, uint8_t byte)
 382:./uart/uart.c **** {
 707              		.loc 1 382 1
 708              		.cfi_startproc
 709              		@ args = 0, pretend = 0, frame = 8
 710              		@ frame_needed = 1, uses_anonymous_args = 0
 711 0000 80B5     		push	{r7, lr}
 712              	.LCFI47:
 713              		.cfi_def_cfa_offset 8
 714              		.cfi_offset 7, -8
 715              		.cfi_offset 14, -4
 716 0002 82B0     		sub	sp, sp, #8
 717              	.LCFI48:
 718              		.cfi_def_cfa_offset 16
 719 0004 00AF     		add	r7, sp, #0
 720              	.LCFI49:
 721              		.cfi_def_cfa_register 7
 722 0006 7860     		str	r0, [r7, #4]
 723 0008 0B46     		mov	r3, r1
 724 000a FB70     		strb	r3, [r7, #3]
 383:./uart/uart.c **** 	// send payload
 384:./uart/uart.c **** 	uart_reg_write_byte(usartx,byte);		
 725              		.loc 1 384 2
 726 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\cc7HEfWI.s 			page 20


 727 000e 1946     		mov	r1, r3
 728 0010 7868     		ldr	r0, [r7, #4]
 729 0012 FFF7FEFF 		bl	uart_reg_write_byte
 385:./uart/uart.c **** 	return 1;
 730              		.loc 1 385 9
 731 0016 0123     		movs	r3, #1
 386:./uart/uart.c **** }
 732              		.loc 1 386 1
 733 0018 1846     		mov	r0, r3
 734 001a 0837     		adds	r7, r7, #8
 735              	.LCFI50:
 736              		.cfi_def_cfa_offset 8
 737 001c BD46     		mov	sp, r7
 738              	.LCFI51:
 739              		.cfi_def_cfa_register 13
 740              		@ sp needed
 741 001e 80BD     		pop	{r7, pc}
 742              		.cfi_endproc
 743              	.LFE43:
 745              		.section	.text.uart_send_buffer,"ax",%progbits
 746              		.align	1
 747              		.global	uart_send_buffer
 748              		.syntax unified
 749              		.thumb
 750              		.thumb_func
 752              	uart_send_buffer:
 753              	.LFB44:
 387:./uart/uart.c **** //-------------------------------------------------------------------------------------------------
 388:./uart/uart.c **** /**
 389:./uart/uart.c ****  * @brief sends an array of bytes on the uart
 390:./uart/uart.c ****  * 
 391:./uart/uart.c ****  * @details it is an extension to uart_send_byte, hence it sends an array of data bytes 
 392:./uart/uart.c ****  * 			on the uart
 393:./uart/uart.c ****  * 
 394:./uart/uart.c ****  * @param buf 			a pointer to array of bytes 
 395:./uart/uart.c ****  * @param buf_size 		the length of data array/buffer
 396:./uart/uart.c ****  */
 397:./uart/uart.c **** void uart_send_buffer(USART_TypeDef * usartx ,uint8_t * buf,uint16_t buf_size)
 398:./uart/uart.c **** {
 754              		.loc 1 398 1
 755              		.cfi_startproc
 756              		@ args = 0, pretend = 0, frame = 16
 757              		@ frame_needed = 1, uses_anonymous_args = 0
 758 0000 80B5     		push	{r7, lr}
 759              	.LCFI52:
 760              		.cfi_def_cfa_offset 8
 761              		.cfi_offset 7, -8
 762              		.cfi_offset 14, -4
 763 0002 84B0     		sub	sp, sp, #16
 764              	.LCFI53:
 765              		.cfi_def_cfa_offset 24
 766 0004 00AF     		add	r7, sp, #0
 767              	.LCFI54:
 768              		.cfi_def_cfa_register 7
 769 0006 F860     		str	r0, [r7, #12]
 770 0008 B960     		str	r1, [r7, #8]
 771 000a 1346     		mov	r3, r2
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\cc7HEfWI.s 			page 21


 772 000c FB80     		strh	r3, [r7, #6]	@ movhi
 399:./uart/uart.c **** 	
 400:./uart/uart.c **** 	// send payload
 401:./uart/uart.c **** 	uart_reg_write_buffer(usartx,buf,buf_size);
 773              		.loc 1 401 2
 774 000e FB88     		ldrh	r3, [r7, #6]
 775 0010 1A46     		mov	r2, r3
 776 0012 B968     		ldr	r1, [r7, #8]
 777 0014 F868     		ldr	r0, [r7, #12]
 778 0016 FFF7FEFF 		bl	uart_reg_write_buffer
 402:./uart/uart.c **** 	
 403:./uart/uart.c **** }
 779              		.loc 1 403 1
 780 001a 00BF     		nop
 781 001c 1037     		adds	r7, r7, #16
 782              	.LCFI55:
 783              		.cfi_def_cfa_offset 8
 784 001e BD46     		mov	sp, r7
 785              	.LCFI56:
 786              		.cfi_def_cfa_register 13
 787              		@ sp needed
 788 0020 80BD     		pop	{r7, pc}
 789              		.cfi_endproc
 790              	.LFE44:
 792              		.section	.text.uart_send_message,"ax",%progbits
 793              		.align	1
 794              		.global	uart_send_message
 795              		.syntax unified
 796              		.thumb
 797              		.thumb_func
 799              	uart_send_message:
 800              	.LFB45:
 404:./uart/uart.c **** //-------------------------------------------------------------------------------------------------
 405:./uart/uart.c **** /**
 406:./uart/uart.c ****  * @brief sends a message on the uart
 407:./uart/uart.c ****  * 
 408:./uart/uart.c ****  * @details it is an extension to uart_send_buffer, 
 409:./uart/uart.c ****  * 			hence, it may builds a header or a delimiter to the information data portion  
 410:./uart/uart.c ****  * 			on the uart
 411:./uart/uart.c ****  * 
 412:./uart/uart.c ****  * @param buf 			a pointer to data array of bytes 
 413:./uart/uart.c ****  * @param buf_size 		the length of data array/buffer
 414:./uart/uart.c ****  */
 415:./uart/uart.c **** void uart_send_message(USART_TypeDef * usartx ,uint8_t * buff,uint16_t length)
 416:./uart/uart.c **** {
 801              		.loc 1 416 1
 802              		.cfi_startproc
 803              		@ args = 0, pretend = 0, frame = 16
 804              		@ frame_needed = 1, uses_anonymous_args = 0
 805 0000 80B5     		push	{r7, lr}
 806              	.LCFI57:
 807              		.cfi_def_cfa_offset 8
 808              		.cfi_offset 7, -8
 809              		.cfi_offset 14, -4
 810 0002 84B0     		sub	sp, sp, #16
 811              	.LCFI58:
 812              		.cfi_def_cfa_offset 24
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\cc7HEfWI.s 			page 22


 813 0004 00AF     		add	r7, sp, #0
 814              	.LCFI59:
 815              		.cfi_def_cfa_register 7
 816 0006 F860     		str	r0, [r7, #12]
 817 0008 B960     		str	r1, [r7, #8]
 818 000a 1346     		mov	r3, r2
 819 000c FB80     		strh	r3, [r7, #6]	@ movhi
 417:./uart/uart.c **** // Send header - a start of the message : 
 418:./uart/uart.c ****  
 419:./uart/uart.c ****  // send payload
 420:./uart/uart.c ****  uart_send_buffer(usartx,buff,length);
 820              		.loc 1 420 2
 821 000e FB88     		ldrh	r3, [r7, #6]
 822 0010 1A46     		mov	r2, r3
 823 0012 B968     		ldr	r1, [r7, #8]
 824 0014 F868     		ldr	r0, [r7, #12]
 825 0016 FFF7FEFF 		bl	uart_send_buffer
 421:./uart/uart.c ****  
 422:./uart/uart.c ****  // Send delimiter- a end of the message :
 423:./uart/uart.c ****    
 424:./uart/uart.c **** }
 826              		.loc 1 424 1
 827 001a 00BF     		nop
 828 001c 1037     		adds	r7, r7, #16
 829              	.LCFI60:
 830              		.cfi_def_cfa_offset 8
 831 001e BD46     		mov	sp, r7
 832              	.LCFI61:
 833              		.cfi_def_cfa_register 13
 834              		@ sp needed
 835 0020 80BD     		pop	{r7, pc}
 836              		.cfi_endproc
 837              	.LFE45:
 839              		.section	.text.uart_print,"ax",%progbits
 840              		.align	1
 841              		.global	uart_print
 842              		.syntax unified
 843              		.thumb
 844              		.thumb_func
 846              	uart_print:
 847              	.LFB46:
 425:./uart/uart.c **** //-------------------------------------------------------------------------------------------------
 426:./uart/uart.c **** /**
 427:./uart/uart.c ****  * @brief a generic print  message on the uart
 428:./uart/uart.c ****  * 
 429:./uart/uart.c ****  * @details similar to uart_send_buffer, except it handles characters as an ASCII data
 430:./uart/uart.c ****  * 
 431:./uart/uart.c ****  * @param str 	a pointer to character string 
 432:./uart/uart.c ****  */
 433:./uart/uart.c **** void uart_print(USART_TypeDef * usartx ,char * str)
 434:./uart/uart.c **** {
 848              		.loc 1 434 1
 849              		.cfi_startproc
 850              		@ args = 0, pretend = 0, frame = 8
 851              		@ frame_needed = 1, uses_anonymous_args = 0
 852 0000 80B5     		push	{r7, lr}
 853              	.LCFI62:
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\cc7HEfWI.s 			page 23


 854              		.cfi_def_cfa_offset 8
 855              		.cfi_offset 7, -8
 856              		.cfi_offset 14, -4
 857 0002 82B0     		sub	sp, sp, #8
 858              	.LCFI63:
 859              		.cfi_def_cfa_offset 16
 860 0004 00AF     		add	r7, sp, #0
 861              	.LCFI64:
 862              		.cfi_def_cfa_register 7
 863 0006 7860     		str	r0, [r7, #4]
 864 0008 3960     		str	r1, [r7]
 435:./uart/uart.c ****  	uart_send_buffer(usartx ,(uint8_t*)str,strlen(str));
 865              		.loc 1 435 42
 866 000a 3868     		ldr	r0, [r7]
 867 000c FFF7FEFF 		bl	strlen
 868 0010 0346     		mov	r3, r0
 869              		.loc 1 435 3
 870 0012 9BB2     		uxth	r3, r3
 871 0014 1A46     		mov	r2, r3
 872 0016 3968     		ldr	r1, [r7]
 873 0018 7868     		ldr	r0, [r7, #4]
 874 001a FFF7FEFF 		bl	uart_send_buffer
 436:./uart/uart.c **** }
 875              		.loc 1 436 1
 876 001e 00BF     		nop
 877 0020 0837     		adds	r7, r7, #8
 878              	.LCFI65:
 879              		.cfi_def_cfa_offset 8
 880 0022 BD46     		mov	sp, r7
 881              	.LCFI66:
 882              		.cfi_def_cfa_register 13
 883              		@ sp needed
 884 0024 80BD     		pop	{r7, pc}
 885              		.cfi_endproc
 886              	.LFE46:
 888              		.section	.text.uart_println,"ax",%progbits
 889              		.align	1
 890              		.global	uart_println
 891              		.syntax unified
 892              		.thumb
 893              		.thumb_func
 895              	uart_println:
 896              	.LFB47:
 437:./uart/uart.c **** //-------------------------------------------------------------------------------------------------
 438:./uart/uart.c **** /**
 439:./uart/uart.c ****  * @brief a generic println  message on the uart
 440:./uart/uart.c ****  * 
 441:./uart/uart.c ****  * @details similar to uart_send_buffer, except it handles characters as an ASCII
 442:./uart/uart.c ****  * 			data with \newline \r
 443:./uart/uart.c ****  * 
 444:./uart/uart.c ****  * @param str 	a pointer to character string 
 445:./uart/uart.c ****  */
 446:./uart/uart.c **** void uart_println(USART_TypeDef * usartx ,char * str)
 447:./uart/uart.c **** {
 897              		.loc 1 447 1
 898              		.cfi_startproc
 899              		@ args = 0, pretend = 0, frame = 8
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\cc7HEfWI.s 			page 24


 900              		@ frame_needed = 1, uses_anonymous_args = 0
 901 0000 80B5     		push	{r7, lr}
 902              	.LCFI67:
 903              		.cfi_def_cfa_offset 8
 904              		.cfi_offset 7, -8
 905              		.cfi_offset 14, -4
 906 0002 82B0     		sub	sp, sp, #8
 907              	.LCFI68:
 908              		.cfi_def_cfa_offset 16
 909 0004 00AF     		add	r7, sp, #0
 910              	.LCFI69:
 911              		.cfi_def_cfa_register 7
 912 0006 7860     		str	r0, [r7, #4]
 913 0008 3960     		str	r1, [r7]
 448:./uart/uart.c ****  	uart_send_buffer(usartx ,(uint8_t*)str,strlen(str));
 914              		.loc 1 448 42
 915 000a 3868     		ldr	r0, [r7]
 916 000c FFF7FEFF 		bl	strlen
 917 0010 0346     		mov	r3, r0
 918              		.loc 1 448 3
 919 0012 9BB2     		uxth	r3, r3
 920 0014 1A46     		mov	r2, r3
 921 0016 3968     		ldr	r1, [r7]
 922 0018 7868     		ldr	r0, [r7, #4]
 923 001a FFF7FEFF 		bl	uart_send_buffer
 449:./uart/uart.c **** 	uart_send_byte(usartx,'\r');
 924              		.loc 1 449 2
 925 001e 0D21     		movs	r1, #13
 926 0020 7868     		ldr	r0, [r7, #4]
 927 0022 FFF7FEFF 		bl	uart_send_byte
 450:./uart/uart.c **** 	uart_send_byte(usartx,'\n');
 928              		.loc 1 450 2
 929 0026 0A21     		movs	r1, #10
 930 0028 7868     		ldr	r0, [r7, #4]
 931 002a FFF7FEFF 		bl	uart_send_byte
 451:./uart/uart.c **** }
 932              		.loc 1 451 1
 933 002e 00BF     		nop
 934 0030 0837     		adds	r7, r7, #8
 935              	.LCFI70:
 936              		.cfi_def_cfa_offset 8
 937 0032 BD46     		mov	sp, r7
 938              	.LCFI71:
 939              		.cfi_def_cfa_register 13
 940              		@ sp needed
 941 0034 80BD     		pop	{r7, pc}
 942              		.cfi_endproc
 943              	.LFE47:
 945              		.section	.rodata
 946              		.align	2
 947              	.LC0:
 948 0000 307800   		.ascii	"0x\000"
 949 0003 00       		.align	2
 950              	.LC1:
 951 0004 306200   		.ascii	"0b\000"
 952 0007 00       		.align	2
 953              	.LC2:
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\cc7HEfWI.s 			page 25


 954 0008 2000     		.ascii	" \000"
 955              		.section	.text.uart_print_integer,"ax",%progbits
 956              		.align	1
 957              		.global	uart_print_integer
 958              		.syntax unified
 959              		.thumb
 960              		.thumb_func
 962              	uart_print_integer:
 963              	.LFB48:
 452:./uart/uart.c **** //-------------------------------------------------------------------------------------------------
 453:./uart/uart.c **** /**
 454:./uart/uart.c ****  * @brief 
 455:./uart/uart.c ****  * 
 456:./uart/uart.c ****  * @param usartx 
 457:./uart/uart.c ****  * @param dword 
 458:./uart/uart.c ****  */
 459:./uart/uart.c **** void uart_print_integer(USART_TypeDef * usartx ,uint32_t dword,uint8_t base)
 460:./uart/uart.c **** {
 964              		.loc 1 460 1
 965              		.cfi_startproc
 966              		@ args = 0, pretend = 0, frame = 32
 967              		@ frame_needed = 1, uses_anonymous_args = 0
 968 0000 80B5     		push	{r7, lr}
 969              	.LCFI72:
 970              		.cfi_def_cfa_offset 8
 971              		.cfi_offset 7, -8
 972              		.cfi_offset 14, -4
 973 0002 88B0     		sub	sp, sp, #32
 974              	.LCFI73:
 975              		.cfi_def_cfa_offset 40
 976 0004 00AF     		add	r7, sp, #0
 977              	.LCFI74:
 978              		.cfi_def_cfa_register 7
 979 0006 F860     		str	r0, [r7, #12]
 980 0008 B960     		str	r1, [r7, #8]
 981 000a 1346     		mov	r3, r2
 982 000c FB71     		strb	r3, [r7, #7]
 461:./uart/uart.c ****   	char buf[16]="";
 983              		.loc 1 461 9
 984 000e 0023     		movs	r3, #0
 985 0010 3B61     		str	r3, [r7, #16]
 986 0012 07F11403 		add	r3, r7, #20
 987 0016 0022     		movs	r2, #0
 988 0018 1A60     		str	r2, [r3]
 989 001a 5A60     		str	r2, [r3, #4]
 990 001c 9A60     		str	r2, [r3, #8]
 462:./uart/uart.c **** 	switch(base)
 991              		.loc 1 462 2
 992 001e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 993 0020 022B     		cmp	r3, #2
 994 0022 06D0     		beq	.L42
 995 0024 102B     		cmp	r3, #16
 996 0026 09D1     		bne	.L43
 463:./uart/uart.c **** 	{
 464:./uart/uart.c **** 	  case 16:	uart_print(usartx,"0x"); break;
 997              		.loc 1 464 13
 998 0028 0F49     		ldr	r1, .L45
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\cc7HEfWI.s 			page 26


 999 002a F868     		ldr	r0, [r7, #12]
 1000 002c FFF7FEFF 		bl	uart_print
 1001              		.loc 1 464 4
 1002 0030 09E0     		b	.L44
 1003              	.L42:
 465:./uart/uart.c **** 	  case 2:   uart_print(usartx,"0b"); break;
 1004              		.loc 1 465 14
 1005 0032 0E49     		ldr	r1, .L45+4
 1006 0034 F868     		ldr	r0, [r7, #12]
 1007 0036 FFF7FEFF 		bl	uart_print
 1008              		.loc 1 465 4
 1009 003a 04E0     		b	.L44
 1010              	.L43:
 466:./uart/uart.c **** 	  default:  uart_print(usartx," ");  break;
 1011              		.loc 1 466 14
 1012 003c 0C49     		ldr	r1, .L45+8
 1013 003e F868     		ldr	r0, [r7, #12]
 1014 0040 FFF7FEFF 		bl	uart_print
 1015              		.loc 1 466 4
 1016 0044 00BF     		nop
 1017              	.L44:
 467:./uart/uart.c **** 	}
 468:./uart/uart.c **** 	
 469:./uart/uart.c ****     itoa(dword,buf,base);
 1018              		.loc 1 469 5
 1019 0046 BB68     		ldr	r3, [r7, #8]
 1020 0048 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1021 004a 07F11001 		add	r1, r7, #16
 1022 004e 1846     		mov	r0, r3
 1023 0050 FFF7FEFF 		bl	itoa
 470:./uart/uart.c ****     uart_print(usartx,buf);	   
 1024              		.loc 1 470 5
 1025 0054 07F11003 		add	r3, r7, #16
 1026 0058 1946     		mov	r1, r3
 1027 005a F868     		ldr	r0, [r7, #12]
 1028 005c FFF7FEFF 		bl	uart_print
 471:./uart/uart.c **** }
 1029              		.loc 1 471 1
 1030 0060 00BF     		nop
 1031 0062 2037     		adds	r7, r7, #32
 1032              	.LCFI75:
 1033              		.cfi_def_cfa_offset 8
 1034 0064 BD46     		mov	sp, r7
 1035              	.LCFI76:
 1036              		.cfi_def_cfa_register 13
 1037              		@ sp needed
 1038 0066 80BD     		pop	{r7, pc}
 1039              	.L46:
 1040              		.align	2
 1041              	.L45:
 1042 0068 00000000 		.word	.LC0
 1043 006c 04000000 		.word	.LC1
 1044 0070 08000000 		.word	.LC2
 1045              		.cfi_endproc
 1046              	.LFE48:
 1048              		.section	.rodata
 1049 000a 0000     		.align	2
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\cc7HEfWI.s 			page 27


 1050              	.LC3:
 1051 000c 2D00     		.ascii	"-\000"
 1052 000e 0000     		.align	2
 1053              	.LC4:
 1054 0010 2E00     		.ascii	".\000"
 1055              		.section	.text.uart_print_float,"ax",%progbits
 1056              		.align	1
 1057              		.global	uart_print_float
 1058              		.syntax unified
 1059              		.thumb
 1060              		.thumb_func
 1062              	uart_print_float:
 1063              	.LFB49:
 472:./uart/uart.c **** //-------------------------------------------------------------------------------------------------
 473:./uart/uart.c **** void uart_print_float(USART_TypeDef * usartx ,float val,uint8_t digits)
 474:./uart/uart.c **** {
 1064              		.loc 1 474 1
 1065              		.cfi_startproc
 1066              		@ args = 0, pretend = 0, frame = 40
 1067              		@ frame_needed = 1, uses_anonymous_args = 0
 1068 0000 80B5     		push	{r7, lr}
 1069              	.LCFI77:
 1070              		.cfi_def_cfa_offset 8
 1071              		.cfi_offset 7, -8
 1072              		.cfi_offset 14, -4
 1073 0002 8AB0     		sub	sp, sp, #40
 1074              	.LCFI78:
 1075              		.cfi_def_cfa_offset 48
 1076 0004 00AF     		add	r7, sp, #0
 1077              	.LCFI79:
 1078              		.cfi_def_cfa_register 7
 1079 0006 F860     		str	r0, [r7, #12]
 1080 0008 B960     		str	r1, [r7, #8]	@ float
 1081 000a 1346     		mov	r3, r2
 1082 000c FB71     		strb	r3, [r7, #7]
 475:./uart/uart.c **** char buf[16]="";
 1083              		.loc 1 475 6
 1084 000e 0023     		movs	r3, #0
 1085 0010 BB61     		str	r3, [r7, #24]
 1086 0012 07F11C03 		add	r3, r7, #28
 1087 0016 0022     		movs	r2, #0
 1088 0018 1A60     		str	r2, [r3]
 1089 001a 5A60     		str	r2, [r3, #4]
 1090 001c 9A60     		str	r2, [r3, #8]
 476:./uart/uart.c **** 	real_t r;
 477:./uart/uart.c **** 	r=float_to_real(val,digits);
 1091              		.loc 1 477 4
 1092 001e 07F11003 		add	r3, r7, #16
 1093 0022 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1094 0024 B968     		ldr	r1, [r7, #8]	@ float
 1095 0026 1846     		mov	r0, r3
 1096 0028 FFF7FEFF 		bl	float_to_real
 478:./uart/uart.c **** 	if(r.sig==1)
 1097              		.loc 1 478 6
 1098 002c 3B7D     		ldrb	r3, [r7, #20]	@ zero_extendqisi2
 1099              		.loc 1 478 4
 1100 002e 012B     		cmp	r3, #1
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\cc7HEfWI.s 			page 28


 1101 0030 03D1     		bne	.L48
 479:./uart/uart.c **** 	uart_print(usartx,"-");
 1102              		.loc 1 479 2
 1103 0032 1449     		ldr	r1, .L49
 1104 0034 F868     		ldr	r0, [r7, #12]
 1105 0036 FFF7FEFF 		bl	uart_print
 1106              	.L48:
 480:./uart/uart.c ****     itoa(r.integer,buf,10);
 1107              		.loc 1 480 11
 1108 003a 7B8A     		ldrh	r3, [r7, #18]
 1109              		.loc 1 480 5
 1110 003c 1846     		mov	r0, r3
 1111 003e 07F11803 		add	r3, r7, #24
 1112 0042 0A22     		movs	r2, #10
 1113 0044 1946     		mov	r1, r3
 1114 0046 FFF7FEFF 		bl	itoa
 481:./uart/uart.c ****     uart_print(usartx,buf);
 1115              		.loc 1 481 5
 1116 004a 07F11803 		add	r3, r7, #24
 1117 004e 1946     		mov	r1, r3
 1118 0050 F868     		ldr	r0, [r7, #12]
 1119 0052 FFF7FEFF 		bl	uart_print
 482:./uart/uart.c **** 		uart_print(usartx,".");	  
 1120              		.loc 1 482 3
 1121 0056 0C49     		ldr	r1, .L49+4
 1122 0058 F868     		ldr	r0, [r7, #12]
 1123 005a FFF7FEFF 		bl	uart_print
 483:./uart/uart.c ****     itoa(r.decimal,buf,10);
 1124              		.loc 1 483 11
 1125 005e 3B7C     		ldrb	r3, [r7, #16]	@ zero_extendqisi2
 1126              		.loc 1 483 5
 1127 0060 1846     		mov	r0, r3
 1128 0062 07F11803 		add	r3, r7, #24
 1129 0066 0A22     		movs	r2, #10
 1130 0068 1946     		mov	r1, r3
 1131 006a FFF7FEFF 		bl	itoa
 484:./uart/uart.c ****     uart_print(usartx,buf);
 1132              		.loc 1 484 5
 1133 006e 07F11803 		add	r3, r7, #24
 1134 0072 1946     		mov	r1, r3
 1135 0074 F868     		ldr	r0, [r7, #12]
 1136 0076 FFF7FEFF 		bl	uart_print
 485:./uart/uart.c **** }
 1137              		.loc 1 485 1
 1138 007a 00BF     		nop
 1139 007c 2837     		adds	r7, r7, #40
 1140              	.LCFI80:
 1141              		.cfi_def_cfa_offset 8
 1142 007e BD46     		mov	sp, r7
 1143              	.LCFI81:
 1144              		.cfi_def_cfa_register 13
 1145              		@ sp needed
 1146 0080 80BD     		pop	{r7, pc}
 1147              	.L50:
 1148 0082 00BF     		.align	2
 1149              	.L49:
 1150 0084 0C000000 		.word	.LC3
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\cc7HEfWI.s 			page 29


 1151 0088 10000000 		.word	.LC4
 1152              		.cfi_endproc
 1153              	.LFE49:
 1155              		.section	.rodata
 1156 0012 0000     		.align	2
 1157              	.LC5:
 1158 0014 20307800 		.ascii	" 0x\000"
 1159              		.section	.text.uart_print_Array,"ax",%progbits
 1160              		.align	1
 1161              		.global	uart_print_Array
 1162              		.syntax unified
 1163              		.thumb
 1164              		.thumb_func
 1166              	uart_print_Array:
 1167              	.LFB50:
 486:./uart/uart.c **** //-------------------------------------------------------------------------------------------------
 487:./uart/uart.c **** /**
 488:./uart/uart.c ****  * @brief a generic print message on the uart in hexadecimal format
 489:./uart/uart.c ****  
 490:./uart/uart.c ****  * @details similar to uart_send_buffer, except it converrs ASCII data to hexadecimal format
 491:./uart/uart.c ****  * 
 492:./uart/uart.c ****  * @param data 	a pointer to start of message buffer
 493:./uart/uart.c ****  * @param len 	the length of the buffer message
 494:./uart/uart.c ****  */
 495:./uart/uart.c **** void uart_print_Array(USART_TypeDef * usartx ,uint8_t * data,uint8_t len)
 496:./uart/uart.c **** {
 1168              		.loc 1 496 1
 1169              		.cfi_startproc
 1170              		@ args = 0, pretend = 0, frame = 40
 1171              		@ frame_needed = 1, uses_anonymous_args = 0
 1172 0000 80B5     		push	{r7, lr}
 1173              	.LCFI82:
 1174              		.cfi_def_cfa_offset 8
 1175              		.cfi_offset 7, -8
 1176              		.cfi_offset 14, -4
 1177 0002 8AB0     		sub	sp, sp, #40
 1178              	.LCFI83:
 1179              		.cfi_def_cfa_offset 48
 1180 0004 00AF     		add	r7, sp, #0
 1181              	.LCFI84:
 1182              		.cfi_def_cfa_register 7
 1183 0006 F860     		str	r0, [r7, #12]
 1184 0008 B960     		str	r1, [r7, #8]
 1185 000a 1346     		mov	r3, r2
 1186 000c FB71     		strb	r3, [r7, #7]
 497:./uart/uart.c ****  	char buf[16]="";
 1187              		.loc 1 497 8
 1188 000e 0023     		movs	r3, #0
 1189 0010 7B61     		str	r3, [r7, #20]
 1190 0012 07F11803 		add	r3, r7, #24
 1191 0016 0022     		movs	r2, #0
 1192 0018 1A60     		str	r2, [r3]
 1193 001a 5A60     		str	r2, [r3, #4]
 1194 001c 9A60     		str	r2, [r3, #8]
 498:./uart/uart.c **** 	uint8_t val=0;
 1195              		.loc 1 498 10
 1196 001e 0023     		movs	r3, #0
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\cc7HEfWI.s 			page 30


 1197 0020 87F82630 		strb	r3, [r7, #38]
 1198              	.LBB5:
 499:./uart/uart.c ****    for(uint8_t i=0;i<len;i++)
 1199              		.loc 1 499 16
 1200 0024 0023     		movs	r3, #0
 1201 0026 87F82730 		strb	r3, [r7, #39]
 1202              		.loc 1 499 4
 1203 002a 2EE0     		b	.L52
 1204              	.L54:
 500:./uart/uart.c ****    {
 501:./uart/uart.c ****       val=data[i];
 1205              		.loc 1 501 15
 1206 002c 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 1207 0030 BA68     		ldr	r2, [r7, #8]
 1208 0032 1344     		add	r3, r3, r2
 1209              		.loc 1 501 10
 1210 0034 1B78     		ldrb	r3, [r3]
 1211 0036 87F82630 		strb	r3, [r7, #38]
 502:./uart/uart.c ****        uart_print(usartx ," 0x");
 1212              		.loc 1 502 8
 1213 003a 1949     		ldr	r1, .L55
 1214 003c F868     		ldr	r0, [r7, #12]
 1215 003e FFF7FEFF 		bl	uart_print
 503:./uart/uart.c ****        itoa(val,buf,16);
 1216              		.loc 1 503 8
 1217 0042 97F82630 		ldrb	r3, [r7, #38]	@ zero_extendqisi2
 1218 0046 07F11401 		add	r1, r7, #20
 1219 004a 1022     		movs	r2, #16
 1220 004c 1846     		mov	r0, r3
 1221 004e FFF7FEFF 		bl	itoa
 504:./uart/uart.c ****        uart_print(usartx ,buf);	   
 1222              		.loc 1 504 8
 1223 0052 07F11403 		add	r3, r7, #20
 1224 0056 1946     		mov	r1, r3
 1225 0058 F868     		ldr	r0, [r7, #12]
 1226 005a FFF7FEFF 		bl	uart_print
 505:./uart/uart.c **** 	   if (i%5==0)
 1227              		.loc 1 505 12
 1228 005e 97F82720 		ldrb	r2, [r7, #39]	@ zero_extendqisi2
 1229 0062 104B     		ldr	r3, .L55+4
 1230 0064 A3FB0213 		umull	r1, r3, r3, r2
 1231 0068 9908     		lsrs	r1, r3, #2
 1232 006a 0B46     		mov	r3, r1
 1233 006c 9B00     		lsls	r3, r3, #2
 1234 006e 0B44     		add	r3, r3, r1
 1235 0070 D31A     		subs	r3, r2, r3
 1236 0072 DBB2     		uxtb	r3, r3
 1237              		.loc 1 505 8
 1238 0074 002B     		cmp	r3, #0
 1239 0076 03D1     		bne	.L53
 506:./uart/uart.c **** 	    uart_println(usartx," ");
 1240              		.loc 1 506 6
 1241 0078 0B49     		ldr	r1, .L55+8
 1242 007a F868     		ldr	r0, [r7, #12]
 1243 007c FFF7FEFF 		bl	uart_println
 1244              	.L53:
 499:./uart/uart.c ****    {
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\cc7HEfWI.s 			page 31


 1245              		.loc 1 499 27 discriminator 2
 1246 0080 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 1247 0084 0133     		adds	r3, r3, #1
 1248 0086 87F82730 		strb	r3, [r7, #39]
 1249              	.L52:
 499:./uart/uart.c ****    {
 1250              		.loc 1 499 4 discriminator 1
 1251 008a 97F82720 		ldrb	r2, [r7, #39]	@ zero_extendqisi2
 1252 008e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1253 0090 9A42     		cmp	r2, r3
 1254 0092 CBD3     		bcc	.L54
 1255              	.LBE5:
 507:./uart/uart.c ****   }
 508:./uart/uart.c **** }
 1256              		.loc 1 508 1
 1257 0094 00BF     		nop
 1258 0096 00BF     		nop
 1259 0098 2837     		adds	r7, r7, #40
 1260              	.LCFI85:
 1261              		.cfi_def_cfa_offset 8
 1262 009a BD46     		mov	sp, r7
 1263              	.LCFI86:
 1264              		.cfi_def_cfa_register 13
 1265              		@ sp needed
 1266 009c 80BD     		pop	{r7, pc}
 1267              	.L56:
 1268 009e 00BF     		.align	2
 1269              	.L55:
 1270 00a0 14000000 		.word	.LC5
 1271 00a4 CDCCCCCC 		.word	-858993459
 1272 00a8 08000000 		.word	.LC2
 1273              		.cfi_endproc
 1274              	.LFE50:
 1276              		.section	.text.uart_println_Array,"ax",%progbits
 1277              		.align	1
 1278              		.global	uart_println_Array
 1279              		.syntax unified
 1280              		.thumb
 1281              		.thumb_func
 1283              	uart_println_Array:
 1284              	.LFB51:
 509:./uart/uart.c **** //-------------------------------------------------------------------------------------------------
 510:./uart/uart.c **** /**
 511:./uart/uart.c ****  * @brief a generic println message on the uart in hexadecimal format
 512:./uart/uart.c ****  
 513:./uart/uart.c ****  * @details similar to uart_send_buffer, except it converrs ASCII data to hexadecimal format
 514:./uart/uart.c ****  * 
 515:./uart/uart.c ****  * @param data 	a pointer to start of message buffer
 516:./uart/uart.c ****  * @param len 	the length of the buffer message
 517:./uart/uart.c ****  */
 518:./uart/uart.c **** void uart_println_Array(USART_TypeDef * usartx ,uint8_t * data,uint8_t len)
 519:./uart/uart.c **** {
 1285              		.loc 1 519 1
 1286              		.cfi_startproc
 1287              		@ args = 0, pretend = 0, frame = 40
 1288              		@ frame_needed = 1, uses_anonymous_args = 0
 1289 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\cc7HEfWI.s 			page 32


 1290              	.LCFI87:
 1291              		.cfi_def_cfa_offset 8
 1292              		.cfi_offset 7, -8
 1293              		.cfi_offset 14, -4
 1294 0002 8AB0     		sub	sp, sp, #40
 1295              	.LCFI88:
 1296              		.cfi_def_cfa_offset 48
 1297 0004 00AF     		add	r7, sp, #0
 1298              	.LCFI89:
 1299              		.cfi_def_cfa_register 7
 1300 0006 F860     		str	r0, [r7, #12]
 1301 0008 B960     		str	r1, [r7, #8]
 1302 000a 1346     		mov	r3, r2
 1303 000c FB71     		strb	r3, [r7, #7]
 520:./uart/uart.c ****  	char buf[16]="";
 1304              		.loc 1 520 8
 1305 000e 0023     		movs	r3, #0
 1306 0010 7B61     		str	r3, [r7, #20]
 1307 0012 07F11803 		add	r3, r7, #24
 1308 0016 0022     		movs	r2, #0
 1309 0018 1A60     		str	r2, [r3]
 1310 001a 5A60     		str	r2, [r3, #4]
 1311 001c 9A60     		str	r2, [r3, #8]
 521:./uart/uart.c **** 	uint8_t val=0;
 1312              		.loc 1 521 10
 1313 001e 0023     		movs	r3, #0
 1314 0020 87F82630 		strb	r3, [r7, #38]
 1315              	.LBB6:
 522:./uart/uart.c ****    for(uint8_t i=0;i<len;i++)
 1316              		.loc 1 522 16
 1317 0024 0023     		movs	r3, #0
 1318 0026 87F82730 		strb	r3, [r7, #39]
 1319              		.loc 1 522 4
 1320 002a 1DE0     		b	.L58
 1321              	.L59:
 523:./uart/uart.c ****    {
 524:./uart/uart.c ****       val=data[i];
 1322              		.loc 1 524 15 discriminator 3
 1323 002c 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 1324 0030 BA68     		ldr	r2, [r7, #8]
 1325 0032 1344     		add	r3, r3, r2
 1326              		.loc 1 524 10 discriminator 3
 1327 0034 1B78     		ldrb	r3, [r3]
 1328 0036 87F82630 		strb	r3, [r7, #38]
 525:./uart/uart.c ****        uart_print(usartx,"0x");
 1329              		.loc 1 525 8 discriminator 3
 1330 003a 1049     		ldr	r1, .L60
 1331 003c F868     		ldr	r0, [r7, #12]
 1332 003e FFF7FEFF 		bl	uart_print
 526:./uart/uart.c ****        itoa(val,buf,16);
 1333              		.loc 1 526 8 discriminator 3
 1334 0042 97F82630 		ldrb	r3, [r7, #38]	@ zero_extendqisi2
 1335 0046 07F11401 		add	r1, r7, #20
 1336 004a 1022     		movs	r2, #16
 1337 004c 1846     		mov	r0, r3
 1338 004e FFF7FEFF 		bl	itoa
 527:./uart/uart.c ****        uart_println(usartx,buf);	   
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\cc7HEfWI.s 			page 33


 1339              		.loc 1 527 8 discriminator 3
 1340 0052 07F11403 		add	r3, r7, #20
 1341 0056 1946     		mov	r1, r3
 1342 0058 F868     		ldr	r0, [r7, #12]
 1343 005a FFF7FEFF 		bl	uart_println
 522:./uart/uart.c ****    {
 1344              		.loc 1 522 27 discriminator 3
 1345 005e 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 1346 0062 0133     		adds	r3, r3, #1
 1347 0064 87F82730 		strb	r3, [r7, #39]
 1348              	.L58:
 522:./uart/uart.c ****    {
 1349              		.loc 1 522 4 discriminator 1
 1350 0068 97F82720 		ldrb	r2, [r7, #39]	@ zero_extendqisi2
 1351 006c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1352 006e 9A42     		cmp	r2, r3
 1353 0070 DCD3     		bcc	.L59
 1354              	.LBE6:
 528:./uart/uart.c ****   }
 529:./uart/uart.c **** }
 1355              		.loc 1 529 1
 1356 0072 00BF     		nop
 1357 0074 00BF     		nop
 1358 0076 2837     		adds	r7, r7, #40
 1359              	.LCFI90:
 1360              		.cfi_def_cfa_offset 8
 1361 0078 BD46     		mov	sp, r7
 1362              	.LCFI91:
 1363              		.cfi_def_cfa_register 13
 1364              		@ sp needed
 1365 007a 80BD     		pop	{r7, pc}
 1366              	.L61:
 1367              		.align	2
 1368              	.L60:
 1369 007c 00000000 		.word	.LC0
 1370              		.cfi_endproc
 1371              	.LFE51:
 1373              		.section	.text.uart_init,"ax",%progbits
 1374              		.align	1
 1375              		.global	uart_init
 1376              		.syntax unified
 1377              		.thumb
 1378              		.thumb_func
 1380              	uart_init:
 1381              	.LFB52:
 530:./uart/uart.c **** //-------------------------------------------------------------------------------------------------
 531:./uart/uart.c **** /**
 532:./uart/uart.c ****  * @brief 	initializes the uart module
 533:./uart/uart.c ****  * @details initializes the uart module and configure the buad rate 
 534:./uart/uart.c ****  * 			and the message format such as start bit, parity , stop bit
 535:./uart/uart.c ****  * 			and the charactersize , it also resets the receive buffer size 
 536:./uart/uart.c ****  * 			of the uart 
 537:./uart/uart.c ****  * @return void
 538:./uart/uart.c ****  */
 539:./uart/uart.c **** void uart_init()
 540:./uart/uart.c **** {
 1382              		.loc 1 540 1
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\cc7HEfWI.s 			page 34


 1383              		.cfi_startproc
 1384              		@ args = 0, pretend = 0, frame = 0
 1385              		@ frame_needed = 1, uses_anonymous_args = 0
 1386 0000 80B5     		push	{r7, lr}
 1387              	.LCFI92:
 1388              		.cfi_def_cfa_offset 8
 1389              		.cfi_offset 7, -8
 1390              		.cfi_offset 14, -4
 1391 0002 00AF     		add	r7, sp, #0
 1392              	.LCFI93:
 1393              		.cfi_def_cfa_register 7
 541:./uart/uart.c ****   
 542:./uart/uart.c ****   USART1_init();
 1394              		.loc 1 542 3
 1395 0004 FFF7FEFF 		bl	USART1_init
 543:./uart/uart.c **** // pins initialization
 544:./uart/uart.c **** //	uart_CNTA_DIR.tx=1;   // set as output pin
 545:./uart/uart.c **** //	uart_CNTA_DIR.rx=0;   // set as an input pin
 546:./uart/uart.c **** //	uart_CNTA_PORT.tx=1;  // set to High State
 547:./uart/uart.c **** //	uart_CNTA_PORT.rx=1;  // Enable Weak up resistor
 548:./uart/uart.c ****   
 549:./uart/uart.c **** //to change uart configuration such buad rate,data frame length ,stop bits,  parity
 550:./uart/uart.c **** // based on the static options provided at the top of this file 
 551:./uart/uart.c ****  //    uart_configure();
 552:./uart/uart.c **** 
 553:./uart/uart.c ****  // Reset USART buffer
 554:./uart/uart.c ****     uart_reset();
 1396              		.loc 1 554 5
 1397 0008 FFF7FEFF 		bl	uart_reset
 555:./uart/uart.c **** 
 556:./uart/uart.c ****  }
 1398              		.loc 1 556 2
 1399 000c 00BF     		nop
 1400 000e 80BD     		pop	{r7, pc}
 1401              		.cfi_endproc
 1402              	.LFE52:
 1404              		.section	.text.uart_receive,"ax",%progbits
 1405              		.align	1
 1406              		.global	uart_receive
 1407              		.syntax unified
 1408              		.thumb
 1409              		.thumb_func
 1411              	uart_receive:
 1412              	.LFB53:
 557:./uart/uart.c **** //-------------------------------------------------------------------------------------------
 558:./uart/uart.c **** 
 559:./uart/uart.c **** /**
 560:./uart/uart.c ****  * @brief  performs areceive operation of one byte on uart
 561:./uart/uart.c ****  * 
 562:./uart/uart.c ****  * @details receives one byte on uart at the trigger of the receive complete interrupt 
 563:./uart/uart.c ****  * 			and appends this received byte to the receive buffer
 564:./uart/uart.c ****  * 			this method is called in the uart receive complete interrupt service routine
 565:./uart/uart.c ****  
 566:./uart/uart.c ****  * @returns the received byte on the uart rx module
 567:./uart/uart.c ****  * @return uint8_t 
 568:./uart/uart.c ****  */
 569:./uart/uart.c **** uint8_t uart_receive(USART_TypeDef * usartx)
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\cc7HEfWI.s 			page 35


 570:./uart/uart.c **** {
 1413              		.loc 1 570 1
 1414              		.cfi_startproc
 1415              		@ args = 0, pretend = 0, frame = 16
 1416              		@ frame_needed = 1, uses_anonymous_args = 0
 1417 0000 80B5     		push	{r7, lr}
 1418              	.LCFI94:
 1419              		.cfi_def_cfa_offset 8
 1420              		.cfi_offset 7, -8
 1421              		.cfi_offset 14, -4
 1422 0002 84B0     		sub	sp, sp, #16
 1423              	.LCFI95:
 1424              		.cfi_def_cfa_offset 24
 1425 0004 00AF     		add	r7, sp, #0
 1426              	.LCFI96:
 1427              		.cfi_def_cfa_register 7
 1428 0006 7860     		str	r0, [r7, #4]
 571:./uart/uart.c **** 
 572:./uart/uart.c **** 
 573:./uart/uart.c ****   //uint8_t data=0;
 574:./uart/uart.c ****   //uart_status_t status;
 575:./uart/uart.c ****  // read data byte received from the rx buffer as soon as possible
 576:./uart/uart.c ****    //data= uart_data_reg.val;
 577:./uart/uart.c ****   // get the status of the uart
 578:./uart/uart.c ****    //status.val=uart_status_reg.val;
 579:./uart/uart.c ****    //uart_status_reg.val=0;
 580:./uart/uart.c ****   // check no error in the received byte 
 581:./uart/uart.c ****    //if(!status.data_over_run && 
 582:./uart/uart.c **** //	   !status.frame_error   && 
 583:./uart/uart.c **** //	   !status.parity_error)
 584:./uart/uart.c **** 
 585:./uart/uart.c ****     // clear the Interrupt 
 586:./uart/uart.c ****      //USART_ClearITPendingBit(USART1,USART_IT_RXNE);
 587:./uart/uart.c **** 
 588:./uart/uart.c ****       volatile uint8_t data=0;
 1429              		.loc 1 588 24
 1430 0008 0023     		movs	r3, #0
 1431 000a FB73     		strb	r3, [r7, #15]
 589:./uart/uart.c ****       volatile uint16_t status=0;
 1432              		.loc 1 589 25
 1433 000c 0023     		movs	r3, #0
 1434 000e BB81     		strh	r3, [r7, #12]	@ movhi
 590:./uart/uart.c ****       status=usartx->SR;
 1435              		.loc 1 590 20
 1436 0010 7B68     		ldr	r3, [r7, #4]
 1437 0012 1B88     		ldrh	r3, [r3]	@ movhi
 1438 0014 9BB2     		uxth	r3, r3
 1439              		.loc 1 590 13
 1440 0016 BB81     		strh	r3, [r7, #12]	@ movhi
 591:./uart/uart.c ****       // read the received data from the usart receive buffer
 592:./uart/uart.c ****       data=usartx->DR & 0x00ff;    // onlu 8_bit
 1441              		.loc 1 592 18
 1442 0018 7B68     		ldr	r3, [r7, #4]
 1443 001a 9B88     		ldrh	r3, [r3, #4]	@ movhi
 1444 001c 9BB2     		uxth	r3, r3
 1445              		.loc 1 592 11
 1446 001e DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\cc7HEfWI.s 			page 36


 1447 0020 FB73     		strb	r3, [r7, #15]
 593:./uart/uart.c ****     
 594:./uart/uart.c ****      // reset the receive interrupt flag by software optional, reading data  reset IT_RXNE by hardw
 595:./uart/uart.c ****      //RXNE flag can be also cleared by a read to the USART_DR register (USART_ReceiveData()).
 596:./uart/uart.c ****      //USART_GetFlagStatus(USART1,USART_IT_TXE);
 597:./uart/uart.c ****      //USART_ClearITPendingBit(USART1,USART_IT_RXNE);
 598:./uart/uart.c ****         
 599:./uart/uart.c ****      // push it to the receive queue
 600:./uart/uart.c ****     uart_put_char(USART1,data);
 1448              		.loc 1 600 5
 1449 0022 FB7B     		ldrb	r3, [r7, #15]
 1450 0024 DBB2     		uxtb	r3, r3
 1451 0026 1946     		mov	r1, r3
 1452 0028 1148     		ldr	r0, .L67
 1453 002a FFF7FEFF 		bl	uart_put_char
 601:./uart/uart.c ****     if(data==';')
 1454              		.loc 1 601 12
 1455 002e FB7B     		ldrb	r3, [r7, #15]
 1456 0030 DBB2     		uxtb	r3, r3
 1457              		.loc 1 601 7
 1458 0032 3B2B     		cmp	r3, #59
 1459 0034 02D1     		bne	.L64
 602:./uart/uart.c ****         relays.val=0;
 1460              		.loc 1 602 19
 1461 0036 0F4B     		ldr	r3, .L67+4
 1462 0038 0022     		movs	r2, #0
 1463 003a 1A70     		strb	r2, [r3]
 1464              	.L64:
 603:./uart/uart.c **** 
 604:./uart/uart.c ****     if(USART_GetFlagStatus(USART1,USART_FLAG_PE | USART_FLAG_FE | 
 1465              		.loc 1 604 8
 1466 003c 0F21     		movs	r1, #15
 1467 003e 0C48     		ldr	r0, .L67
 1468 0040 FFF7FEFF 		bl	USART_GetFlagStatus
 1469 0044 0346     		mov	r3, r0
 1470              		.loc 1 604 7
 1471 0046 002B     		cmp	r3, #0
 1472 0048 0CD1     		bne	.L65
 605:./uart/uart.c ****                            USART_FLAG_NE | USART_FLAG_ORE)==RESET)
 606:./uart/uart.c ****     {
 607:./uart/uart.c ****       /** 
 608:./uart/uart.c ****        * @arg USART_FLAG_ORE:  OverRun Error flag
 609:./uart/uart.c ****        * @arg USART_FLAG_NE:   Noise Error flag
 610:./uart/uart.c ****        * @arg USART_FLAG_FE:   Framing Error flag
 611:./uart/uart.c ****        * @arg USART_FLAG_PE:   Parity Error flag
 612:./uart/uart.c ****        * 
 613:./uart/uart.c ****        *  PE  (Parity error) , FE (Framing error), NE (Noise error),  
 614:./uart/uart.c ****        *  ORE (OverRun error) and IDLE (Idle line detected) flags are cleared by software 
 615:./uart/uart.c ****        *     sequence: 
 616:./uart/uart.c ****        *       1. a read operation to USART_SR register (USART_GetFlagStatus()) 
 617:./uart/uart.c ****        *       2. followed by a read operation to USART_DR register (USART_ReceiveData()).
 618:./uart/uart.c ****        * 
 619:./uart/uart.c ****        *     RXNE flag can be also cleared by a read to the USART_DR register (USART_ReceiveData())
 620:./uart/uart.c ****        */
 621:./uart/uart.c ****        //
 622:./uart/uart.c **** 
 623:./uart/uart.c **** 	  // here try to append the data to the received buffer
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\cc7HEfWI.s 			page 37


 624:./uart/uart.c **** 		if(!uart_rx_buffer_add(data))
 1473              		.loc 1 624 7
 1474 004a FB7B     		ldrb	r3, [r7, #15]
 1475 004c DBB2     		uxtb	r3, r3
 1476 004e 1846     		mov	r0, r3
 1477 0050 FFF7FEFF 		bl	uart_rx_buffer_add
 1478 0054 0346     		mov	r3, r0
 1479              		.loc 1 624 5
 1480 0056 002B     		cmp	r3, #0
 1481 0058 04D1     		bne	.L65
 625:./uart/uart.c **** 		{
 626:./uart/uart.c **** 		  // it is failed to add a new data as buffer is full
 627:./uart/uart.c **** 			uart_reset();
 1482              		.loc 1 627 4
 1483 005a FFF7FEFF 		bl	uart_reset
 628:./uart/uart.c **** 			buffer_overflow=1;	      
 1484              		.loc 1 628 19
 1485 005e 064B     		ldr	r3, .L67+8
 1486 0060 0122     		movs	r2, #1
 1487 0062 1A70     		strb	r2, [r3]
 1488              	.L65:
 629:./uart/uart.c **** 		}
 630:./uart/uart.c **** 	}
 631:./uart/uart.c ****      
 632:./uart/uart.c ****   return data;	
 1489              		.loc 1 632 10
 1490 0064 FB7B     		ldrb	r3, [r7, #15]
 1491 0066 DBB2     		uxtb	r3, r3
 633:./uart/uart.c **** 
 634:./uart/uart.c **** }
 1492              		.loc 1 634 1
 1493 0068 1846     		mov	r0, r3
 1494 006a 1037     		adds	r7, r7, #16
 1495              	.LCFI97:
 1496              		.cfi_def_cfa_offset 8
 1497 006c BD46     		mov	sp, r7
 1498              	.LCFI98:
 1499              		.cfi_def_cfa_register 13
 1500              		@ sp needed
 1501 006e 80BD     		pop	{r7, pc}
 1502              	.L68:
 1503              		.align	2
 1504              	.L67:
 1505 0070 00380140 		.word	1073821696
 1506 0074 00000000 		.word	relays
 1507 0078 00000000 		.word	buffer_overflow
 1508              		.cfi_endproc
 1509              	.LFE53:
 1511              		.section	.rodata
 1512              		.align	2
 1513              	.LC6:
 1514 0018 203B00   		.ascii	" ;\000"
 1515              		.section	.text.uart_data_is_available,"ax",%progbits
 1516              		.align	1
 1517              		.global	uart_data_is_available
 1518              		.syntax unified
 1519              		.thumb
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\cc7HEfWI.s 			page 38


 1520              		.thumb_func
 1522              	uart_data_is_available:
 1523              	.LFB54:
 635:./uart/uart.c **** //-----------------------------------------------------------------------------
 636:./uart/uart.c **** /**
 637:./uart/uart.c ****  * @brief checks if data is available 
 638:./uart/uart.c ****  * @details it checks if a complete command message has received
 639:./uart/uart.c ****  * 			note that each command message should ends witha space and ; == " ;"
 640:./uart/uart.c ****  * @return uint8_t 
 641:./uart/uart.c ****  */
 642:./uart/uart.c **** uint8_t uart_data_is_available(void)
 643:./uart/uart.c **** {
 1524              		.loc 1 643 1
 1525              		.cfi_startproc
 1526              		@ args = 0, pretend = 0, frame = 8
 1527              		@ frame_needed = 1, uses_anonymous_args = 0
 1528              		@ link register save eliminated.
 1529 0000 80B4     		push	{r7}
 1530              	.LCFI99:
 1531              		.cfi_def_cfa_offset 4
 1532              		.cfi_offset 7, -4
 1533 0002 83B0     		sub	sp, sp, #12
 1534              	.LCFI100:
 1535              		.cfi_def_cfa_offset 16
 1536 0004 00AF     		add	r7, sp, #0
 1537              	.LCFI101:
 1538              		.cfi_def_cfa_register 7
 644:./uart/uart.c ****  char * delim=" ;";
 1539              		.loc 1 644 9
 1540 0006 0A4B     		ldr	r3, .L72
 1541 0008 7B60     		str	r3, [r7, #4]
 645:./uart/uart.c ****  if(rx_buffer_length!=0)
 1542              		.loc 1 645 21
 1543 000a 0A4B     		ldr	r3, .L72+4
 1544 000c 1B78     		ldrb	r3, [r3]
 1545 000e DBB2     		uxtb	r3, r3
 1546              		.loc 1 645 4
 1547 0010 002B     		cmp	r3, #0
 1548 0012 06D0     		beq	.L70
 1549              	.LBB7:
 646:./uart/uart.c ****  {	 
 647:./uart/uart.c ****     const uint8_t * tmp=0;//(uint8_t *) memmem((uint8_t *)rx_buffer,rx_buffer_length,(uint8_t *)del
 1550              		.loc 1 647 21
 1551 0014 0023     		movs	r3, #0
 1552 0016 3B60     		str	r3, [r7]
 648:./uart/uart.c ****    if(tmp!=NULL)
 1553              		.loc 1 648 6
 1554 0018 3B68     		ldr	r3, [r7]
 1555 001a 002B     		cmp	r3, #0
 1556 001c 01D0     		beq	.L70
 649:./uart/uart.c ****      return 1;
 1557              		.loc 1 649 13
 1558 001e 0123     		movs	r3, #1
 1559 0020 00E0     		b	.L71
 1560              	.L70:
 1561              	.LBE7:
 650:./uart/uart.c ****  }
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\cc7HEfWI.s 			page 39


 651:./uart/uart.c ****   
 652:./uart/uart.c ****  return 0;
 1562              		.loc 1 652 9
 1563 0022 0023     		movs	r3, #0
 1564              	.L71:
 653:./uart/uart.c **** }
 1565              		.loc 1 653 1
 1566 0024 1846     		mov	r0, r3
 1567 0026 0C37     		adds	r7, r7, #12
 1568              	.LCFI102:
 1569              		.cfi_def_cfa_offset 4
 1570 0028 BD46     		mov	sp, r7
 1571              	.LCFI103:
 1572              		.cfi_def_cfa_register 13
 1573              		@ sp needed
 1574 002a 80BC     		pop	{r7}
 1575              	.LCFI104:
 1576              		.cfi_restore 7
 1577              		.cfi_def_cfa_offset 0
 1578 002c 7047     		bx	lr
 1579              	.L73:
 1580 002e 00BF     		.align	2
 1581              	.L72:
 1582 0030 18000000 		.word	.LC6
 1583 0034 00000000 		.word	rx_buffer_length
 1584              		.cfi_endproc
 1585              	.LFE54:
 1587              		.text
 1588              	.Letext0:
 1589              		.file 2 "c:\\arm-tool\\gcc-arm-none-eabi-10.3-2021.10\\arm-none-eabi\\include\\machine\\_default_t
 1590              		.file 3 "c:\\arm-tool\\gcc-arm-none-eabi-10.3-2021.10\\arm-none-eabi\\include\\sys\\_stdint.h"
 1591              		.file 4 "./.driver/CMSIS/Device/STM32F10x/stm32f10x.h"
 1592              		.file 5 "./basic/structs.h"
 1593              		.file 6 "./basic/gpio.h"
 1594              		.file 7 "./uart/uart.h"
 1595              		.file 8 "./system/system.h"
 1596              		.file 9 "./init/init.h"
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\cc7HEfWI.s 			page 40


DEFINED SYMBOLS
                            *ABS*:00000000 uart.c
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\cc7HEfWI.s:21     .bss.uart_state:00000000 uart_state
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\cc7HEfWI.s:22     .bss.uart_state:00000000 $d
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\cc7HEfWI.s:28     .bss.uart_ticks:00000000 uart_ticks
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\cc7HEfWI.s:25     .bss.uart_ticks:00000000 $d
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\cc7HEfWI.s:35     .bss.rx_index:00000000 rx_index
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\cc7HEfWI.s:32     .bss.rx_index:00000000 $d
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\cc7HEfWI.s:42     .bss.rx_buffer:00000000 rx_buffer
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\cc7HEfWI.s:39     .bss.rx_buffer:00000000 $d
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\cc7HEfWI.s:48     .bss.rx_buffer_length:00000000 rx_buffer_length
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\cc7HEfWI.s:49     .bss.rx_buffer_length:00000000 $d
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\cc7HEfWI.s:54     .bss.buffer_overflow:00000000 buffer_overflow
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\cc7HEfWI.s:55     .bss.buffer_overflow:00000000 $d
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\cc7HEfWI.s:61     .data.uart_tx:00000000 uart_tx
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\cc7HEfWI.s:58     .data.uart_tx:00000000 $d
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\cc7HEfWI.s:70     .data.uart_rx:00000000 uart_rx
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\cc7HEfWI.s:67     .data.uart_rx:00000000 $d
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\cc7HEfWI.s:75     .data.uart_delimiter:00000000 $d
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\cc7HEfWI.s:78     .data.uart_delimiter:00000000 uart_delimiter
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\cc7HEfWI.s:81     .text.uart_reg_read_byte:00000000 $t
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\cc7HEfWI.s:87     .text.uart_reg_read_byte:00000000 uart_reg_read_byte
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\cc7HEfWI.s:137    .text.uart_reg_write_byte:00000000 $t
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\cc7HEfWI.s:143    .text.uart_reg_write_byte:00000000 uart_reg_write_byte
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\cc7HEfWI.s:193    .text.uart_reg_write_buffer:00000000 $t
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\cc7HEfWI.s:199    .text.uart_reg_write_buffer:00000000 uart_reg_write_buffer
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\cc7HEfWI.s:263    .text.uart_reset:00000000 $t
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\cc7HEfWI.s:269    .text.uart_reset:00000000 uart_reset
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\cc7HEfWI.s:331    .text.uart_reset:00000034 $d
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\cc7HEfWI.s:337    .text.uart_rx_buffer_add:00000000 $t
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\cc7HEfWI.s:343    .text.uart_rx_buffer_add:00000000 uart_rx_buffer_add
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\cc7HEfWI.s:410    .text.uart_rx_buffer_add:00000040 $d
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\cc7HEfWI.s:416    .text.startswith_header:00000000 $t
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\cc7HEfWI.s:422    .text.startswith_header:00000000 startswith_header
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\cc7HEfWI.s:506    .text.endswith_delimiter:00000000 $t
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\cc7HEfWI.s:511    .text.endswith_delimiter:00000000 endswith_delimiter
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\cc7HEfWI.s:604    .text.uart_receive_start:00000000 $t
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\cc7HEfWI.s:610    .text.uart_receive_start:00000000 uart_receive_start
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\cc7HEfWI.s:633    .text.uart_receive_stop:00000000 $t
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\cc7HEfWI.s:639    .text.uart_receive_stop:00000000 uart_receive_stop
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\cc7HEfWI.s:662    .text.uart_islistening:00000000 $t
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\cc7HEfWI.s:668    .text.uart_islistening:00000000 uart_islistening
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\cc7HEfWI.s:699    .text.uart_send_byte:00000000 $t
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\cc7HEfWI.s:705    .text.uart_send_byte:00000000 uart_send_byte
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\cc7HEfWI.s:746    .text.uart_send_buffer:00000000 $t
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\cc7HEfWI.s:752    .text.uart_send_buffer:00000000 uart_send_buffer
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\cc7HEfWI.s:793    .text.uart_send_message:00000000 $t
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\cc7HEfWI.s:799    .text.uart_send_message:00000000 uart_send_message
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\cc7HEfWI.s:840    .text.uart_print:00000000 $t
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\cc7HEfWI.s:846    .text.uart_print:00000000 uart_print
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\cc7HEfWI.s:889    .text.uart_println:00000000 $t
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\cc7HEfWI.s:895    .text.uart_println:00000000 uart_println
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\cc7HEfWI.s:946    .rodata:00000000 $d
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\cc7HEfWI.s:956    .text.uart_print_integer:00000000 $t
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\cc7HEfWI.s:962    .text.uart_print_integer:00000000 uart_print_integer
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\cc7HEfWI.s:1042   .text.uart_print_integer:00000068 $d
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\cc7HEfWI.s:1056   .text.uart_print_float:00000000 $t
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\cc7HEfWI.s 			page 41


C:\Users\SAMEER~1.ALM\AppData\Local\Temp\cc7HEfWI.s:1062   .text.uart_print_float:00000000 uart_print_float
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\cc7HEfWI.s:1150   .text.uart_print_float:00000084 $d
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\cc7HEfWI.s:1160   .text.uart_print_Array:00000000 $t
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\cc7HEfWI.s:1166   .text.uart_print_Array:00000000 uart_print_Array
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\cc7HEfWI.s:1270   .text.uart_print_Array:000000a0 $d
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\cc7HEfWI.s:1277   .text.uart_println_Array:00000000 $t
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\cc7HEfWI.s:1283   .text.uart_println_Array:00000000 uart_println_Array
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\cc7HEfWI.s:1369   .text.uart_println_Array:0000007c $d
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\cc7HEfWI.s:1374   .text.uart_init:00000000 $t
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\cc7HEfWI.s:1380   .text.uart_init:00000000 uart_init
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\cc7HEfWI.s:1405   .text.uart_receive:00000000 $t
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\cc7HEfWI.s:1411   .text.uart_receive:00000000 uart_receive
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\cc7HEfWI.s:1505   .text.uart_receive:00000070 $d
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\cc7HEfWI.s:1516   .text.uart_data_is_available:00000000 $t
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\cc7HEfWI.s:1522   .text.uart_data_is_available:00000000 uart_data_is_available
C:\Users\SAMEER~1.ALM\AppData\Local\Temp\cc7HEfWI.s:1582   .text.uart_data_is_available:00000030 $d
                           .group:00000000 wm4.0.f4779009c199947b70d43074c2c41c8e
                           .group:00000000 wm4.stm32f10x.h.50.d4f13d34ecdc4ac490487d4d35cb5131
                           .group:00000000 wm4.core_cm3.h.25.d35e9a9b04ec4aaebae9bf79fff061f9
                           .group:00000000 wm4._newlib_version.h.4.bfdf54b0af045d4a71376ae00f63a22c
                           .group:00000000 wm4.features.h.33.318b64d71e0957639cfb30f1db1f7ec8
                           .group:00000000 wm4._default_types.h.15.247e5cd201eca3442cbf5404108c4935
                           .group:00000000 wm4._intsup.h.10.48bafbb683905c4daa4565a85aeeb264
                           .group:00000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:00000000 wm4.stdint.h.23.d53047a68f4a85177f80b422d52785ed
                           .group:00000000 wm4.core_cm3.h.113.b286929a54d33b4c8909a7132437b244
                           .group:00000000 wm4.stm32f10x.h.525.b40cb5ee4fd40825ea8ccc10ea6f4722
                           .group:00000000 wm4.stm32f10x_adc.h.82.085dab8bb2bdf6609e97ee2fc7a88347
                           .group:00000000 wm4.stm32f10x_bkp.h.24.9f1bb2b1135ba72667dd3fcde11cf4b7
                           .group:00000000 wm4.stm32f10x_can.h.24.b871c380ea975c71825bf46cccde3c7a
                           .group:00000000 wm4.stm32f10x_cec.h.24.a1ee61cba6b8120b5bab40528e933770
                           .group:00000000 wm4.stm32f10x_dac.h.24.39482d0fe30ddea181f0c79f49fb629e
                           .group:00000000 wm4.stm32f10x_dbgmcu.h.24.f73145056e79bc5a93dd6677b2b33d54
                           .group:00000000 wm4.stm32f10x_dma.h.24.a48d4478db5b2956954d84bc5fd35ae1
                           .group:00000000 wm4.stm32f10x_exti.h.24.377f48157d7e463bb3841cf6c97a1c93
                           .group:00000000 wm4.stm32f10x_flash.h.24.877157533caf7ce4331c44a3d0ea5612
                           .group:00000000 wm4.stm32f10x_fsmc.h.24.0518485f192fab09dd5cfc912ded3186
                           .group:00000000 wm4.stm32f10x_gpio.h.24.b627ee324fedf5e3b8730fa015ea30de
                           .group:00000000 wm4.stm32f10x_i2c.h.24.8bc26b82f9e7563ca7234eabea47534c
                           .group:00000000 wm4.stm32f10x_iwdg.h.24.129c4cff233d2076aefd5fc4fbf5956b
                           .group:00000000 wm4.stm32f10x_pwr.h.24.98a178bf0c8fa18634174f1c1123c7bc
                           .group:00000000 wm4.stm32f10x_rcc.h.24.43948985157a0da383ddce718b66f782
                           .group:00000000 wm4.stm32f10x_rtc.h.24.496e77df0282a7f4dc79c6de18da3ecc
                           .group:00000000 wm4.stm32f10x_sdio.h.24.646055cc54873a75158b5d1015b409e6
                           .group:00000000 wm4.stm32f10x_spi.h.24.e7b2623920274a1745e534a7a7156e76
                           .group:00000000 wm4.stm32f10x_tim.h.24.24ac72f04686046a18ee9117ff7bba1f
                           .group:00000000 wm4.stm32f10x_usart.h.24.cf5f8d8e971fad2927ee799886f23b78
                           .group:00000000 wm4.stm32f10x_wwdg.h.24.7f7037b09db3a78d5a9de97b2cba748a
                           .group:00000000 wm4.misc.h.24.c54738789d48fd25c957e9d7c7349497
                           .group:00000000 wm4.stm32f10x.h.8349.9a0c7ea810a74ad6d06203f1a551aebb
                           .group:00000000 wm4.ieeefp.h.77.25247dc27dbe3b23bfe98c2dc18f6ac5
                           .group:00000000 wm4.newlib.h.8.4679f89e52c9f69cd44f3a27cd28c759
                           .group:00000000 wm4.config.h.224.79362c3cdb280fe0b8d95bd0bc4d5c54
                           .group:00000000 wm4._ansi.h.31.de524f58584151836e90d8620a16f8e8
                           .group:00000000 wm4.stdlib.h.13.4ed386f5c1a80d71e72172885d946ef2
                           .group:00000000 wm4.stddef.h.181.13772e73e5434e8cc4fafaaddad2b5da
                           .group:00000000 wm4.stddef.h.39.cf3ebec0bc8c9e3d2f276a64e0fe5e7a
ARM GAS  C:\Users\SAMEER~1.ALM\AppData\Local\Temp\cc7HEfWI.s 			page 42


                           .group:00000000 wm4._types.h.20.dd0d04dca3800a0d2a6129b87f3adbb2
                           .group:00000000 wm4.stddef.h.155.3588ebfdd1e8c7ede80509bb9c3b8009
                           .group:00000000 wm4._types.h.127.34941de1b2539d59d5cac00e0dd27a45
                           .group:00000000 wm4.reent.h.17.e292bf8b0bec6c96e131a54347145a30
                           .group:00000000 wm4.lock.h.2.1461d1fff82dffe8bfddc23307f6484f
                           .group:00000000 wm4.reent.h.77.32fd7d280fc2a40b0797abce5beaf6e3
                           .group:00000000 wm4.assert.h.11.db24e541f16414db224bf986d21017e2
                           .group:00000000 wm4.reent.h.504.40d20ade344680fbcb6a0178bf7ae09e
                           .group:00000000 wm4.cdefs.h.49.39045112216f6a021dbdffe3bf5accce
                           .group:00000000 wm4.alloca.h.8.dfc0c703c47ec3e69746825b17d9e66d
                           .group:00000000 wm4.stdlib.h.56.f4862cfbf4363a1db01842d5bdf72c18
                           .group:00000000 wm4.stdio.h.27.3fc80220048df77954e38daec3bb9670
                           .group:00000000 wm4.stddef.h.155.ba788add86a0e365f264484f110c3c29
                           .group:00000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:00000000 wm4.types.h.40.8b6acba56cefbb11746718204edc8f5e
                           .group:00000000 wm4._endian.h.31.65a10590763c3dde1ac4a7f66d7d4891
                           .group:00000000 wm4.endian.h.9.49f3a4695c1b61e8a0808de3c4a106cb
                           .group:00000000 wm4._timeval.h.32.bec3221fa7a9bb0bdde696c9c57e47d2
                           .group:00000000 wm4.timespec.h.41.d855182eb0e690443ab8651bcedca6e1
                           .group:00000000 wm4.select.h.19.40cd3f2bfc456b193b790c2754690ebf
                           .group:00000000 wm4.types.h.51.5571ec98f267d17d3c670b7a3ba33afa
                           .group:00000000 wm4.sched.h.22.c60982713a5c428609783c78f9c78d95
                           .group:00000000 wm4._pthreadtypes.h.36.fcee9961c35163dde6267ef772ad1972
                           .group:00000000 wm4.stdio.h.2.4aa87247282eca6c8f36f9de33d8df1a
                           .group:00000000 wm4.stdio.h.81.60a2ded7dae310b81f9d6907fe5e3dbf
                           .group:00000000 wm4.stdarg.h.31.3fa7b8f6daaa31edd1696c08c77f2a73
                           .group:00000000 wm4.ctype.h.34.80f174baaec468e2eb1c07380b0b3287
                           .group:00000000 wm4.inttypes.h.14.b28deb26920e51e0da310220ef0f9003
                           .group:00000000 wm4.inttypes.h.28.c3e61b48c6ae3a7cb62609add2dd53d1
                           .group:00000000 wm4.stdalign.h.27.0aad28df4d66a8553430227d1bac48aa
                           .group:00000000 wm4.syslimits.h.34.de5cbd310098bc5895998b6bde577ed2
                           .group:00000000 wm4.limits.h.9.70fb0ada6f71b16202a66baaa6d8ea70
                           .group:00000000 wm4.limits.h.60.56a1ae353e2028a24298ec6463b8b593
                           .group:00000000 wm4.math.h.13.4f4c30988c5d76b6bf30dd7e2791b7c6
                           .group:00000000 wm4.string.h.8.c4b8571ce60dff2817f43fec8b86aecd
                           .group:00000000 wm4.basic.h.41.94a451f5fb0fa08d75d6da09336bd2f4
                           .group:00000000 wm4.structs.h.12.142e94c12fffe9b2bba6755d00a8ad91
                           .group:00000000 wm4.time.h.12.ca6eecf26198e1bc6166f71fd8292735
                           .group:00000000 wm4.initmacro.h.4.2927af5a543f65dade9f92f80a04dc35
                           .group:00000000 wm4.uart.h.10.7fda6319aa568019dcdbb67d33f81700
                           .group:00000000 wm4.i2ccom.h.10.147b279fb90e839345ab35ddb589e0ce
                           .group:00000000 wm4.i2cstd.h.10.97f20a95300a6b7d08ecafad2c6b5572
                           .group:00000000 wm4.i2c.h.24.666d2983f106290f51d8fe2e4e0034bc
                           .group:00000000 wm4.mpu6050.h.10.2241e5539305f80e00470fd45fbe7041
                           .group:00000000 wm4.lcd.h.11.3a2e2f95e46d234fe99d1d3e8f20de18
                           .group:00000000 wm4.systemtask.h.12.0c4e135a1a57011ea295f9384c4769e6

UNDEFINED SYMBOLS
USART_GetFlagStatus
strlen
itoa
float_to_real
USART1_init
uart_put_char
relays
